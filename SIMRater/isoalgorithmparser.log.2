2015-01-01 16:06:06,096 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='93BBD210-679F-4516-BA9F-3629CFE79583' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:06,602 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='SRERequest'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:06,613 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getRecords(ProcessXMLDAO.java:244) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [  . ] where $x/Name='SRERequest'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:06,620 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Premium' ] where $x/Id='93BBD210-679F-4516-BA9F-3629CFE79583-SRERequest'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:06,626 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='93BBD210-679F-4516-BA9F-3629CFE79583-SRERequest-Premium'  and $x/RatingProcess='93BBD210-679F-4516-BA9F-3629CFE79583-SRERequest' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:06,635 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest
2015-01-01 16:06:06,635 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/Premium
2015-01-01 16:06:06,655 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:06,655 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:06,655 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:06,655 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:06,655 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LOOP THROUGH "CommercialAuto"
							Premium = Premium + XPATH:"CommercialAuto/Premium"
						END LOOP 
2015-01-01 16:06:06,655 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:06,697 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:06,698 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (LOOP THROUGH "CommercialAuto" (= Premium (+ Premium XPATH : "CommercialAuto/Premium")))
2015-01-01 16:06:06,698 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:06,707 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAuto
2015-01-01 16:06:06,708 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAuto
2015-01-01 16:06:06,709 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:100) - XpathResolver IteratorXpath set to : CommercialAuto
2015-01-01 16:06:06,712 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:102) - XpathResolver XPath set to : /SRERequest/CommercialAuto
2015-01-01 16:06:06,712 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:104) - XpathResolver Reference XPath set to -> /SRERequest/CommercialAuto
2015-01-01 16:06:06,712 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest
2015-01-01 16:06:06,715 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest
2015-01-01 16:06:06,715 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:06,715 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:06,716 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:06,718 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,718 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/Premium
2015-01-01 16:06:06,718 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/Premium returns true
2015-01-01 16:06:06,718 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/Premium
2015-01-01 16:06:06,719 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:06,720 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest
2015-01-01 16:06:06,720 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:06,720 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:06,720 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:06,721 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,721 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/Premium
2015-01-01 16:06:06,721 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/Premium returns true
2015-01-01 16:06:06,722 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/Premium
2015-01-01 16:06:06,722 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:06,722 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "CommercialAuto/Premium"
2015-01-01 16:06:06,723 [main] INFO  com.mmpnc.rating.algorithm.util.XPathResolver.getUpdatedXpath(XPathResolver.java:66) - 1. [Complete Match] CommercialAuto/ is present in CommercialAuto/Premium/
2015-01-01 16:06:06,723 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:79) - xpath in XpathEvaluator [with loop enables] CommercialAuto/Premium @ /SRERequest
2015-01-01 16:06:06,724 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:80) - unique xpath in XpathEvaluator [with loop enables] /SRERequest/CommercialAuto/Premium @ /SRERequest
2015-01-01 16:06:06,724 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for CommercialAuto/Premium with reference value as /SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,724 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,724 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/Premium returns false
2015-01-01 16:06:06,725 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:06,725 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,726 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto
2015-01-01 16:06:06,729 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getProduct(ProcessBlockExecutor.java:469) - We got the Ratebook as 93BBD210-679F-4516-BA9F-3629CFE79583 at /SRERequest/CommercialAuto
2015-01-01 16:06:06,729 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='93BBD210-679F-4516-BA9F-3629CFE79583' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:06,754 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:06,754 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAuto'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:06,758 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and Name='Premium Calculation'  and ExecutionOrder='0' ] where $x/Id='87FAA9FB-C3FE-36C3-9FD5-974CEECEC2C7'  and $x/Name='CommercialAuto'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:06,763 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 160A6C8B-6A7C-3818-996C-B4107AB46F84
2015-01-01 16:06:06,764 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Premium' ] where $x/Id='160A6C8B-6A7C-3818-996C-B4107AB46F84'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:06,769 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 1BE7E506-CA0D-3B69-B345-FF06DA4D2F0F
2015-01-01 16:06:06,770 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name Premium
2015-01-01 16:06:06,770 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='1BE7E506-CA0D-3B69-B345-FF06DA4D2F0F' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:06,808 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:06,808 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:06,809 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:06,809 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:06,809 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LOOP THROUGH "CommercialAutoAbuseOrMolestationExclusionForGeneralLiabilityCoverages" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAbuseOrMolestationExclusionForGeneralLiabilityCoverages/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoAdditionalInsuredGaragesGrantorFranchise" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAdditionalInsuredGaragesGrantorFranchise/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoAdditionalInsuredGeneralLiabilityCoveragesConcessionairesTradingUnderYourName" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAdditionalInsuredGeneralLiabilityCoveragesConcessionairesTradingUnderYourName/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoAdditionalInsuredLessorOfLeasedEquipment" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAdditionalInsuredLessorOfLeasedEquipment/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoAddlInsuredGenllLiabilityCovsLessorOfLeasedEquipmtAutomtcStatusWhenRqdInLeasedAgrmtWithYou" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAddlInsuredGenllLiabilityCovsLessorOfLeasedEquipmtAutomtcStatusWhenRqdInLeasedAgrmtWithYou/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoAmendmentOfLimitsOfInsuranceGeneralLiabilityCoverages" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAmendmentOfLimitsOfInsuranceGeneralLiabilityCoverages/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoAutosLeasedHiredRentedDriversPhysicalDamageCov" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAutosLeasedHiredRentedDriversPhysicalDamageCov/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoBusinessInterruptionCoverage" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoBusinessInterruptionCoverage/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoChangesToTheBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoChangesToTheBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoCommunicableDiseaseExclusionForGeneralLiabilityCoverages" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoCommunicableDiseaseExclusionForGeneralLiabilityCoverages/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoCoverageForInjuryToLeasedWorkers" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoCoverageForInjuryToLeasedWorkers/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoCustomerComplaintLegalDefenseCoverage" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoCustomerComplaintLegalDefenseCoverage/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoDealersDriveAwayCollisionCov" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoDealersDriveAwayCollisionCov/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoDesignatedLocationsGeneralLiabilityAggregateLimitForCertainGeneralLiabilityCoverages" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoDesignatedLocationsGeneralLiabilityAggregateLimitForCertainGeneralLiabilityCoverages/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoDriveOtherCarCovBroadenedCovForNamedIndividuals" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoDriveOtherCarCovBroadenedCovForNamedIndividuals/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoDrivingSchool" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoDrivingSchool/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoEmployeeBenefitsLiabilityCoverage" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoEmployeeBenefitsLiabilityCoverage/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoExclusionDesignatedProducts" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoExclusionDesignatedProducts/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoExclusionDesignatedWorkYouPerformed" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoExclusionDesignatedWorkYouPerformed/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoExclusionNewlyAcquiredOrFormedAutoDealership" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoExclusionNewlyAcquiredOrFormedAutoDealership/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsExceptionBodilyInjuryPremises" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsExceptionBodilyInjuryPremises/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsProductsWork" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsProductsWork/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoExpandedCoverageTerritoryForGeneralLiabilityCoveragesAdditionalScheduledCountries" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoExpandedCoverageTerritoryForGeneralLiabilityCoveragesAdditionalScheduledCountries/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoExtendedReportingPeriodEndorsementForEmployeeBenefitsLiabilityCoverage" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoExtendedReportingPeriodEndorsementForEmployeeBenefitsLiabilityCoverage/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoFellowEmployeeCov" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoFellowEmployeeCov/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoFellowEmployeeCoverageForDesignatedEmployeesPositions" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoFellowEmployeeCoverageForDesignatedEmployeesPositions/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoFinancialResponsibility" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoFinancialResponsibility/Premium" 
END LOOP
Premium = Premium + XPATH_NUMERIC:"CommercialAutoFuneralDirectorMedicalPaymentsCoverage/Premium"
LOOP THROUGH "CommercialAutoFungiOrBacteriaExclusionGarageOperationsOtherThanCoveredAutos" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoFungiOrBacteriaExclusionGarageOperationsOtherThanCoveredAutos/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoGarage" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoGarage/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoGarageServices" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoGarageServices/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoGaragekeepersCov" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoGaragekeepersCov/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoGaragekeepersCovCustomersSoundReceivingEquipment" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoGaragekeepersCovCustomersSoundReceivingEquipment/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoGrossReceiptsBasis" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoGrossReceiptsBasis/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoHiredAuto" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoHiredAuto/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoLeasingOrRentalConcernsContingentCoverage" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoLeasingOrRentalConcernsContingentCoverage/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoLimitedContractualLiabilityCoverageForPersonalAndAdvertisingInjury" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoLimitedContractualLiabilityCoverageForPersonalAndAdvertisingInjury/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoLimitedFungiOrBacteriaCoverageForGarageOperationsOtherThanCoveredAutos" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoLimitedFungiOrBacteriaCoverageForGarageOperationsOtherThanCoveredAutos/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoLimitedMexicoCoverage" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoLimitedMexicoCoverage/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoLimitedProductWithdrawalExpenseEndorsement" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoLimitedProductWithdrawalExpenseEndorsement/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoNamedDriverCollisionCovPolLvl" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoNamedDriverCollisionCovPolLvl/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoNonOwnedAuto" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoNonOwnedAuto/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoOptionalLimitsLossOfUseExpenses" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoOptionalLimitsLossOfUseExpenses/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoPolicyRentalReimbursementCoverage" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoPolicyRentalReimbursementCoverage/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoPollutionLiabBroadenedCovBusinessAutoMotorCarrierTruckersCovForms" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoPollutionLiabBroadenedCovBusinessAutoMotorCarrierTruckersCovForms/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoPollutionLiabilityBroadenedCoverageForCoveredAutosGarageCoverageForm" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoPollutionLiabilityBroadenedCoverageForCoveredAutosGarageCoverageForm/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoPremiumAdjustmentForm" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoPremiumAdjustmentForm/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoPrivatePassenger" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoPrivatePassenger/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoPublicTransportation" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoPublicTransportation/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoSilicaOrSilicaRelatedDustExclusionForCoveredAutosExposure" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoSilicaOrSilicaRelatedDustExclusionForCoveredAutosExposure/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoSilicaOrSilicaRelatedDustExclusionForOtherThanCoveredAutosExposureGarageCoverageForm" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoSilicaOrSilicaRelatedDustExclusionForOtherThanCoveredAutosExposureGarageCoverageForm/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoSpecialTypes" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoSpecialTypes/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoTotalBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoTotalBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoTrailerInterchangeAgreement" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoTrailerInterchangeAgreement/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoTruck" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoTruck/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoWorldwideGeneralLiabilityCoverages" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoWorldwideGeneralLiabilityCoverages/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoYear2000ComputerRelatedElectronicProblemsExclusionSpecifiedCoverages" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoYear2000ComputerRelatedElectronicProblemsExclusionSpecifiedCoverages/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoYear2000LimitedCoverageOptions" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoYear2000LimitedCoverageOptions/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoZoneRated" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoZoneRated/Premium" 
END LOOP

2015-01-01 16:06:06,809 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:06,824 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:06,825 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (LOOP THROUGH "CommercialAutoAbuseOrMolestationExclusionForGeneralLiabilityCoverages" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAbuseOrMolestationExclusionForGeneralLiabilityCoverages/Premium"))) (LOOP THROUGH "CommercialAutoAdditionalInsuredGaragesGrantorFranchise" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAdditionalInsuredGaragesGrantorFranchise/Premium"))) (LOOP THROUGH "CommercialAutoAdditionalInsuredGeneralLiabilityCoveragesConcessionairesTradingUnderYourName" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAdditionalInsuredGeneralLiabilityCoveragesConcessionairesTradingUnderYourName/Premium"))) (LOOP THROUGH "CommercialAutoAdditionalInsuredLessorOfLeasedEquipment" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAdditionalInsuredLessorOfLeasedEquipment/Premium"))) (LOOP THROUGH "CommercialAutoAddlInsuredGenllLiabilityCovsLessorOfLeasedEquipmtAutomtcStatusWhenRqdInLeasedAgrmtWithYou" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAddlInsuredGenllLiabilityCovsLessorOfLeasedEquipmtAutomtcStatusWhenRqdInLeasedAgrmtWithYou/Premium"))) (LOOP THROUGH "CommercialAutoAmendmentOfLimitsOfInsuranceGeneralLiabilityCoverages" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAmendmentOfLimitsOfInsuranceGeneralLiabilityCoverages/Premium"))) (LOOP THROUGH "CommercialAutoAutosLeasedHiredRentedDriversPhysicalDamageCov" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAutosLeasedHiredRentedDriversPhysicalDamageCov/Premium"))) (LOOP THROUGH "CommercialAutoBusinessInterruptionCoverage" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoBusinessInterruptionCoverage/Premium"))) (LOOP THROUGH "CommercialAutoChangesToTheBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoChangesToTheBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages/Premium"))) (LOOP THROUGH "CommercialAutoCommunicableDiseaseExclusionForGeneralLiabilityCoverages" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoCommunicableDiseaseExclusionForGeneralLiabilityCoverages/Premium"))) (LOOP THROUGH "CommercialAutoCoverageForInjuryToLeasedWorkers" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoCoverageForInjuryToLeasedWorkers/Premium"))) (LOOP THROUGH "CommercialAutoCustomerComplaintLegalDefenseCoverage" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoCustomerComplaintLegalDefenseCoverage/Premium"))) (LOOP THROUGH "CommercialAutoDealersDriveAwayCollisionCov" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoDealersDriveAwayCollisionCov/Premium"))) (LOOP THROUGH "CommercialAutoDesignatedLocationsGeneralLiabilityAggregateLimitForCertainGeneralLiabilityCoverages" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoDesignatedLocationsGeneralLiabilityAggregateLimitForCertainGeneralLiabilityCoverages/Premium"))) (LOOP THROUGH "CommercialAutoDriveOtherCarCovBroadenedCovForNamedIndividuals" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoDriveOtherCarCovBroadenedCovForNamedIndividuals/Premium"))) (LOOP THROUGH "CommercialAutoDrivingSchool" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoDrivingSchool/Premium"))) (LOOP THROUGH "CommercialAutoEmployeeBenefitsLiabilityCoverage" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoEmployeeBenefitsLiabilityCoverage/Premium"))) (LOOP THROUGH "CommercialAutoExclusionDesignatedProducts" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoExclusionDesignatedProducts/Premium"))) (LOOP THROUGH "CommercialAutoExclusionDesignatedWorkYouPerformed" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoExclusionDesignatedWorkYouPerformed/Premium"))) (LOOP THROUGH "CommercialAutoExclusionNewlyAcquiredOrFormedAutoDealership" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoExclusionNewlyAcquiredOrFormedAutoDealership/Premium"))) (LOOP THROUGH "CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsExceptionBodilyInjuryPremises" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsExceptionBodilyInjuryPremises/Premium"))) (LOOP THROUGH "CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsProductsWork" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsProductsWork/Premium"))) (LOOP THROUGH "CommercialAutoExpandedCoverageTerritoryForGeneralLiabilityCoveragesAdditionalScheduledCountries" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoExpandedCoverageTerritoryForGeneralLiabilityCoveragesAdditionalScheduledCountries/Premium"))) (LOOP THROUGH "CommercialAutoExtendedReportingPeriodEndorsementForEmployeeBenefitsLiabilityCoverage" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoExtendedReportingPeriodEndorsementForEmployeeBenefitsLiabilityCoverage/Premium"))) (LOOP THROUGH "CommercialAutoFellowEmployeeCov" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoFellowEmployeeCov/Premium"))) (LOOP THROUGH "CommercialAutoFellowEmployeeCoverageForDesignatedEmployeesPositions" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoFellowEmployeeCoverageForDesignatedEmployeesPositions/Premium"))) (LOOP THROUGH "CommercialAutoFinancialResponsibility" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoFinancialResponsibility/Premium"))) (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoFuneralDirectorMedicalPaymentsCoverage/Premium")) (LOOP THROUGH "CommercialAutoFungiOrBacteriaExclusionGarageOperationsOtherThanCoveredAutos" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoFungiOrBacteriaExclusionGarageOperationsOtherThanCoveredAutos/Premium"))) (LOOP THROUGH "CommercialAutoGarage" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoGarage/Premium"))) (LOOP THROUGH "CommercialAutoGarageServices" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoGarageServices/Premium"))) (LOOP THROUGH "CommercialAutoGaragekeepersCov" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoGaragekeepersCov/Premium"))) (LOOP THROUGH "CommercialAutoGaragekeepersCovCustomersSoundReceivingEquipment" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoGaragekeepersCovCustomersSoundReceivingEquipment/Premium"))) (LOOP THROUGH "CommercialAutoGrossReceiptsBasis" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoGrossReceiptsBasis/Premium"))) (LOOP THROUGH "CommercialAutoHiredAuto" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoHiredAuto/Premium"))) (LOOP THROUGH "CommercialAutoLeasingOrRentalConcernsContingentCoverage" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoLeasingOrRentalConcernsContingentCoverage/Premium"))) (LOOP THROUGH "CommercialAutoLimitedContractualLiabilityCoverageForPersonalAndAdvertisingInjury" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoLimitedContractualLiabilityCoverageForPersonalAndAdvertisingInjury/Premium"))) (LOOP THROUGH "CommercialAutoLimitedFungiOrBacteriaCoverageForGarageOperationsOtherThanCoveredAutos" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoLimitedFungiOrBacteriaCoverageForGarageOperationsOtherThanCoveredAutos/Premium"))) (LOOP THROUGH "CommercialAutoLimitedMexicoCoverage" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoLimitedMexicoCoverage/Premium"))) (LOOP THROUGH "CommercialAutoLimitedProductWithdrawalExpenseEndorsement" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoLimitedProductWithdrawalExpenseEndorsement/Premium"))) (LOOP THROUGH "CommercialAutoNamedDriverCollisionCovPolLvl" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoNamedDriverCollisionCovPolLvl/Premium"))) (LOOP THROUGH "CommercialAutoNonOwnedAuto" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoNonOwnedAuto/Premium"))) (LOOP THROUGH "CommercialAutoOptionalLimitsLossOfUseExpenses" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoOptionalLimitsLossOfUseExpenses/Premium"))) (LOOP THROUGH "CommercialAutoPolicyRentalReimbursementCoverage" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoPolicyRentalReimbursementCoverage/Premium"))) (LOOP THROUGH "CommercialAutoPollutionLiabBroadenedCovBusinessAutoMotorCarrierTruckersCovForms" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoPollutionLiabBroadenedCovBusinessAutoMotorCarrierTruckersCovForms/Premium"))) (LOOP THROUGH "CommercialAutoPollutionLiabilityBroadenedCoverageForCoveredAutosGarageCoverageForm" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoPollutionLiabilityBroadenedCoverageForCoveredAutosGarageCoverageForm/Premium"))) (LOOP THROUGH "CommercialAutoPremiumAdjustmentForm" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoPremiumAdjustmentForm/Premium"))) (LOOP THROUGH "CommercialAutoPrivatePassenger" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoPrivatePassenger/Premium"))) (LOOP THROUGH "CommercialAutoPublicTransportation" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoPublicTransportation/Premium"))) (LOOP THROUGH "CommercialAutoSilicaOrSilicaRelatedDustExclusionForCoveredAutosExposure" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoSilicaOrSilicaRelatedDustExclusionForCoveredAutosExposure/Premium"))) (LOOP THROUGH "CommercialAutoSilicaOrSilicaRelatedDustExclusionForOtherThanCoveredAutosExposureGarageCoverageForm" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoSilicaOrSilicaRelatedDustExclusionForOtherThanCoveredAutosExposureGarageCoverageForm/Premium"))) (LOOP THROUGH "CommercialAutoSpecialTypes" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoSpecialTypes/Premium"))) (LOOP THROUGH "CommercialAutoTotalBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoTotalBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages/Premium"))) (LOOP THROUGH "CommercialAutoTrailerInterchangeAgreement" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoTrailerInterchangeAgreement/Premium"))) (LOOP THROUGH "CommercialAutoTruck" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoTruck/Premium"))) (LOOP THROUGH "CommercialAutoWorldwideGeneralLiabilityCoverages" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoWorldwideGeneralLiabilityCoverages/Premium"))) (LOOP THROUGH "CommercialAutoYear2000ComputerRelatedElectronicProblemsExclusionSpecifiedCoverages" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoYear2000ComputerRelatedElectronicProblemsExclusionSpecifiedCoverages/Premium"))) (LOOP THROUGH "CommercialAutoYear2000LimitedCoverageOptions" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoYear2000LimitedCoverageOptions/Premium"))) (LOOP THROUGH "CommercialAutoZoneRated" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoZoneRated/Premium")))
2015-01-01 16:06:06,825 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:06,836 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAbuseOrMolestationExclusionForGeneralLiabilityCoverages
2015-01-01 16:06:06,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAbuseOrMolestationExclusionForGeneralLiabilityCoverages
2015-01-01 16:06:06,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAdditionalInsuredGaragesGrantorFranchise
2015-01-01 16:06:06,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAdditionalInsuredGaragesGrantorFranchise
2015-01-01 16:06:06,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAdditionalInsuredGeneralLiabilityCoveragesConcessionairesTradingUnderYourName
2015-01-01 16:06:06,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAdditionalInsuredGeneralLiabilityCoveragesConcessionairesTradingUnderYourName
2015-01-01 16:06:06,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAdditionalInsuredLessorOfLeasedEquipment
2015-01-01 16:06:06,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAdditionalInsuredLessorOfLeasedEquipment
2015-01-01 16:06:06,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAddlInsuredGenllLiabilityCovsLessorOfLeasedEquipmtAutomtcStatusWhenRqdInLeasedAgrmtWithYou
2015-01-01 16:06:06,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAddlInsuredGenllLiabilityCovsLessorOfLeasedEquipmtAutomtcStatusWhenRqdInLeasedAgrmtWithYou
2015-01-01 16:06:06,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAmendmentOfLimitsOfInsuranceGeneralLiabilityCoverages
2015-01-01 16:06:06,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAmendmentOfLimitsOfInsuranceGeneralLiabilityCoverages
2015-01-01 16:06:06,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAutosLeasedHiredRentedDriversPhysicalDamageCov
2015-01-01 16:06:06,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAutosLeasedHiredRentedDriversPhysicalDamageCov
2015-01-01 16:06:06,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoBusinessInterruptionCoverage
2015-01-01 16:06:06,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoBusinessInterruptionCoverage
2015-01-01 16:06:06,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoChangesToTheBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages
2015-01-01 16:06:06,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoChangesToTheBankruptcyOrInsolvencyExclusionForActsErrorsOrOmissionsLiabilityCoverages
2015-01-01 16:06:06,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoCommunicableDiseaseExclusionForGeneralLiabilityCoverages
2015-01-01 16:06:06,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoCommunicableDiseaseExclusionForGeneralLiabilityCoverages
2015-01-01 16:06:06,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoCoverageForInjuryToLeasedWorkers
2015-01-01 16:06:06,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoCoverageForInjuryToLeasedWorkers
2015-01-01 16:06:06,841 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoCustomerComplaintLegalDefenseCoverage
2015-01-01 16:06:06,841 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoCustomerComplaintLegalDefenseCoverage
2015-01-01 16:06:06,841 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoDealersDriveAwayCollisionCov
2015-01-01 16:06:06,841 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoDealersDriveAwayCollisionCov
2015-01-01 16:06:06,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoDesignatedLocationsGeneralLiabilityAggregateLimitForCertainGeneralLiabilityCoverages
2015-01-01 16:06:06,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoDesignatedLocationsGeneralLiabilityAggregateLimitForCertainGeneralLiabilityCoverages
2015-01-01 16:06:06,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoDriveOtherCarCovBroadenedCovForNamedIndividuals
2015-01-01 16:06:06,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoDriveOtherCarCovBroadenedCovForNamedIndividuals
2015-01-01 16:06:06,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoDrivingSchool
2015-01-01 16:06:06,843 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoDrivingSchool
2015-01-01 16:06:06,843 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoEmployeeBenefitsLiabilityCoverage
2015-01-01 16:06:06,843 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoEmployeeBenefitsLiabilityCoverage
2015-01-01 16:06:06,843 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoExclusionDesignatedProducts
2015-01-01 16:06:06,843 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoExclusionDesignatedProducts
2015-01-01 16:06:06,843 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoExclusionDesignatedWorkYouPerformed
2015-01-01 16:06:06,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoExclusionDesignatedWorkYouPerformed
2015-01-01 16:06:06,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoExclusionNewlyAcquiredOrFormedAutoDealership
2015-01-01 16:06:06,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoExclusionNewlyAcquiredOrFormedAutoDealership
2015-01-01 16:06:06,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsExceptionBodilyInjuryPremises
2015-01-01 16:06:06,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsExceptionBodilyInjuryPremises
2015-01-01 16:06:06,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsProductsWork
2015-01-01 16:06:06,845 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoExclusionYear2000ComputerRelatedElectronicProblemsProductsWork
2015-01-01 16:06:06,845 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoExpandedCoverageTerritoryForGeneralLiabilityCoveragesAdditionalScheduledCountries
2015-01-01 16:06:06,845 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoExpandedCoverageTerritoryForGeneralLiabilityCoveragesAdditionalScheduledCountries
2015-01-01 16:06:06,845 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoExtendedReportingPeriodEndorsementForEmployeeBenefitsLiabilityCoverage
2015-01-01 16:06:06,845 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoExtendedReportingPeriodEndorsementForEmployeeBenefitsLiabilityCoverage
2015-01-01 16:06:06,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoFellowEmployeeCov
2015-01-01 16:06:06,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoFellowEmployeeCov
2015-01-01 16:06:06,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoFellowEmployeeCoverageForDesignatedEmployeesPositions
2015-01-01 16:06:06,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoFellowEmployeeCoverageForDesignatedEmployeesPositions
2015-01-01 16:06:06,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoFinancialResponsibility
2015-01-01 16:06:06,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoFinancialResponsibility
2015-01-01 16:06:06,847 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto
2015-01-01 16:06:06,847 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto
2015-01-01 16:06:06,847 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:06,847 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:06,847 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:06,847 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,848 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,848 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/Premium returns true
2015-01-01 16:06:06,848 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,848 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:06,848 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto
2015-01-01 16:06:06,848 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:06,848 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:06,848 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:06,849 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,849 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,849 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/Premium returns true
2015-01-01 16:06:06,849 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,849 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:06,849 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "CommercialAutoFuneralDirectorMedicalPaymentsCoverage/Premium"
2015-01-01 16:06:06,850 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator CommercialAutoFuneralDirectorMedicalPaymentsCoverage/Premium @ /SRERequest/CommercialAuto
2015-01-01 16:06:06,850 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator CommercialAutoFuneralDirectorMedicalPaymentsCoverage/Premium @ /SRERequest/CommercialAuto
2015-01-01 16:06:06,850 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : CommercialAutoFuneralDirectorMedicalPaymentsCoverage/Premium
2015-01-01 16:06:06,852 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at Premium as 0 [ 0 ] of type String
2015-01-01 16:06:06,853 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the Premium in the xml, for assignment we will create it! 
2015-01-01 16:06:06,853 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoFungiOrBacteriaExclusionGarageOperationsOtherThanCoveredAutos
2015-01-01 16:06:06,853 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoFungiOrBacteriaExclusionGarageOperationsOtherThanCoveredAutos
2015-01-01 16:06:06,853 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoGarage
2015-01-01 16:06:06,853 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoGarage
2015-01-01 16:06:06,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoGarageServices
2015-01-01 16:06:06,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoGarageServices
2015-01-01 16:06:06,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoGaragekeepersCov
2015-01-01 16:06:06,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoGaragekeepersCov
2015-01-01 16:06:06,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoGaragekeepersCovCustomersSoundReceivingEquipment
2015-01-01 16:06:06,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoGaragekeepersCovCustomersSoundReceivingEquipment
2015-01-01 16:06:06,855 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoGrossReceiptsBasis
2015-01-01 16:06:06,855 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoGrossReceiptsBasis
2015-01-01 16:06:06,855 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoHiredAuto
2015-01-01 16:06:06,855 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoHiredAuto
2015-01-01 16:06:06,855 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoLeasingOrRentalConcernsContingentCoverage
2015-01-01 16:06:06,855 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoLeasingOrRentalConcernsContingentCoverage
2015-01-01 16:06:06,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoLimitedContractualLiabilityCoverageForPersonalAndAdvertisingInjury
2015-01-01 16:06:06,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoLimitedContractualLiabilityCoverageForPersonalAndAdvertisingInjury
2015-01-01 16:06:06,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoLimitedFungiOrBacteriaCoverageForGarageOperationsOtherThanCoveredAutos
2015-01-01 16:06:06,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoLimitedFungiOrBacteriaCoverageForGarageOperationsOtherThanCoveredAutos
2015-01-01 16:06:06,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoLimitedMexicoCoverage
2015-01-01 16:06:06,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoLimitedMexicoCoverage
2015-01-01 16:06:06,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoLimitedProductWithdrawalExpenseEndorsement
2015-01-01 16:06:06,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoLimitedProductWithdrawalExpenseEndorsement
2015-01-01 16:06:06,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoNamedDriverCollisionCovPolLvl
2015-01-01 16:06:06,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoNamedDriverCollisionCovPolLvl
2015-01-01 16:06:06,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoNonOwnedAuto
2015-01-01 16:06:06,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoNonOwnedAuto
2015-01-01 16:06:06,858 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoOptionalLimitsLossOfUseExpenses
2015-01-01 16:06:06,858 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoOptionalLimitsLossOfUseExpenses
2015-01-01 16:06:06,858 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoPolicyRentalReimbursementCoverage
2015-01-01 16:06:06,858 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoPolicyRentalReimbursementCoverage
2015-01-01 16:06:06,858 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoPollutionLiabBroadenedCovBusinessAutoMotorCarrierTruckersCovForms
2015-01-01 16:06:06,858 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoPollutionLiabBroadenedCovBusinessAutoMotorCarrierTruckersCovForms
2015-01-01 16:06:06,859 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoPollutionLiabilityBroadenedCoverageForCoveredAutosGarageCoverageForm
2015-01-01 16:06:06,859 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoPollutionLiabilityBroadenedCoverageForCoveredAutosGarageCoverageForm
2015-01-01 16:06:06,859 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoPremiumAdjustmentForm
2015-01-01 16:06:06,859 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoPremiumAdjustmentForm
2015-01-01 16:06:06,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoPrivatePassenger
2015-01-01 16:06:06,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoPrivatePassenger
2015-01-01 16:06:06,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoPublicTransportation
2015-01-01 16:06:06,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoPublicTransportation
2015-01-01 16:06:06,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:100) - XpathResolver IteratorXpath set to : CommercialAutoPublicTransportation
2015-01-01 16:06:06,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:102) - XpathResolver XPath set to : /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:06,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:104) - XpathResolver Reference XPath set to -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:06,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto
2015-01-01 16:06:06,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto
2015-01-01 16:06:06,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:06,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:06,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:06,861 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,861 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,862 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/Premium returns true
2015-01-01 16:06:06,862 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:06,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto
2015-01-01 16:06:06,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:06,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:06,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:06,863 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,863 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,863 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/Premium returns true
2015-01-01 16:06:06,863 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/Premium
2015-01-01 16:06:06,863 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:06,863 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "CommercialAutoPublicTransportation/Premium"
2015-01-01 16:06:06,864 [main] INFO  com.mmpnc.rating.algorithm.util.XPathResolver.getUpdatedXpath(XPathResolver.java:66) - 1. [Complete Match] CommercialAutoPublicTransportation/ is present in CommercialAutoPublicTransportation/Premium/
2015-01-01 16:06:06,864 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:79) - xpath in XpathEvaluator [with loop enables] CommercialAutoPublicTransportation/Premium @ /SRERequest/CommercialAuto
2015-01-01 16:06:06,864 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:80) - unique xpath in XpathEvaluator [with loop enables] /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium @ /SRERequest/CommercialAuto
2015-01-01 16:06:06,864 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for CommercialAutoPublicTransportation/Premium with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium
2015-01-01 16:06:06,864 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,864 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium returns false
2015-01-01 16:06:06,864 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:06,865 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium
2015-01-01 16:06:06,865 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:06,865 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:06,865 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:06,870 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:06,874 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:06,875 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Premium' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:06,878 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program A2E73C8A-100E-3AED-8BBC-14140A3B7AAC
2015-01-01 16:06:06,879 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name Premium
2015-01-01 16:06:06,879 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='A2E73C8A-100E-3AED-8BBC-14140A3B7AAC' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:06,885 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:06,885 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:06,885 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:06,886 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:06,886 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LOOP THROUGH "CommercialAutoAudioVisualAndDataElectronicEquipmentCov" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAudioVisualAndDataElectronicEquipmentCov/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoAutoLoanLeaseGapCovPublicTransportation" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoAutoLoanLeaseGapCovPublicTransportation/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoFarmLaborContractors" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoFarmLaborContractors/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoLossPayableClauseAudioVisualAndDataElectronicEquipment" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoLossPayableClauseAudioVisualAndDataElectronicEquipment/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoRentalReimbursementCov" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoRentalReimbursementCov/Premium" 
END LOOP
LOOP THROUGH "CommercialAutoTapesRecordsAndDiscsCov" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoTapesRecordsAndDiscsCov/Premium" 
END LOOP
Premium = Premium + XPATH_NUMERIC:"CommercialAutoVehicleCollisionCoverage/Premium"
Premium = Premium + XPATH_NUMERIC:"CommercialAutoVehicleLiabilityCoverage/Premium"
Premium = Premium + XPATH_NUMERIC:"CommercialAutoVehicleMedicalPaymentsCoverage/Premium"
Premium = Premium + XPATH_NUMERIC:"CommercialAutoVehicleOtherThanCollisionCoverage/Premium"
Premium = Premium + XPATH_NUMERIC:"CommercialAutoVehicleUnderinsuredMotoristCoverage/Premium"
Premium = Premium + XPATH_NUMERIC:"CommercialAutoVehicleUninsuredMotoristCoverage/Premium"
Premium = Premium + XPATH_NUMERIC:"CommercialAutoVehicleUninsuredMotoristPropertyDamageCoverage/Premium"
LOOP THROUGH "CommercialAutoWaiverOfDeductible" 
	Premium = Premium + XPATH_NUMERIC:"CommercialAutoWaiverOfDeductible/Premium" 
END LOOP

2015-01-01 16:06:06,886 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:06,888 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:06,889 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (LOOP THROUGH "CommercialAutoAudioVisualAndDataElectronicEquipmentCov" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAudioVisualAndDataElectronicEquipmentCov/Premium"))) (LOOP THROUGH "CommercialAutoAutoLoanLeaseGapCovPublicTransportation" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoAutoLoanLeaseGapCovPublicTransportation/Premium"))) (LOOP THROUGH "CommercialAutoFarmLaborContractors" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoFarmLaborContractors/Premium"))) (LOOP THROUGH "CommercialAutoLossPayableClauseAudioVisualAndDataElectronicEquipment" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoLossPayableClauseAudioVisualAndDataElectronicEquipment/Premium"))) (LOOP THROUGH "CommercialAutoRentalReimbursementCov" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoRentalReimbursementCov/Premium"))) (LOOP THROUGH "CommercialAutoTapesRecordsAndDiscsCov" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoTapesRecordsAndDiscsCov/Premium"))) (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoVehicleCollisionCoverage/Premium")) (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoVehicleLiabilityCoverage/Premium")) (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoVehicleMedicalPaymentsCoverage/Premium")) (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoVehicleOtherThanCollisionCoverage/Premium")) (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoVehicleUnderinsuredMotoristCoverage/Premium")) (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoVehicleUninsuredMotoristCoverage/Premium")) (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoVehicleUninsuredMotoristPropertyDamageCoverage/Premium")) (LOOP THROUGH "CommercialAutoWaiverOfDeductible" (= Premium (+ Premium XPATH_NUMERIC : "CommercialAutoWaiverOfDeductible/Premium")))
2015-01-01 16:06:06,889 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:06,890 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAudioVisualAndDataElectronicEquipmentCov
2015-01-01 16:06:06,890 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAudioVisualAndDataElectronicEquipmentCov
2015-01-01 16:06:06,890 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoAutoLoanLeaseGapCovPublicTransportation
2015-01-01 16:06:06,891 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoAutoLoanLeaseGapCovPublicTransportation
2015-01-01 16:06:06,891 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoFarmLaborContractors
2015-01-01 16:06:06,891 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoFarmLaborContractors
2015-01-01 16:06:06,891 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoLossPayableClauseAudioVisualAndDataElectronicEquipment
2015-01-01 16:06:06,891 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoLossPayableClauseAudioVisualAndDataElectronicEquipment
2015-01-01 16:06:06,892 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoRentalReimbursementCov
2015-01-01 16:06:06,892 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoRentalReimbursementCov
2015-01-01 16:06:06,892 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:55) - We are in loop execution for statement CommercialAutoTapesRecordsAndDiscsCov
2015-01-01 16:06:06,892 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.LoopEvaluator.evaluate(LoopEvaluator.java:82) - Xpath Reference not Updated as no prior xpath reference available : CommercialAutoTapesRecordsAndDiscsCov
2015-01-01 16:06:06,892 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:06,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:06,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:06,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:06,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:06,893 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,893 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium
2015-01-01 16:06:06,893 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium returns true
2015-01-01 16:06:06,894 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium
2015-01-01 16:06:06,894 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:06,894 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:06,894 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:06,894 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:06,894 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:06,895 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,895 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium
2015-01-01 16:06:06,895 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium returns true
2015-01-01 16:06:06,895 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Premium
2015-01-01 16:06:06,895 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:06,895 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "CommercialAutoVehicleCollisionCoverage/Premium"
2015-01-01 16:06:06,896 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator CommercialAutoVehicleCollisionCoverage/Premium @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:06,896 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator CommercialAutoVehicleCollisionCoverage/Premium @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:06,896 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for CommercialAutoVehicleCollisionCoverage/Premium with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Premium
2015-01-01 16:06:06,896 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:06,896 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Premium returns false
2015-01-01 16:06:06,897 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:06,897 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Premium
2015-01-01 16:06:06,897 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:06,898 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:06,898 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:06,902 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:06,907 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:06,907 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Premium' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:06,911 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:06,989 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:06,990 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:06,994 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:06,999 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:06,999 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Premium' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,005 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program D6338C70-3C7D-3EAD-ABC2-8D25C99AE2A2
2015-01-01 16:06:07,006 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name Premium
2015-01-01 16:06:07,006 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='D6338C70-3C7D-3EAD-ABC2-8D25C99AE2A2' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,012 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,012 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,012 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,012 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,013 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( XPATH:"Premium" != null ) THEN 
	Premium =  RoundDollar (   ( XPATH_NUMERIC:"/CommercialAuto/TotalModificationFactorPhysicalDamage" * Premium )  )  
END IF
IF  (  NOT (   ( CoverageType == "" || CoverageType == "No Coverage" || CoverageType == "Not Applicable" || Deductible == "" || Deductible == "Not Applicable" )  )  ) THEN 
			IF  ( VehicleType == "Truck" ) THEN 
				LV_DOUBLE:physicalDamageCombinedRatingFactor = 1.0 
				IF  ( VehicleType != "Garage" ) THEN 
					IF  ( XPATH:"../PhysicalDamageCombinedRatingFactor" != null ) THEN 
						LV_DOUBLE:physicalDamageCombinedRatingFactor = XPATH:"../PhysicalDamageCombinedRatingFactor" 
					END IF 
				END IF 
			END IF 
		END IF
IF  (  NOT (   ( CoverageType == "" || CoverageType == "No Coverage" || CoverageType == "Not Applicable" || Deductible == "" || Deductible == "Not Applicable" )  )  ) THEN 
					IF  ( VehicleType == "Truck" ) THEN 
						LV_STRING:tempDump = "" 
						IF  ( XPATH:"../DumpingRelativity" != null ) THEN 
							LV_STRING:tempDump = XPATH:"../DumpingRelativity" 
						END IF 
					ELSE 
						IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
								IF  ( VehicleType == "Zone Rated" ) THEN 
									LV_STRING:tempDump = "" 
									IF  ( XPATH:"../DumpingRelativity" != null ) THEN 
										LV_STRING:tempDump = XPATH:"../DumpingRelativity" 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF
IF  (  NOT (   ( CoverageType == "" || CoverageType == "No Coverage" || CoverageType == "Not Applicable" || Deductible == "" || Deductible == "Not Applicable" )  )  ) THEN 
			IF  ( VehicleType == "Truck" ) THEN 
				IF  ( LV_STRING:tempDump != "" ) THEN 
					LV_DOUBLE:dumpingRelativity = LV_STRING:tempDump 
				ELSE 
					LV_DOUBLE:dumpingRelativity = 1.0 
				END IF 
			ELSE 
				IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
						IF  ( VehicleType == "Zone Rated" ) THEN 
							IF  ( LV_STRING:tempDump != "" ) THEN 
								LV_DOUBLE:dumpingRelativity = LV_STRING:tempDump 
							ELSE 
								LV_DOUBLE:dumpingRelativity = 1.0 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF
IF  (  NOT (   ( CoverageType == "" || CoverageType == "No Coverage" || CoverageType == "Not Applicable" || Deductible == "" || Deductible == "Not Applicable" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Truck" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
									IF  ( VehicleType == "Zone Rated" ) THEN 
										LV_DOUBLE:physicalDamagePrimaryRatingFactor = 0.0 
										IF  ( XPATH:"../PhysicalDamagePrimaryRatingFactor" != null ) THEN 
											LV_DOUBLE:physicalDamagePrimaryRatingFactor = XPATH:"../PhysicalDamagePrimaryRatingFactor" 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF
IF  ( CoverageType == "" || CoverageType == "No Coverage" || CoverageType == "Not Applicable" || Deductible == "" || Deductible == "Not Applicable" ) THEN 
	Premium = 0.0 
ELSE 
	IF  ( VehicleType == "Truck" ) THEN 
		Premium =  RoundDollar (   ( BasePremium * FleetFactor * LV_DOUBLE:physicalDamageCombinedRatingFactor * LV_DOUBLE:dumpingRelativity * GreenZoneDiscountFactor )  )  
	ELSE 
		IF  ( VehicleType == "Private Passenger" ) THEN 
			Premium =  RoundDollar (   ( BasePremium * TypeFactor * GreenZoneDiscountFactor )  )  
		ELSE 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				Premium =  RoundDollar (   ( LV_DOUBLE:physicalDamageCombinedRatingFactor * BasePremium * SchoolBusProrateFactor )  )  
			ELSE 
				IF  ( VehicleType == "Zone Rated" ) THEN 
					Premium =  RoundDollar (   ( BasePremium * LV_DOUBLE:physicalDamagePrimaryRatingFactor * FleetFactor * LV_DOUBLE:dumpingRelativity )  )  
				ELSE 
					IF  ( VehicleType == "Special" ) THEN 
						IF  (   ( XPATH:"../RatingPrimaryClassCode" == "7220" || XPATH:"../RatingPrimaryClassCode" == "7985" || XPATH:"../RatingPrimaryClassCode" == "7986" )  && CoverageType == "Stated Amount" ) THEN 
							Premium = 0.0 
						ELSE 
							Premium =  RoundDollar (   ( BasePremium * TypeFactor * ClassFactor )  )  
						END IF 
					ELSE 
						IF  ( VehicleType == "Garage" ) THEN 
							Premium =  RoundDollar (   (   ( DealerBlanketLowRate + DealerBlanketMediumRate + DealerBlanketHighRate )  * DeductibleRelativity * FranchisedNonFranchisedAndEquipmentAndImplementDealersFactor * DealerAdjustmentFactor )  )  
						ELSE 
							IF  ( VehicleType == "Garage Services" ) THEN 
								Premium =  RoundDollar (   (   ( DealerBlanketLowRate + DealerBlanketMediumRate + DealerBlanketHighRate )  * DeductibleRelativity * DealerAdjustmentFactor )  )  
							ELSE 
								Premium = 0.0 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:07,013 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,037 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,038 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (NOTEQUALS XPATH : "Premium" null) (= Premium (RoundDollar (* XPATH_NUMERIC : "/CommercialAuto/TotalModificationFactorPhysicalDamage" Premium)))) (IF (NOT (OR (OR (OR (OR (EQUALS CoverageType "") (EQUALS CoverageType "No Coverage")) (EQUALS CoverageType "Not Applicable")) (EQUALS Deductible "")) (EQUALS Deductible "Not Applicable"))) (IF (EQUALS VehicleType "Truck") (= LV_DOUBLE : physicalDamageCombinedRatingFactor 1.0) (IF (NOTEQUALS VehicleType "Garage") (IF (NOTEQUALS XPATH : "../PhysicalDamageCombinedRatingFactor" null) (= LV_DOUBLE : physicalDamageCombinedRatingFactor XPATH : "../PhysicalDamageCombinedRatingFactor"))))) (IF (NOT (OR (OR (OR (OR (EQUALS CoverageType "") (EQUALS CoverageType "No Coverage")) (EQUALS CoverageType "Not Applicable")) (EQUALS Deductible "")) (EQUALS Deductible "Not Applicable"))) (IF (EQUALS VehicleType "Truck") (= LV_STRING : tempDump "") (IF (NOTEQUALS XPATH : "../DumpingRelativity" null) (= LV_STRING : tempDump XPATH : "../DumpingRelativity")) ELSE (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Zone Rated") (= LV_STRING : tempDump "") (IF (NOTEQUALS XPATH : "../DumpingRelativity" null) (= LV_STRING : tempDump XPATH : "../DumpingRelativity"))))))) (IF (NOT (OR (OR (OR (OR (EQUALS CoverageType "") (EQUALS CoverageType "No Coverage")) (EQUALS CoverageType "Not Applicable")) (EQUALS Deductible "")) (EQUALS Deductible "Not Applicable"))) (IF (EQUALS VehicleType "Truck") (IF (NOTEQUALS LV_STRING : tempDump "") (= LV_DOUBLE : dumpingRelativity LV_STRING : tempDump) ELSE (= LV_DOUBLE : dumpingRelativity 1.0)) ELSE (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Zone Rated") (IF (NOTEQUALS LV_STRING : tempDump "") (= LV_DOUBLE : dumpingRelativity LV_STRING : tempDump) ELSE (= LV_DOUBLE : dumpingRelativity 1.0))))))) (IF (NOT (OR (OR (OR (OR (EQUALS CoverageType "") (EQUALS CoverageType "No Coverage")) (EQUALS CoverageType "Not Applicable")) (EQUALS Deductible "")) (EQUALS Deductible "Not Applicable"))) (IF (NOT (EQUALS VehicleType "Truck")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Zone Rated") (= LV_DOUBLE : physicalDamagePrimaryRatingFactor 0.0) (IF (NOTEQUALS XPATH : "../PhysicalDamagePrimaryRatingFactor" null) (= LV_DOUBLE : physicalDamagePrimaryRatingFactor XPATH : "../PhysicalDamagePrimaryRatingFactor"))))))) (IF (OR (OR (OR (OR (EQUALS CoverageType "") (EQUALS CoverageType "No Coverage")) (EQUALS CoverageType "Not Applicable")) (EQUALS Deductible "")) (EQUALS Deductible "Not Applicable")) (= Premium 0.0) ELSE (IF (EQUALS VehicleType "Truck") (= Premium (RoundDollar (* (* (* (* BasePremium FleetFactor) LV_DOUBLE : physicalDamageCombinedRatingFactor) LV_DOUBLE : dumpingRelativity) GreenZoneDiscountFactor))) ELSE (IF (EQUALS VehicleType "Private Passenger") (= Premium (RoundDollar (* (* BasePremium TypeFactor) GreenZoneDiscountFactor))) ELSE (IF (EQUALS VehicleType "Public Transportation") (= Premium (RoundDollar (* (* LV_DOUBLE : physicalDamageCombinedRatingFactor BasePremium) SchoolBusProrateFactor))) ELSE (IF (EQUALS VehicleType "Zone Rated") (= Premium (RoundDollar (* (* (* BasePremium LV_DOUBLE : physicalDamagePrimaryRatingFactor) FleetFactor) LV_DOUBLE : dumpingRelativity))) ELSE (IF (EQUALS VehicleType "Special") (IF (AND (OR (OR (EQUALS XPATH : "../RatingPrimaryClassCode" "7220") (EQUALS XPATH : "../RatingPrimaryClassCode" "7985")) (EQUALS XPATH : "../RatingPrimaryClassCode" "7986")) (EQUALS CoverageType "Stated Amount")) (= Premium 0.0) ELSE (= Premium (RoundDollar (* (* BasePremium TypeFactor) ClassFactor)))) ELSE (IF (EQUALS VehicleType "Garage") (= Premium (RoundDollar (* (* (* (+ (+ DealerBlanketLowRate DealerBlanketMediumRate) DealerBlanketHighRate) DeductibleRelativity) FranchisedNonFranchisedAndEquipmentAndImplementDealersFactor) DealerAdjustmentFactor))) ELSE (IF (EQUALS VehicleType "Garage Services") (= Premium (RoundDollar (* (* (+ (+ DealerBlanketLowRate DealerBlanketMediumRate) DealerBlanketHighRate) DeductibleRelativity) DealerAdjustmentFactor))) ELSE (= Premium 0.0)))))))))
2015-01-01 16:06:07,038 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,048 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,048 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:07,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:07,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "Premium"
2015-01-01 16:06:07,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator Premium @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator Premium @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : Premium
2015-01-01 16:06:07,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( Premium ) 
2015-01-01 16:06:07,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( Premium ) 
2015-01-01 16:06:07,051 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,051 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,051 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,052 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,053 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns false
2015-01-01 16:06:07,053 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,053 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,053 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,054 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,054 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,056 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,059 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:07,059 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='CoverageType' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,061 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,087 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,087 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,090 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,092 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:07,092 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='CoverageType' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,095 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,100 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,101 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,102 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:07,103 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:07,103 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program CoverageType
2015-01-01 16:06:07,103 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,103 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = ''
2015-01-01 16:06:07,103 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,104 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,104 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,104 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,104 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,104 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,105 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,105 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,105 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,105 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,106 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'No Coverage'
2015-01-01 16:06:07,106 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,106 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,106 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,106 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,106 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,107 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,107 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,107 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,107 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,107 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,108 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'Not Applicable'
2015-01-01 16:06:07,108 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,108 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,108 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,108 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,108 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,109 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,109 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns false
2015-01-01 16:06:07,109 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,109 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,109 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,110 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,110 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,112 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,114 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:07,114 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Deductible' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,116 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,142 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,142 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,145 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,147 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:07,147 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Deductible' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,150 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,155 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,155 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,157 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:07,157 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:07,158 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program Deductible
2015-01-01 16:06:07,158 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,158 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = ''
2015-01-01 16:06:07,158 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,158 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,159 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,159 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,159 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,160 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = 'Not Applicable'
2015-01-01 16:06:07,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( ((((CoverageType = '' or CoverageType = 'No Coverage') or CoverageType = 'Not Applicable') or Deductible = '') or Deductible = 'Not Applicable') )
2015-01-01 16:06:07,166 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,166 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Truck"
2015-01-01 16:06:07,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,168 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns false
2015-01-01 16:06:07,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,169 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,169 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,169 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,171 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,174 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:07,174 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='VehicleType' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,176 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,201 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,201 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,203 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,206 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:07,206 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='VehicleType' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,209 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 8110331A-FC80-33C6-85CF-E9631019F979
2015-01-01 16:06:07,209 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name VehicleType
2015-01-01 16:06:07,209 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='8110331A-FC80-33C6-85CF-E9631019F979' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,212 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,212 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,212 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,213 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,213 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( XPATH_STRING:"../VehicleType" != null ) THEN 
	VehicleType = XPATH_STRING:"../VehicleType" 
END IF

2015-01-01 16:06:07,213 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,213 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,214 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (NOTEQUALS XPATH_STRING : "../VehicleType" null) (= VehicleType XPATH_STRING : "../VehicleType"))
2015-01-01 16:06:07,214 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:07,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:07,215 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../VehicleType"
2015-01-01 16:06:07,215 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../VehicleType @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,215 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../VehicleType @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,218 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../VehicleType with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType
2015-01-01 16:06:07,218 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,218 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType returns false
2015-01-01 16:06:07,218 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,218 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType
2015-01-01 16:06:07,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,219 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,221 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,224 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:07,224 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='VehicleType' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,226 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,252 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,252 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,254 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,257 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:07,257 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='VehicleType' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,261 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 37E33E8B-54B1-30AC-85FE-A15685821944
2015-01-01 16:06:07,261 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name VehicleType
2015-01-01 16:06:07,261 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='37E33E8B-54B1-30AC-85FE-A15685821944' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,263 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,264 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,264 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,264 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,264 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - VehicleType = "Public Transportation"

2015-01-01 16:06:07,264 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,264 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,265 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= VehicleType "Public Transportation")
2015-01-01 16:06:07,265 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,265 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,265 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,265 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,266 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,266 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,266 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,266 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType
2015-01-01 16:06:07,266 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType returns true
2015-01-01 16:06:07,267 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType
2015-01-01 16:06:07,267 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,267 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,267 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at VehicleType as [StringEvaluator] 'Public Transportation'
2015-01-01 16:06:07,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the VehicleType in the xml, for assignment we will create it! 
2015-01-01 16:06:07,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../VehicleType
2015-01-01 16:06:07,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../VehicleType ) 
2015-01-01 16:06:07,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../VehicleType ) 
2015-01-01 16:06:07,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,270 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,270 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,270 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,270 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,270 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,270 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../VehicleType"
2015-01-01 16:06:07,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../VehicleType @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../VehicleType @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../VehicleType with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType
2015-01-01 16:06:07,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType
2015-01-01 16:06:07,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType returns true
2015-01-01 16:06:07,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleType
2015-01-01 16:06:07,272 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../VehicleType
2015-01-01 16:06:07,272 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at VehicleType as Public Transportation [ ../VehicleType ] of type String
2015-01-01 16:06:07,273 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the VehicleType in the xml, for assignment we will create it! 
2015-01-01 16:06:07,273 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,273 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Truck'
2015-01-01 16:06:07,273 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Truck'
2015-01-01 16:06:07,273 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,275 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,275 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,275 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,275 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,275 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,275 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,276 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = ''
2015-01-01 16:06:07,276 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,276 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,276 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,276 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,276 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,277 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,277 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,277 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,277 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,277 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,277 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'No Coverage'
2015-01-01 16:06:07,278 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,278 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,278 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,278 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,278 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,278 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,279 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,279 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,279 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,279 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,279 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'Not Applicable'
2015-01-01 16:06:07,279 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,280 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,280 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,280 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,280 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,280 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,280 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,281 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,281 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,281 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,281 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = ''
2015-01-01 16:06:07,281 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,281 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,282 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,282 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,282 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,282 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,282 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,282 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,283 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,283 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,283 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = 'Not Applicable'
2015-01-01 16:06:07,283 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( ((((CoverageType = '' or CoverageType = 'No Coverage') or CoverageType = 'Not Applicable') or Deductible = '') or Deductible = 'Not Applicable') )
2015-01-01 16:06:07,284 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,284 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,284 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Truck"
2015-01-01 16:06:07,285 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,285 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,285 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,285 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,285 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,285 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,286 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,286 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,286 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,286 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Truck'
2015-01-01 16:06:07,286 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Truck'
2015-01-01 16:06:07,286 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,287 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,287 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:07,287 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,287 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,287 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,287 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,288 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,288 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,288 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,288 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,288 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,288 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:07,289 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:07,289 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,289 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,289 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,289 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,290 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,290 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,290 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,290 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,290 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,291 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,291 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,291 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,291 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:07,291 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:07,291 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,292 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,292 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,292 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,292 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,292 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,293 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,293 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,293 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,293 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,293 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,293 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,294 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = ''
2015-01-01 16:06:07,294 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,294 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,294 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,294 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,294 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,295 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,295 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,295 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,295 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,295 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,295 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'No Coverage'
2015-01-01 16:06:07,296 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,296 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,296 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,296 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,296 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,296 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,297 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,297 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,297 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,297 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,297 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'Not Applicable'
2015-01-01 16:06:07,297 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,298 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,298 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,298 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,298 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,298 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,298 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,299 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,299 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,299 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,299 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = ''
2015-01-01 16:06:07,299 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,299 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,300 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,300 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,300 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,300 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,300 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,300 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,301 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,301 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,301 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = 'Not Applicable'
2015-01-01 16:06:07,301 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( ((((CoverageType = '' or CoverageType = 'No Coverage') or CoverageType = 'Not Applicable') or Deductible = '') or Deductible = 'Not Applicable') )
2015-01-01 16:06:07,302 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,303 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,303 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Truck"
2015-01-01 16:06:07,303 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,303 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,303 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,303 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,304 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,304 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,304 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,304 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,304 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,304 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Truck'
2015-01-01 16:06:07,305 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Truck'
2015-01-01 16:06:07,305 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,305 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,305 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:07,305 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,306 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,306 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,306 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,306 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,306 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,306 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,307 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,307 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,307 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:07,307 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:07,307 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,308 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,308 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,308 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,308 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,308 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,308 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,309 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,309 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,309 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,309 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,309 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,310 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:07,310 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:07,310 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,310 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,310 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,311 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,311 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,312 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,312 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = ''
2015-01-01 16:06:07,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,313 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,313 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,314 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,314 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,314 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,314 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'No Coverage'
2015-01-01 16:06:07,314 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,314 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,315 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,315 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,315 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,315 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,315 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,315 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,316 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,316 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,316 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'Not Applicable'
2015-01-01 16:06:07,316 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,316 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,316 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,317 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,317 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,317 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,317 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,317 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,318 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = ''
2015-01-01 16:06:07,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,319 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,319 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,320 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = 'Not Applicable'
2015-01-01 16:06:07,320 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( ((((CoverageType = '' or CoverageType = 'No Coverage') or CoverageType = 'Not Applicable') or Deductible = '') or Deductible = 'Not Applicable') )
2015-01-01 16:06:07,320 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,321 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,321 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Truck"
2015-01-01 16:06:07,321 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,322 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,322 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,322 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,322 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,322 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,322 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,323 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Truck'
2015-01-01 16:06:07,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Truck' )
2015-01-01 16:06:07,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:07,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,325 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,325 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,325 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,325 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,325 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,325 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:07,326 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:07,326 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,326 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,326 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,327 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,327 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,327 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,327 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,327 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,327 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,328 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,328 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,328 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,328 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:07,328 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:07,328 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,330 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,330 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,330 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,330 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,330 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,330 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = ''
2015-01-01 16:06:07,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,332 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,332 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,332 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,332 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,332 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,332 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'No Coverage'
2015-01-01 16:06:07,333 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,333 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,333 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,333 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,333 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,333 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,334 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,334 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,334 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'Not Applicable'
2015-01-01 16:06:07,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,335 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,335 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,335 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,335 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,335 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,335 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,336 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = ''
2015-01-01 16:06:07,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,337 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,337 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,337 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,337 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,337 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,337 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = 'Not Applicable'
2015-01-01 16:06:07,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((((CoverageType = '' or CoverageType = 'No Coverage') or CoverageType = 'Not Applicable') or Deductible = '') or Deductible = 'Not Applicable')
2015-01-01 16:06:07,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Truck"
2015-01-01 16:06:07,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,340 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,340 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,340 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,340 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,341 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,341 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Truck'
2015-01-01 16:06:07,341 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Truck'
2015-01-01 16:06:07,341 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,341 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,342 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:07,342 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,342 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,342 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,342 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,342 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,343 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,343 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,343 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:07,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:07,344 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,344 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,344 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,344 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,344 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,344 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,345 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,345 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,345 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,345 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,345 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,345 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,346 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:07,346 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:07,346 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,346 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,346 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,347 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,347 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Premium
2015-01-01 16:06:07,347 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Premium
2015-01-01 16:06:07,347 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Premium
2015-01-01 16:06:07,347 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,347 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Premium
2015-01-01 16:06:07,348 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Premium returns true
2015-01-01 16:06:07,348 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Premium
2015-01-01 16:06:07,348 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Premium
2015-01-01 16:06:07,348 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,348 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_DOUBLE : physicalDamageCombinedRatingFactor
2015-01-01 16:06:07,350 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_DOUBLE : physicalDamageCombinedRatingFactor
2015-01-01 16:06:07,353 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for physicalDamageCombinedRatingFactor
2015-01-01 16:06:07,354 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,354 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/physicalDamageCombinedRatingFactor returns false
2015-01-01 16:06:07,354 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,354 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/physicalDamageCombinedRatingFactor
2015-01-01 16:06:07,355 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,355 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,355 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,358 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,363 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:07,363 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='physicalDamageCombinedRatingFactor' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,366 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 7659F8CA-2483-3A21-9419-797C7B490F7C
2015-01-01 16:06:07,366 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name physicalDamageCombinedRatingFactor
2015-01-01 16:06:07,366 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='7659F8CA-2483-3A21-9419-797C7B490F7C' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,369 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,369 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,369 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,369 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,370 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  (  NOT (   ( CoverageType == "" || CoverageType == "No Coverage" || CoverageType == "Not Applicable" || Deductible == "" || Deductible == "Not Applicable" )  )  ) THEN 
	IF  ( VehicleType == "Truck" ) THEN 
		LV_DOUBLE:physicalDamageCombinedRatingFactor = 1.0 
		IF  ( VehicleType != "Garage" ) THEN 
			IF  ( XPATH:"../PhysicalDamageCombinedRatingFactor" != null ) THEN 
				LV_DOUBLE:physicalDamageCombinedRatingFactor = XPATH:"../PhysicalDamageCombinedRatingFactor" 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:07,370 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,371 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,372 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (NOT (OR (OR (OR (OR (EQUALS CoverageType "") (EQUALS CoverageType "No Coverage")) (EQUALS CoverageType "Not Applicable")) (EQUALS Deductible "")) (EQUALS Deductible "Not Applicable"))) (IF (EQUALS VehicleType "Truck") (= LV_DOUBLE : physicalDamageCombinedRatingFactor 1.0) (IF (NOTEQUALS VehicleType "Garage") (IF (NOTEQUALS XPATH : "../PhysicalDamageCombinedRatingFactor" null) (= LV_DOUBLE : physicalDamageCombinedRatingFactor XPATH : "../PhysicalDamageCombinedRatingFactor")))))
2015-01-01 16:06:07,372 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,372 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,374 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,374 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,374 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,374 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = ''
2015-01-01 16:06:07,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,376 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'No Coverage'
2015-01-01 16:06:07,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,378 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,378 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,378 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,378 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,378 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,379 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'Not Applicable'
2015-01-01 16:06:07,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,380 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,380 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,380 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,380 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,380 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,381 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,381 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = ''
2015-01-01 16:06:07,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:07,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:07,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:07,382 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,383 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,383 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:07,383 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:07,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:07,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = 'Not Applicable'
2015-01-01 16:06:07,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( ((((CoverageType = '' or CoverageType = 'No Coverage') or CoverageType = 'Not Applicable') or Deductible = '') or Deductible = 'Not Applicable') )
2015-01-01 16:06:07,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Truck"
2015-01-01 16:06:07,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,386 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,386 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,386 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,387 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Truck'
2015-01-01 16:06:07,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Truck'
2015-01-01 16:06:07,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value physicalDamageCombinedRatingFactor
2015-01-01 16:06:07,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : BasePremium
2015-01-01 16:06:07,389 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable BasePremium
2015-01-01 16:06:07,389 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for BasePremium
2015-01-01 16:06:07,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/BasePremium returns false
2015-01-01 16:06:07,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/BasePremium
2015-01-01 16:06:07,390 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,390 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,390 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,393 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,395 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:07,395 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='BasePremium' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,398 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,424 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,424 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,427 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,429 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:07,429 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='BasePremium' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,433 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 54889286-C400-3A1B-A7C7-B1F410114EDE
2015-01-01 16:06:07,433 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name BasePremium
2015-01-01 16:06:07,433 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='54889286-C400-3A1B-A7C7-B1F410114EDE' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,440 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,440 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,440 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,440 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,441 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
														IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
															IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																				IF  ( VehicleType == "Special" ) THEN 
																					IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																							IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
																									IF  ( CalculationType == "Hired Auto" ) THEN 
																										LV_DOUBLE:costofHired = 0.0 
																										IF  ( XPATH:"../GrossReceipts" != null && XPATH:"../GrossReceipts" != "0" ) THEN 
																											LV_DOUBLE:costofHired = XPATH:"../GrossReceipts" 
																										ELSE 
																											IF  ( XPATH:"../TotalCostOfHireCollision" != null ) THEN 
																												LV_DOUBLE:costofHired = XPATH:"../TotalCostOfHireCollision" 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														ELSE 
															IF  ( VehicleType == "Private Passenger" ) THEN 
																IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																					IF  ( VehicleType == "Special" ) THEN 
																						IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																							IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
																										IF  ( CalculationType == "Hired Auto" ) THEN 
																											LV_DOUBLE:costofHired = 0.0 
																											IF  ( XPATH:"../GrossReceipts" != null && XPATH:"../GrossReceipts" != "0" ) THEN 
																												LV_DOUBLE:costofHired = XPATH:"../GrossReceipts" 
																											ELSE 
																												IF  ( XPATH:"../TotalCostOfHireCollision" != null ) THEN 
																													LV_DOUBLE:costofHired = XPATH:"../TotalCostOfHireCollision" 
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															ELSE 
																IF  ( VehicleType == "Public Transportation" ) THEN 
																	IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																		IF  ( CoverageType == "Stated Amount" ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																							IF  ( VehicleType == "Special" ) THEN 
																								IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																										IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																											IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
																												IF  ( CalculationType == "Hired Auto" ) THEN 
																													LV_DOUBLE:costofHired = 0.0 
																													IF  ( XPATH:"../GrossReceipts" != null && XPATH:"../GrossReceipts" != "0" ) THEN 
																														LV_DOUBLE:costofHired = XPATH:"../GrossReceipts" 
																													ELSE 
																														IF  ( XPATH:"../TotalCostOfHireCollision" != null ) THEN 
																															LV_DOUBLE:costofHired = XPATH:"../TotalCostOfHireCollision" 
																														END IF 
																													END IF 
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																ELSE 
																	IF  ( VehicleType == "Special" ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																						IF  ( VehicleType == "Special" ) THEN 
																							IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																										IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
																											IF  ( CalculationType == "Hired Auto" ) THEN 
																												LV_DOUBLE:costofHired = 0.0 
																												IF  ( XPATH:"../GrossReceipts" != null && XPATH:"../GrossReceipts" != "0" ) THEN 
																													LV_DOUBLE:costofHired = XPATH:"../GrossReceipts" 
																												ELSE 
																													IF  ( XPATH:"../TotalCostOfHireCollision" != null ) THEN 
																														LV_DOUBLE:costofHired = XPATH:"../TotalCostOfHireCollision" 
																													END IF 
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	ELSE 
																		IF  ( VehicleType == "Truck" ) THEN 
																			IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																				IF  ( CoverageType == "Stated Amount" ) THEN 
																					IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																								IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																									IF  ( VehicleType == "Special" ) THEN 
																										IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																											IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																												IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																													IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
																														IF  ( CalculationType == "Hired Auto" ) THEN 
																															LV_DOUBLE:costofHired = 0.0 
																															IF  ( XPATH:"../GrossReceipts" != null && XPATH:"../GrossReceipts" != "0" ) THEN 
																																LV_DOUBLE:costofHired = XPATH:"../GrossReceipts" 
																															ELSE 
																																IF  ( XPATH:"../TotalCostOfHireCollision" != null ) THEN 
																																	LV_DOUBLE:costofHired = XPATH:"../TotalCostOfHireCollision" 
																																END IF 
																															END IF 
																														END IF 
																													END IF 
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		ELSE 
																			IF  ( VehicleType == "Zone Rated" ) THEN 
																				IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																								IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																									IF  ( VehicleType == "Special" ) THEN 
																										IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																											IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																												IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																													IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
																														IF  ( CalculationType == "Hired Auto" ) THEN 
																															LV_DOUBLE:costofHired = 0.0 
																															IF  ( XPATH:"../GrossReceipts" != null && XPATH:"../GrossReceipts" != "0" ) THEN 
																																LV_DOUBLE:costofHired = XPATH:"../GrossReceipts" 
																															ELSE 
																																IF  ( XPATH:"../TotalCostOfHireCollision" != null ) THEN 
																																	LV_DOUBLE:costofHired = XPATH:"../TotalCostOfHireCollision" 
																																END IF 
																															END IF 
																														END IF 
																													END IF 
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF
IF  ( XPATH:"../OriginalCostNew" != null && XPATH:"../OriginalCostNew" != "" ) THEN 
													LV_INTEGER:OriginalCostNew = XPATH:"../OriginalCostNew" 
												END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
		IF  ( VehicleType == "Special" ) THEN 
			BasePremium =  RoundDollar (   (   ( DealerBlanketLowRate + DealerBlanketMediumRate + DealerBlanketHighRate )  * DeductibleRelativity * DealerAdjustmentFactor )  )  
		ELSE 
			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
					IF  ( VehicleType == "Private Passenger" ) THEN 
						IF  ( CoverageType == "Stated Amount" ) THEN 
							IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
								BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
							ELSE 
								BasePremium = 0.0 
							END IF 
						END IF 
					ELSE 
						IF  ( VehicleType == "Public Transportation" ) THEN 
							IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
								BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
							ELSE 
								BasePremium = 0.0 
							END IF 
						ELSE 
							IF  ( VehicleType == "Special" ) THEN 
								IF  ( CalculationType == "Special-SA" ) THEN 
									BasePremium =  RoundDollar (   ( StatedAmount / 100.0 * PreliminaryBaseRate )  )  
								ELSE 
									IF  ( CalculationType == "Truck-SA" ) THEN 
										IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
											BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
										ELSE 
											BasePremium = 0.0 
										END IF 
									ELSE 
										IF  ( CalculationType == "Priv Pass-SA" ) THEN 
											IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
												BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
											ELSE 
												BasePremium = 0.0 
											END IF 
										ELSE 
											IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
												IF  ( CalculationType == "Hired Auto" ) THEN 
													BasePremium =  RoundDollar (   ( LV_DOUBLE:costofHired / 100.0 * PreliminaryBaseRate )  )  
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
								IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
									IF  ( MotorcycleFactor > DeductibleRelativity ) THEN 
										BasePremium =  RoundDollar (   (   (   ( MotorcycleFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
									ELSE 
										BasePremium = 0.0 
									END IF 
								ELSE 
									IF  ( CalculationType == "Golfmobile-ACV" ) THEN 
										BasePremium = PreliminaryBaseRate 
									ELSE 
										IF  ( CalculationType == "Truck-ACV" ) THEN 
											IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
												BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * TruckOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
											ELSE 
												BasePremium = 0.0 
											END IF 
										ELSE 
											IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
												IF  ( CostNewRelativity + SpecialTypesMiscellaneousFactor > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   ( CostNewRelativity +   ( SpecialTypesMiscellaneousFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							ELSE 
								IF  ( VehicleType == "Truck" ) THEN 
									IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
										BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
									ELSE 
										BasePremium = 0.0 
									END IF 
								ELSE 
									IF  ( VehicleType == "Zone Rated" ) THEN 
										IF  ( CoverageType == "Stated Amount" ) THEN 
											IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
												BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
											ELSE 
												BasePremium = 0.0 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	ELSE 
		IF  ( VehicleType == "Private Passenger" ) THEN 
			IF  ( CoverageType == "ACV" ) THEN 
				IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
					BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * PrivatePassengerOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
				ELSE 
					BasePremium = 0.0 
				END IF 
			ELSE 
				IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
						IF  ( VehicleType == "Private Passenger" ) THEN 
							IF  ( CoverageType == "Stated Amount" ) THEN 
								IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
									BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
								ELSE 
									BasePremium = 0.0 
								END IF 
							END IF 
						ELSE 
							IF  ( VehicleType == "Public Transportation" ) THEN 
								IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
									BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
								ELSE 
									BasePremium = 0.0 
								END IF 
							ELSE 
								IF  ( VehicleType == "Special" ) THEN 
									IF  ( CalculationType == "Special-SA" ) THEN 
										BasePremium =  RoundDollar (   ( StatedAmount / 100.0 * PreliminaryBaseRate )  )  
									ELSE 
										IF  ( CalculationType == "Truck-SA" ) THEN 
											IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
												BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
											ELSE 
												BasePremium = 0.0 
											END IF 
										ELSE 
											IF  ( CalculationType == "Priv Pass-SA" ) THEN 
												IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											ELSE 
												IF  ( CalculationType == "Dealers" ) THEN 
													IF  ( VehicleType == "Special" ) THEN 
														BasePremium =  RoundDollar (   (   ( DealerBlanketLowRate + DealerBlanketMediumRate + DealerBlanketHighRate )  * DeductibleRelativity * DealerAdjustmentFactor )  )  
													END IF 
												ELSE 
													IF  ( CalculationType == "Hired Auto" ) THEN 
														BasePremium =  RoundDollar (   ( LV_DOUBLE:costofHired / 100.0 * PreliminaryBaseRate )  )  
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
									IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
										IF  ( MotorcycleFactor > DeductibleRelativity ) THEN 
											BasePremium =  RoundDollar (   (   (   ( MotorcycleFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
										ELSE 
											BasePremium = 0.0 
										END IF 
									ELSE 
										IF  ( CalculationType == "Golfmobile-ACV" ) THEN 
											BasePremium = PreliminaryBaseRate 
										ELSE 
											IF  ( CalculationType == "Truck-ACV" ) THEN 
												IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * TruckOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											ELSE 
												IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
													IF  ( CostNewRelativity + SpecialTypesMiscellaneousFactor > DeductibleRelativity ) THEN 
														BasePremium =  RoundDollar (   (   ( CostNewRelativity +   ( SpecialTypesMiscellaneousFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
													ELSE 
														BasePremium = 0.0 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								ELSE 
									IF  ( VehicleType == "Truck" ) THEN 
										IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
											BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
										ELSE 
											BasePremium = 0.0 
										END IF 
									ELSE 
										IF  ( VehicleType == "Zone Rated" ) THEN 
											IF  ( CoverageType == "Stated Amount" ) THEN 
												IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		ELSE 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				IF  ( CoverageType == "ACV" ) THEN 
					IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
						BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * PublicTransportationOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
					ELSE 
						BasePremium = 0.0 
					END IF 
				ELSE 
					IF  ( CoverageType == "Stated Amount" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
								IF  ( VehicleType == "Private Passenger" ) THEN 
									IF  ( CoverageType == "Stated Amount" ) THEN 
										IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
											BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
										ELSE 
											BasePremium = 0.0 
										END IF 
									END IF 
								ELSE 
									IF  ( VehicleType == "Public Transportation" ) THEN 
										IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
											BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
										ELSE 
											BasePremium = 0.0 
										END IF 
									ELSE 
										IF  ( VehicleType == "Special" ) THEN 
											IF  ( CalculationType == "Special-SA" ) THEN 
												BasePremium =  RoundDollar (   ( StatedAmount / 100.0 * PreliminaryBaseRate )  )  
											ELSE 
												IF  ( CalculationType == "Truck-SA" ) THEN 
													IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
														BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
													ELSE 
														BasePremium = 0.0 
													END IF 
												ELSE 
													IF  ( CalculationType == "Priv Pass-SA" ) THEN 
														IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
															BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
														ELSE 
															BasePremium = 0.0 
														END IF 
													ELSE 
														IF  ( CalculationType == "Dealers" ) THEN 
															IF  ( VehicleType == "Special" ) THEN 
																BasePremium =  RoundDollar (   (   ( DealerBlanketLowRate + DealerBlanketMediumRate + DealerBlanketHighRate )  * DeductibleRelativity * DealerAdjustmentFactor )  )  
															END IF 
														ELSE 
															IF  ( CalculationType == "Hired Auto" ) THEN 
																BasePremium =  RoundDollar (   ( LV_DOUBLE:costofHired / 100.0 * PreliminaryBaseRate )  )  
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
											IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
												IF  ( MotorcycleFactor > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( MotorcycleFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											ELSE 
												IF  ( CalculationType == "Golfmobile-ACV" ) THEN 
													BasePremium = PreliminaryBaseRate 
												ELSE 
													IF  ( CalculationType == "Truck-ACV" ) THEN 
														IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
															BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * TruckOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
														ELSE 
															BasePremium = 0.0 
														END IF 
													ELSE 
														IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
															IF  ( CostNewRelativity + SpecialTypesMiscellaneousFactor > DeductibleRelativity ) THEN 
																BasePremium =  RoundDollar (   (   ( CostNewRelativity +   ( SpecialTypesMiscellaneousFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
															ELSE 
																BasePremium = 0.0 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										ELSE 
											IF  ( VehicleType == "Truck" ) THEN 
												IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											ELSE 
												IF  ( VehicleType == "Zone Rated" ) THEN 
													IF  ( CoverageType == "Stated Amount" ) THEN 
														IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
															BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
														ELSE 
															BasePremium = 0.0 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			ELSE 
				IF  ( VehicleType == "Special" ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
							IF  ( VehicleType == "Private Passenger" ) THEN 
								IF  ( CoverageType == "Stated Amount" ) THEN 
									IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
										BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
									ELSE 
										BasePremium = 0.0 
									END IF 
								END IF 
							ELSE 
								IF  ( VehicleType == "Public Transportation" ) THEN 
									IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
										BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
									ELSE 
										BasePremium = 0.0 
									END IF 
								ELSE 
									IF  ( VehicleType == "Special" ) THEN 
										IF  ( CalculationType == "Special-SA" ) THEN 
											BasePremium =  RoundDollar (   ( StatedAmount / 100.0 * PreliminaryBaseRate )  )  
										ELSE 
											IF  ( CalculationType == "Truck-SA" ) THEN 
												IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											ELSE 
												IF  ( CalculationType == "Priv Pass-SA" ) THEN 
													IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
														BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
													ELSE 
														BasePremium = 0.0 
													END IF 
												ELSE 
													IF  ( CalculationType == "Dealers" ) THEN 
														IF  ( VehicleType == "Special" ) THEN 
															BasePremium =  RoundDollar (   (   ( DealerBlanketLowRate + DealerBlanketMediumRate + DealerBlanketHighRate )  * DeductibleRelativity * DealerAdjustmentFactor )  )  
														END IF 
													ELSE 
														IF  ( CalculationType == "Hired Auto" ) THEN 
															BasePremium =  RoundDollar (   ( LV_DOUBLE:costofHired / 100.0 * PreliminaryBaseRate )  )  
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
										IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
											IF  ( MotorcycleFactor > DeductibleRelativity ) THEN 
												BasePremium =  RoundDollar (   (   (   ( MotorcycleFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
											ELSE 
												BasePremium = 0.0 
											END IF 
										ELSE 
											IF  ( CalculationType == "Golfmobile-ACV" ) THEN 
												BasePremium = PreliminaryBaseRate 
											ELSE 
												IF  ( CalculationType == "Truck-ACV" ) THEN 
													IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
														BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * TruckOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
													ELSE 
														BasePremium = 0.0 
													END IF 
												ELSE 
													IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
														IF  ( CostNewRelativity + SpecialTypesMiscellaneousFactor > DeductibleRelativity ) THEN 
															BasePremium =  RoundDollar (   (   ( CostNewRelativity +   ( SpecialTypesMiscellaneousFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
														ELSE 
															BasePremium = 0.0 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									ELSE 
										IF  ( VehicleType == "Truck" ) THEN 
											IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
												BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
											ELSE 
												BasePremium = 0.0 
											END IF 
										ELSE 
											IF  ( VehicleType == "Zone Rated" ) THEN 
												IF  ( CoverageType == "Stated Amount" ) THEN 
													IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
														BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
													ELSE 
														BasePremium = 0.0 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( VehicleType == "Truck" ) THEN 
						IF  ( CoverageType == "ACV" ) THEN 
							IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
								BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * TruckOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
							ELSE 
								BasePremium = 0.0 
							END IF 
						ELSE 
							IF  ( CoverageType == "Stated Amount" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  ( VehicleType == "Private Passenger" ) THEN 
											IF  ( CoverageType == "Stated Amount" ) THEN 
												IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											END IF 
										ELSE 
											IF  ( VehicleType == "Public Transportation" ) THEN 
												IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											ELSE 
												IF  ( VehicleType == "Special" ) THEN 
													IF  ( CalculationType == "Special-SA" ) THEN 
														BasePremium =  RoundDollar (   ( StatedAmount / 100.0 * PreliminaryBaseRate )  )  
													ELSE 
														IF  ( CalculationType == "Truck-SA" ) THEN 
															IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
																BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
															ELSE 
																BasePremium = 0.0 
															END IF 
														ELSE 
															IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
																	BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
																ELSE 
																	BasePremium = 0.0 
																END IF 
															ELSE 
																IF  ( CalculationType == "Dealers" ) THEN 
																	IF  ( VehicleType == "Special" ) THEN 
																		BasePremium =  RoundDollar (   (   ( DealerBlanketLowRate + DealerBlanketMediumRate + DealerBlanketHighRate )  * DeductibleRelativity * DealerAdjustmentFactor )  )  
																	END IF 
																ELSE 
																	IF  ( CalculationType == "Hired Auto" ) THEN 
																		BasePremium =  RoundDollar (   ( LV_DOUBLE:costofHired / 100.0 * PreliminaryBaseRate )  )  
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
													IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
														IF  ( MotorcycleFactor > DeductibleRelativity ) THEN 
															BasePremium =  RoundDollar (   (   (   ( MotorcycleFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
														ELSE 
															BasePremium = 0.0 
														END IF 
													ELSE 
														IF  ( CalculationType == "Golfmobile-ACV" ) THEN 
															BasePremium = PreliminaryBaseRate 
														ELSE 
															IF  ( CalculationType == "Truck-ACV" ) THEN 
																IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
																	BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * TruckOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
																ELSE 
																	BasePremium = 0.0 
																END IF 
															ELSE 
																IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																	IF  ( CostNewRelativity + SpecialTypesMiscellaneousFactor > DeductibleRelativity ) THEN 
																		BasePremium =  RoundDollar (   (   ( CostNewRelativity +   ( SpecialTypesMiscellaneousFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
																	ELSE 
																		BasePremium = 0.0 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Truck" ) THEN 
														IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
															BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
														ELSE 
															BasePremium = 0.0 
														END IF 
													ELSE 
														IF  ( VehicleType == "Zone Rated" ) THEN 
															IF  ( CoverageType == "Stated Amount" ) THEN 
																IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
																	BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
																ELSE 
																	BasePremium = 0.0 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					ELSE 
						IF  ( VehicleType == "Zone Rated" ) THEN 
							IF  ( CoverageType == "ACV" ) THEN 
								IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
									BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * ZoneRatedOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
								ELSE 
									BasePremium = 0.0 
								END IF 
							ELSE 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  ( VehicleType == "Private Passenger" ) THEN 
											IF  ( CoverageType == "Stated Amount" ) THEN 
												IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											END IF 
										ELSE 
											IF  ( VehicleType == "Public Transportation" ) THEN 
												IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
													BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
												ELSE 
													BasePremium = 0.0 
												END IF 
											ELSE 
												IF  ( VehicleType == "Special" ) THEN 
													IF  ( CalculationType == "Special-SA" ) THEN 
														BasePremium =  RoundDollar (   ( StatedAmount / 100.0 * PreliminaryBaseRate )  )  
													ELSE 
														IF  ( CalculationType == "Truck-SA" ) THEN 
															IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
																BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
															ELSE 
																BasePremium = 0.0 
															END IF 
														ELSE 
															IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
																	BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
																ELSE 
																	BasePremium = 0.0 
																END IF 
															ELSE 
																IF  ( CalculationType == "Dealers" ) THEN 
																	IF  ( VehicleType == "Special" ) THEN 
																		BasePremium =  RoundDollar (   (   ( DealerBlanketLowRate + DealerBlanketMediumRate + DealerBlanketHighRate )  * DeductibleRelativity * DealerAdjustmentFactor )  )  
																	END IF 
																ELSE 
																	IF  ( CalculationType == "Hired Auto" ) THEN 
																		BasePremium =  RoundDollar (   ( LV_DOUBLE:costofHired / 100.0 * PreliminaryBaseRate )  )  
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
													IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
														IF  ( MotorcycleFactor > DeductibleRelativity ) THEN 
															BasePremium =  RoundDollar (   (   (   ( MotorcycleFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
														ELSE 
															BasePremium = 0.0 
														END IF 
													ELSE 
														IF  ( CalculationType == "Golfmobile-ACV" ) THEN 
															BasePremium = PreliminaryBaseRate 
														ELSE 
															IF  ( CalculationType == "Truck-ACV" ) THEN 
																IF  ( CostNewRelativity > DeductibleRelativity ) THEN 
																	BasePremium =  RoundDollar (   (   (   (   ( LV_INTEGER:OriginalCostNew - 90000.0  )  )  / 1000.0 * TruckOver90000Factor +   ( CostNewRelativity - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
																ELSE 
																	BasePremium = 0.0 
																END IF 
															ELSE 
																IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																	IF  ( CostNewRelativity + SpecialTypesMiscellaneousFactor > DeductibleRelativity ) THEN 
																		BasePremium =  RoundDollar (   (   ( CostNewRelativity +   ( SpecialTypesMiscellaneousFactor - DeductibleRelativity  )  )  * AgeGroupRelativity * PreliminaryBaseRate )  )  
																	ELSE 
																		BasePremium = 0.0 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Truck" ) THEN 
														IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
															BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
														ELSE 
															BasePremium = 0.0 
														END IF 
													ELSE 
														IF  ( VehicleType == "Zone Rated" ) THEN 
															IF  ( CoverageType == "Stated Amount" ) THEN 
																IF  ( StatedAmountDedCompare > DeductibleRelativity ) THEN 
																	BasePremium =  RoundDollar (   (   (   ( StatedAmount / 100.0 * StatedAmountRate - DeductibleRelativity  )  )  * PreliminaryBaseRate )  )  
																ELSE 
																	BasePremium = 0.0 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:07,441 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,518 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,522 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (NOT (EQUALS CalculationType "Dealers")) (IF (EQUALS CalculationType "Hired Auto") (= LV_DOUBLE : costofHired 0.0) (IF (AND (NOTEQUALS XPATH : "../GrossReceipts" null) (NOTEQUALS XPATH : "../GrossReceipts" "0")) (= LV_DOUBLE : costofHired XPATH : "../GrossReceipts") ELSE (IF (NOTEQUALS XPATH : "../TotalCostOfHireCollision" null) (= LV_DOUBLE : costofHired XPATH : "../TotalCostOfHireCollision")))))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (NOT (EQUALS CalculationType "Dealers")) (IF (EQUALS CalculationType "Hired Auto") (= LV_DOUBLE : costofHired 0.0) (IF (AND (NOTEQUALS XPATH : "../GrossReceipts" null) (NOTEQUALS XPATH : "../GrossReceipts" "0")) (= LV_DOUBLE : costofHired XPATH : "../GrossReceipts") ELSE (IF (NOTEQUALS XPATH : "../TotalCostOfHireCollision" null) (= LV_DOUBLE : costofHired XPATH : "../TotalCostOfHireCollision")))))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (NOT (EQUALS CalculationType "Dealers")) (IF (EQUALS CalculationType "Hired Auto") (= LV_DOUBLE : costofHired 0.0) (IF (AND (NOTEQUALS XPATH : "../GrossReceipts" null) (NOTEQUALS XPATH : "../GrossReceipts" "0")) (= LV_DOUBLE : costofHired XPATH : "../GrossReceipts") ELSE (IF (NOTEQUALS XPATH : "../TotalCostOfHireCollision" null) (= LV_DOUBLE : costofHired XPATH : "../TotalCostOfHireCollision"))))))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (NOT (EQUALS CalculationType "Dealers")) (IF (EQUALS CalculationType "Hired Auto") (= LV_DOUBLE : costofHired 0.0) (IF (AND (NOTEQUALS XPATH : "../GrossReceipts" null) (NOTEQUALS XPATH : "../GrossReceipts" "0")) (= LV_DOUBLE : costofHired XPATH : "../GrossReceipts") ELSE (IF (NOTEQUALS XPATH : "../TotalCostOfHireCollision" null) (= LV_DOUBLE : costofHired XPATH : "../TotalCostOfHireCollision"))))))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (NOT (EQUALS CalculationType "Dealers")) (IF (EQUALS CalculationType "Hired Auto") (= LV_DOUBLE : costofHired 0.0) (IF (AND (NOTEQUALS XPATH : "../GrossReceipts" null) (NOTEQUALS XPATH : "../GrossReceipts" "0")) (= LV_DOUBLE : costofHired XPATH : "../GrossReceipts") ELSE (IF (NOTEQUALS XPATH : "../TotalCostOfHireCollision" null) (= LV_DOUBLE : costofHired XPATH : "../TotalCostOfHireCollision"))))))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (NOT (EQUALS CalculationType "Dealers")) (IF (EQUALS CalculationType "Hired Auto") (= LV_DOUBLE : costofHired 0.0) (IF (AND (NOTEQUALS XPATH : "../GrossReceipts" null) (NOTEQUALS XPATH : "../GrossReceipts" "0")) (= LV_DOUBLE : costofHired XPATH : "../GrossReceipts") ELSE (IF (NOTEQUALS XPATH : "../TotalCostOfHireCollision" null) (= LV_DOUBLE : costofHired XPATH : "../TotalCostOfHireCollision"))))))))))))))))))))) (IF (AND (NOTEQUALS XPATH : "../OriginalCostNew" null) (NOTEQUALS XPATH : "../OriginalCostNew" "")) (= LV_INTEGER : OriginalCostNew XPATH : "../OriginalCostNew")) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Special") (= BasePremium (RoundDollar (* (* (+ (+ DealerBlanketLowRate DealerBlanketMediumRate) DealerBlanketHighRate) DeductibleRelativity) DealerAdjustmentFactor))) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Special-SA") (= BasePremium (RoundDollar (* (/ StatedAmount 100.0) PreliminaryBaseRate))) ELSE (IF (EQUALS CalculationType "Truck-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (NOT (EQUALS CalculationType "Dealers")) (IF (EQUALS CalculationType "Hired Auto") (= BasePremium (RoundDollar (* (/ LV_DOUBLE : costofHired 100.0) PreliminaryBaseRate)))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (> MotorcycleFactor DeductibleRelativity) (= BasePremium (RoundDollar (* (* (SUBTRACT MotorcycleFactor DeductibleRelativity) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Golfmobile-ACV") (= BasePremium PreliminaryBaseRate) ELSE (IF (EQUALS CalculationType "Truck-ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) TruckOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> (+ CostNewRelativity SpecialTypesMiscellaneousFactor) DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ CostNewRelativity (SUBTRACT SpecialTypesMiscellaneousFactor DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) PrivatePassengerOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Special-SA") (= BasePremium (RoundDollar (* (/ StatedAmount 100.0) PreliminaryBaseRate))) ELSE (IF (EQUALS CalculationType "Truck-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Dealers") (IF (EQUALS VehicleType "Special") (= BasePremium (RoundDollar (* (* (+ (+ DealerBlanketLowRate DealerBlanketMediumRate) DealerBlanketHighRate) DeductibleRelativity) DealerAdjustmentFactor)))) ELSE (IF (EQUALS CalculationType "Hired Auto") (= BasePremium (RoundDollar (* (/ LV_DOUBLE : costofHired 100.0) PreliminaryBaseRate)))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (> MotorcycleFactor DeductibleRelativity) (= BasePremium (RoundDollar (* (* (SUBTRACT MotorcycleFactor DeductibleRelativity) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Golfmobile-ACV") (= BasePremium PreliminaryBaseRate) ELSE (IF (EQUALS CalculationType "Truck-ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) TruckOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> (+ CostNewRelativity SpecialTypesMiscellaneousFactor) DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ CostNewRelativity (SUBTRACT SpecialTypesMiscellaneousFactor DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) PublicTransportationOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Special-SA") (= BasePremium (RoundDollar (* (/ StatedAmount 100.0) PreliminaryBaseRate))) ELSE (IF (EQUALS CalculationType "Truck-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Dealers") (IF (EQUALS VehicleType "Special") (= BasePremium (RoundDollar (* (* (+ (+ DealerBlanketLowRate DealerBlanketMediumRate) DealerBlanketHighRate) DeductibleRelativity) DealerAdjustmentFactor)))) ELSE (IF (EQUALS CalculationType "Hired Auto") (= BasePremium (RoundDollar (* (/ LV_DOUBLE : costofHired 100.0) PreliminaryBaseRate)))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (> MotorcycleFactor DeductibleRelativity) (= BasePremium (RoundDollar (* (* (SUBTRACT MotorcycleFactor DeductibleRelativity) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Golfmobile-ACV") (= BasePremium PreliminaryBaseRate) ELSE (IF (EQUALS CalculationType "Truck-ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) TruckOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> (+ CostNewRelativity SpecialTypesMiscellaneousFactor) DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ CostNewRelativity (SUBTRACT SpecialTypesMiscellaneousFactor DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Special-SA") (= BasePremium (RoundDollar (* (/ StatedAmount 100.0) PreliminaryBaseRate))) ELSE (IF (EQUALS CalculationType "Truck-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Dealers") (IF (EQUALS VehicleType "Special") (= BasePremium (RoundDollar (* (* (+ (+ DealerBlanketLowRate DealerBlanketMediumRate) DealerBlanketHighRate) DeductibleRelativity) DealerAdjustmentFactor)))) ELSE (IF (EQUALS CalculationType "Hired Auto") (= BasePremium (RoundDollar (* (/ LV_DOUBLE : costofHired 100.0) PreliminaryBaseRate)))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (> MotorcycleFactor DeductibleRelativity) (= BasePremium (RoundDollar (* (* (SUBTRACT MotorcycleFactor DeductibleRelativity) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Golfmobile-ACV") (= BasePremium PreliminaryBaseRate) ELSE (IF (EQUALS CalculationType "Truck-ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) TruckOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> (+ CostNewRelativity SpecialTypesMiscellaneousFactor) DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ CostNewRelativity (SUBTRACT SpecialTypesMiscellaneousFactor DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (EQUALS CoverageType "ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) TruckOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Special-SA") (= BasePremium (RoundDollar (* (/ StatedAmount 100.0) PreliminaryBaseRate))) ELSE (IF (EQUALS CalculationType "Truck-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Dealers") (IF (EQUALS VehicleType "Special") (= BasePremium (RoundDollar (* (* (+ (+ DealerBlanketLowRate DealerBlanketMediumRate) DealerBlanketHighRate) DeductibleRelativity) DealerAdjustmentFactor)))) ELSE (IF (EQUALS CalculationType "Hired Auto") (= BasePremium (RoundDollar (* (/ LV_DOUBLE : costofHired 100.0) PreliminaryBaseRate)))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (> MotorcycleFactor DeductibleRelativity) (= BasePremium (RoundDollar (* (* (SUBTRACT MotorcycleFactor DeductibleRelativity) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Golfmobile-ACV") (= BasePremium PreliminaryBaseRate) ELSE (IF (EQUALS CalculationType "Truck-ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) TruckOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> (+ CostNewRelativity SpecialTypesMiscellaneousFactor) DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ CostNewRelativity (SUBTRACT SpecialTypesMiscellaneousFactor DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) ZoneRatedOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Special-SA") (= BasePremium (RoundDollar (* (/ StatedAmount 100.0) PreliminaryBaseRate))) ELSE (IF (EQUALS CalculationType "Truck-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Dealers") (IF (EQUALS VehicleType "Special") (= BasePremium (RoundDollar (* (* (+ (+ DealerBlanketLowRate DealerBlanketMediumRate) DealerBlanketHighRate) DeductibleRelativity) DealerAdjustmentFactor)))) ELSE (IF (EQUALS CalculationType "Hired Auto") (= BasePremium (RoundDollar (* (/ LV_DOUBLE : costofHired 100.0) PreliminaryBaseRate)))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (> MotorcycleFactor DeductibleRelativity) (= BasePremium (RoundDollar (* (* (SUBTRACT MotorcycleFactor DeductibleRelativity) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Golfmobile-ACV") (= BasePremium PreliminaryBaseRate) ELSE (IF (EQUALS CalculationType "Truck-ACV") (IF (> CostNewRelativity DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ (* (/ (SUBTRACT LV_INTEGER : OriginalCostNew 90000.0) 1000.0) TruckOver90000Factor) (SUBTRACT CostNewRelativity DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> (+ CostNewRelativity SpecialTypesMiscellaneousFactor) DeductibleRelativity) (= BasePremium (RoundDollar (* (* (+ CostNewRelativity (SUBTRACT SpecialTypesMiscellaneousFactor DeductibleRelativity)) AgeGroupRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0)) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "Stated Amount") (IF (> StatedAmountDedCompare DeductibleRelativity) (= BasePremium (RoundDollar (* (SUBTRACT (* (/ StatedAmount 100.0) StatedAmountRate) DeductibleRelativity) PreliminaryBaseRate))) ELSE (= BasePremium 0.0))))))))))))))))))
2015-01-01 16:06:07,522 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,545 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,547 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,547 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,547 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,548 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,548 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,548 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:07,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,550 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,550 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,550 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,550 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,551 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,551 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,551 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:07,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:07,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,553 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,553 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,553 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,553 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,553 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,554 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,554 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:07,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:07,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:07,556 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:07,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,558 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,558 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,558 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,558 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,558 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,558 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:07,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:07,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,560 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,560 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,560 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,560 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:07,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:07,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:07,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,563 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,563 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,563 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,563 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:07,564 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:07,564 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,564 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,564 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,564 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,565 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,565 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,566 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,566 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:07,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:07,567 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,567 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,567 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:07,567 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,567 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,568 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,568 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,568 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,568 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,568 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,569 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:07,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:07,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,570 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,570 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,570 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:07,570 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:07,570 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../OriginalCostNew"
2015-01-01 16:06:07,571 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,571 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,571 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../OriginalCostNew with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:07,571 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,571 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew returns false
2015-01-01 16:06:07,572 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,572 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:07,572 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,572 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,573 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,575 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,577 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:07,577 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='OriginalCostNew' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,579 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,609 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,609 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,611 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,613 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:07,614 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='OriginalCostNew' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,616 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,621 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,622 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,623 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:07,623 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:07,623 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program OriginalCostNew
2015-01-01 16:06:07,624 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../OriginalCostNew
2015-01-01 16:06:07,624 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../OriginalCostNew ) 
2015-01-01 16:06:07,624 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,624 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../OriginalCostNew"
2015-01-01 16:06:07,624 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,625 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,625 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../OriginalCostNew with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:07,625 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,625 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:07,626 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew returns true
2015-01-01 16:06:07,626 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:07,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../OriginalCostNew
2015-01-01 16:06:07,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> ../OriginalCostNew != ''
2015-01-01 16:06:07,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ( boolean( ../OriginalCostNew )  and ../OriginalCostNew != '')
2015-01-01 16:06:07,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ( boolean( ../OriginalCostNew )  and ../OriginalCostNew != '')
2015-01-01 16:06:07,627 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,627 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:07,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : OriginalCostNew
2015-01-01 16:06:07,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : OriginalCostNew
2015-01-01 16:06:07,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for OriginalCostNew
2015-01-01 16:06:07,629 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,629 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew returns false
2015-01-01 16:06:07,629 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,629 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:07,629 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,630 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,630 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,632 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,634 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:07,634 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='OriginalCostNew' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,636 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,660 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,660 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,662 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,665 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:07,666 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='OriginalCostNew' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,669 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,674 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,674 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,676 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:07,676 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:07,676 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program OriginalCostNew
2015-01-01 16:06:07,676 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value OriginalCostNew
2015-01-01 16:06:07,677 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../OriginalCostNew"
2015-01-01 16:06:07,677 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,677 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,678 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../OriginalCostNew with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:07,678 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,678 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:07,678 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew returns true
2015-01-01 16:06:07,678 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:07,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../OriginalCostNew
2015-01-01 16:06:07,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at OriginalCostNew as 40000 [ ../OriginalCostNew ] of type String
2015-01-01 16:06:07,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,680 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,680 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,680 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,680 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,681 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,681 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,681 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,681 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:07,681 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,681 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,682 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,682 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,682 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,682 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,682 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,683 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,683 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,683 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,683 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:07,683 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:07,683 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,684 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,684 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,684 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,684 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,684 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,684 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,685 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,685 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,685 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,685 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:07,685 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:07,685 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:07,686 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,686 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,687 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:07,687 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,687 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,687 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,687 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,687 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,688 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,688 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,688 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,688 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,688 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:07,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:07,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,689 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,690 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,690 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,690 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,690 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,690 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:07,691 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:07,691 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,691 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,691 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:07,692 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,692 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,692 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,692 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,692 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,693 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,693 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,693 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,693 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,693 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:07,693 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:07,694 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,694 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,694 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,694 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,695 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,695 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,695 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,695 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,695 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,695 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,696 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,696 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,696 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:07,696 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:07,696 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,697 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,697 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:07,697 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,697 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,697 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,698 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,698 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,698 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,698 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,698 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,699 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,699 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:07,699 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:07,699 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,699 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,700 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,700 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CostNewRelativity
2015-01-01 16:06:07,700 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CostNewRelativity
2015-01-01 16:06:07,700 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CostNewRelativity
2015-01-01 16:06:07,700 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,701 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CostNewRelativity returns false
2015-01-01 16:06:07,701 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,701 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CostNewRelativity
2015-01-01 16:06:07,701 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,702 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,702 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,704 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,706 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:07,706 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='CostNewRelativity' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,708 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program BF3A3190-87D7-302E-A791-BB28BA8A5F7C
2015-01-01 16:06:07,708 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name CostNewRelativity
2015-01-01 16:06:07,709 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='BF3A3190-87D7-302E-A791-BB28BA8A5F7C' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,716 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,716 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,716 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,716 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,716 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
												IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
													IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
														IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																		IF  ( VehicleType == "Special" ) THEN 
																			IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																				IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																					IF  ( CalculationType == "Truck-ACV" ) THEN 
																						IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
																							IF  ( XPATH:"../RatingPrimaryClassCode" == "7214" ) THEN 
																								LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( 15001 )  
																							ELSE 
																								IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																									LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																								ELSE 
																									LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																								END IF 
																							END IF 
																						ELSE 
																							LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Private Passenger" ) THEN 
														IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																			IF  ( VehicleType == "Special" ) THEN 
																				IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																					IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																						IF  ( CalculationType == "Truck-ACV" ) THEN 
																							IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
																								IF  ( XPATH:"../RatingPrimaryClassCode" == "7214" ) THEN 
																									LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( 15001 )  
																								ELSE 
																									IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																										LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																									ELSE 
																										LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																									END IF 
																								END IF 
																							ELSE 
																								LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													ELSE 
														IF  ( VehicleType == "Public Transportation" ) THEN 
															IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																IF  ( CoverageType == "Stated Amount" ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																					IF  ( VehicleType == "Special" ) THEN 
																						IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																							IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																								IF  ( CalculationType == "Truck-ACV" ) THEN 
																									IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
																										IF  ( XPATH:"../RatingPrimaryClassCode" == "7214" ) THEN 
																											LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( 15001 )  
																										ELSE 
																											IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																												LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																											ELSE 
																												LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																											END IF 
																										END IF 
																									ELSE 
																										LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														ELSE 
															IF  ( VehicleType == "Special" ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																				IF  ( VehicleType == "Special" ) THEN 
																					IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																							IF  ( CalculationType == "Truck-ACV" ) THEN 
																								IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
																									IF  ( XPATH:"../RatingPrimaryClassCode" == "7214" ) THEN 
																										LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( 15001 )  
																									ELSE 
																										IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																											LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																										ELSE 
																											LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																										END IF 
																									END IF 
																								ELSE 
																									LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															ELSE 
																IF  ( VehicleType == "Truck" ) THEN 
																	IF  ( CoverageType == "ACV" ) THEN 
																		IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
																			IF  ( XPATH:"../RatingPrimaryClassCode" == "7214" ) THEN 
																				LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( 15001 )  
																			ELSE 
																				IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																					LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																				ELSE 
																					LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																				END IF 
																			END IF 
																		ELSE 
																			LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																		END IF 
																	ELSE 
																		IF  ( CoverageType == "Stated Amount" ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																							IF  ( VehicleType == "Special" ) THEN 
																								IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																										IF  ( CalculationType == "Truck-ACV" ) THEN 
																											IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
																												IF  ( XPATH:"../RatingPrimaryClassCode" == "7214" ) THEN 
																													LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( 15001 )  
																												ELSE 
																													IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																														LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																													ELSE 
																														LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																													END IF 
																												END IF 
																											ELSE 
																												LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																ELSE 
																	IF  ( VehicleType == "Zone Rated" ) THEN 
																		IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																							IF  ( VehicleType == "Special" ) THEN 
																								IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																										IF  ( CalculationType == "Truck-ACV" ) THEN 
																											IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
																												IF  ( XPATH:"../RatingPrimaryClassCode" == "7214" ) THEN 
																													LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( 15001 )  
																												ELSE 
																													IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																														LV_DOUBLE:LookupTruckCollisionCostNewRelativity = RateTable:TruckCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																													ELSE 
																														LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																													END IF 
																												END IF 
																											ELSE 
																												LV_DOUBLE:LookupTruckCollisionCostNewRelativity = 0.0 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
													IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
														IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																			IF  ( VehicleType == "Special" ) THEN 
																				IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																					IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																							IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																								IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																									LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = RateTable:PrivatePassengerCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																								ELSE 
																									LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = 0.0 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													ELSE 
														IF  ( VehicleType == "Private Passenger" ) THEN 
															IF  ( CoverageType == "ACV" ) THEN 
																IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																	LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = RateTable:PrivatePassengerCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																ELSE 
																	LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = 0.0 
																END IF 
															ELSE 
																IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																				IF  ( VehicleType == "Special" ) THEN 
																					IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																							IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																								IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																									IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																										LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = RateTable:PrivatePassengerCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																									ELSE 
																										LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = 0.0 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														ELSE 
															IF  ( VehicleType == "Public Transportation" ) THEN 
																IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																	IF  ( CoverageType == "Stated Amount" ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																						IF  ( VehicleType == "Special" ) THEN 
																							IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																										IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																											IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																												LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = RateTable:PrivatePassengerCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																											ELSE 
																												LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = 0.0 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															ELSE 
																IF  ( VehicleType == "Special" ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																					IF  ( VehicleType == "Special" ) THEN 
																						IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																							IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																									IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																										IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																											LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = RateTable:PrivatePassengerCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																										ELSE 
																											LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = 0.0 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																ELSE 
																	IF  ( VehicleType == "Truck" ) THEN 
																		IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																			IF  ( CoverageType == "Stated Amount" ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																							IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																								IF  ( VehicleType == "Special" ) THEN 
																									IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																										IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																											IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																												IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																													IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																														LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = RateTable:PrivatePassengerCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																													ELSE 
																														LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = 0.0 
																													END IF 
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	ELSE 
																		IF  ( VehicleType == "Zone Rated" ) THEN 
																			IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																							IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																								IF  ( VehicleType == "Special" ) THEN 
																									IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																										IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																											IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																												IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																													IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																														LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = RateTable:PrivatePassengerCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																													ELSE 
																														LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity = 0.0 
																													END IF 
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF
LV_INTEGER:ratingBasisNumeric = 0.0
IF  ( XPATH:"../RatingBasisNumeric" != null ) THEN 
						LV_INTEGER:ratingBasisNumeric = XPATH:"../RatingBasisNumeric" 
					END IF
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
										IF  ( VehicleType == "Special" ) THEN 
											LV_STRING:ratingPrimaryClassCode = "" 
											IF  ( XPATH:"../ClassCode" != null ) THEN 
												LV_STRING:ratingPrimaryClassCode = XPATH:"../ClassCode" 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
										IF  ( VehicleType == "Public Transportation" ) THEN 
											IF  ( CoverageType == "ACV" ) THEN 
												IF  ( LV_INTEGER:RatingBasisNumeric == 1.0 ) THEN 
													IF  ( LV_STRING:ratingPrimaryClassCode == "7214" ) THEN 
														IF  ( 15001.0 > 0.0 ) THEN 
															LV_DOUBLE:LookupZoneRatedCollisionCostNewRelativity = RateTable:ZoneRatedCollisionCostNewRelativity ( 15001 )  
														ELSE 
															LV_DOUBLE:LookupZoneRatedCollisionCostNewRelativity = 0.0 
														END IF 
													ELSE 
														IF  ( LV_STRING:ratingPrimaryClassCode != "7214" ) THEN 
															IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																LV_DOUBLE:LookupZoneRatedCollisionCostNewRelativity = RateTable:ZoneRatedCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
															ELSE 
																LV_DOUBLE:LookupZoneRatedCollisionCostNewRelativity = 0.0 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										ELSE 
											IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
												IF  (  NOT (   ( VehicleType == "Truck" )  )  ) THEN 
													IF  ( VehicleType == "Zone Rated" ) THEN 
														IF  ( CoverageType == "ACV" ) THEN 
															IF  ( LV_STRING:ratingPrimaryClassCode == "7214" ) THEN 
																IF  ( 15001.0 > 0.0 ) THEN 
																	LV_DOUBLE:LookupZoneRatedCollisionCostNewRelativity = RateTable:ZoneRatedCollisionCostNewRelativity ( 15001 )  
																ELSE 
																	LV_DOUBLE:LookupZoneRatedCollisionCostNewRelativity = 0.0 
																END IF 
															ELSE 
																IF  ( LV_STRING:ratingPrimaryClassCode != "7214" ) THEN 
																	IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																		LV_DOUBLE:LookupZoneRatedCollisionCostNewRelativity = RateTable:ZoneRatedCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
																	ELSE 
																		LV_DOUBLE:LookupZoneRatedCollisionCostNewRelativity = 0.0 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
										IF  ( VehicleType == "Public Transportation" ) THEN 
											IF  ( CoverageType == "ACV" ) THEN 
												IF  (  NOT (   ( LV_INTEGER:RatingBasisNumeric == 1.0 )  )  ) THEN 
													IF  ( LV_STRING:ratingPrimaryClassCode == "7214" ) THEN 
														IF  ( 15001.0 > 0.0 ) THEN 
															LV_DOUBLE:LookupPublicTransportationCollisionCostNewRelativity = RateTable:PublicTransportationCollisionCostNewRelativity ( 15001 )  
														ELSE 
															LV_DOUBLE:LookupPublicTransportationCollisionCostNewRelativity = 0.0 
														END IF 
													ELSE 
														IF  ( LV_STRING:ratingPrimaryClassCode != "7214" ) THEN 
															IF  ( LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																LV_DOUBLE:LookupPublicTransportationCollisionCostNewRelativity = RateTable:PublicTransportationCollisionCostNewRelativity ( LV_INTEGER:OriginalCostNew )  
															ELSE 
																LV_DOUBLE:LookupPublicTransportationCollisionCostNewRelativity = 0.0 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
		IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
							IF  ( VehicleType == "Special" ) THEN 
								IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
										IF  ( CalculationType == "Truck-ACV" ) THEN 
											CostNewRelativity = LV_DOUBLE:LookupTruckCollisionCostNewRelativity 
										ELSE 
											IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
												CostNewRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	ELSE 
		IF  ( VehicleType == "Private Passenger" ) THEN 
			IF  ( CoverageType == "ACV" ) THEN 
				CostNewRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity 
			ELSE 
				IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
								IF  ( VehicleType == "Special" ) THEN 
									IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
										IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
											IF  ( CalculationType == "Truck-ACV" ) THEN 
												CostNewRelativity = LV_DOUBLE:LookupTruckCollisionCostNewRelativity 
											ELSE 
												IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
													CostNewRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		ELSE 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				IF  ( CoverageType == "ACV" ) THEN 
					IF  ( LV_INTEGER:RatingBasisNumeric == 1.0 ) THEN 
						IF  ( LV_STRING:ratingPrimaryClassCode == "7214" ) THEN 
							CostNewRelativity = LookupZoneRatedCollisionCostNewRelativity 
						ELSE 
							IF  ( LV_STRING:ratingPrimaryClassCode != "7214" ) THEN 
								CostNewRelativity = LookupZoneRatedCollisionCostNewRelativity 
							END IF 
						END IF 
					ELSE 
						IF  ( LV_STRING:ratingPrimaryClassCode == "7214" ) THEN 
							CostNewRelativity = LookupPublicTransportationCollisionCostNewRelativity 
						ELSE 
							IF  ( LV_STRING:ratingPrimaryClassCode != "7214" ) THEN 
								CostNewRelativity = LookupPublicTransportationCollisionCostNewRelativity 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( CoverageType == "Stated Amount" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
										IF  ( VehicleType == "Special" ) THEN 
											IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
												IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
													IF  ( CalculationType == "Truck-ACV" ) THEN 
														CostNewRelativity = LV_DOUBLE:LookupTruckCollisionCostNewRelativity 
													ELSE 
														IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
															CostNewRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					ELSE 
						CostNewRelativity = 0.0 
					END IF 
				END IF 
			ELSE 
				IF  ( VehicleType == "Special" ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
									IF  ( VehicleType == "Special" ) THEN 
										IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
											IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
												IF  ( CalculationType == "Truck-ACV" ) THEN 
													CostNewRelativity = LV_DOUBLE:LookupTruckCollisionCostNewRelativity 
												ELSE 
													IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
														CostNewRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( VehicleType == "Truck" ) THEN 
						IF  ( CoverageType == "ACV" ) THEN 
							CostNewRelativity = LV_DOUBLE:LookupTruckCollisionCostNewRelativity 
						ELSE 
							IF  ( CoverageType == "Stated Amount" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
												IF  ( VehicleType == "Special" ) THEN 
													IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
														IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
															IF  ( CalculationType == "Truck-ACV" ) THEN 
																CostNewRelativity = LV_DOUBLE:LookupTruckCollisionCostNewRelativity 
															ELSE 
																IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																	CostNewRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							ELSE 
								CostNewRelativity = 0.0 
							END IF 
						END IF 
					ELSE 
						IF  ( VehicleType == "Zone Rated" ) THEN 
							IF  ( CoverageType == "ACV" ) THEN 
								IF  ( LV_STRING:ratingPrimaryClassCode == "7214" ) THEN 
									CostNewRelativity = LookupZoneRatedCollisionCostNewRelativity 
								ELSE 
									IF  ( LV_STRING:ratingPrimaryClassCode != "7214" ) THEN 
										CostNewRelativity = LookupZoneRatedCollisionCostNewRelativity 
									END IF 
								END IF 
							ELSE 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
												IF  ( VehicleType == "Special" ) THEN 
													IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
														IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
															IF  ( CalculationType == "Truck-ACV" ) THEN 
																CostNewRelativity = LV_DOUBLE:LookupTruckCollisionCostNewRelativity 
															ELSE 
																IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																	CostNewRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionCostNewRelativity 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:07,717 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,728 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,731 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (IF (EQUALS XPATH : "../RatingPrimaryClassCode" "7214") (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity 15001))) ELSE (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (IF (EQUALS XPATH : "../RatingPrimaryClassCode" "7214") (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity 15001))) ELSE (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (IF (EQUALS XPATH : "../RatingPrimaryClassCode" "7214") (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity 15001))) ELSE (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (IF (EQUALS XPATH : "../RatingPrimaryClassCode" "7214") (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity 15001))) ELSE (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0)))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (EQUALS CoverageType "ACV") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (IF (EQUALS XPATH : "../RatingPrimaryClassCode" "7214") (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity 15001))) ELSE (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0)) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (IF (EQUALS XPATH : "../RatingPrimaryClassCode" "7214") (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity 15001))) ELSE (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (IF (EQUALS XPATH : "../RatingPrimaryClassCode" "7214") (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity 15001))) ELSE (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity (RateTable (TruckCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0))) ELSE (= LV_DOUBLE : LookupTruckCollisionCostNewRelativity 0.0)))))))))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity (RateTable (PrivatePassengerCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "ACV") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity (RateTable (PrivatePassengerCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity 0.0)) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity (RateTable (PrivatePassengerCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity (RateTable (PrivatePassengerCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity 0.0))))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity (RateTable (PrivatePassengerCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity 0.0))))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity (RateTable (PrivatePassengerCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity 0.0))))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity (RateTable (PrivatePassengerCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity 0.0))))))))))))))))))) (= LV_INTEGER : ratingBasisNumeric 0.0) (IF (NOTEQUALS XPATH : "../RatingBasisNumeric" null) (= LV_INTEGER : ratingBasisNumeric XPATH : "../RatingBasisNumeric")) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (= LV_STRING : ratingPrimaryClassCode "") (IF (NOTEQUALS XPATH : "../ClassCode" null) (= LV_STRING : ratingPrimaryClassCode XPATH : "../ClassCode"))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (EQUALS LV_INTEGER : RatingBasisNumeric 1.0) (IF (EQUALS LV_STRING : ratingPrimaryClassCode "7214") (IF (> 15001.0 0.0) (= LV_DOUBLE : LookupZoneRatedCollisionCostNewRelativity (RateTable (ZoneRatedCollisionCostNewRelativity 15001))) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionCostNewRelativity 0.0)) ELSE (IF (NOTEQUALS LV_STRING : ratingPrimaryClassCode "7214") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupZoneRatedCollisionCostNewRelativity (RateTable (ZoneRatedCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionCostNewRelativity 0.0)))))) ELSE (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Truck")) (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "ACV") (IF (EQUALS LV_STRING : ratingPrimaryClassCode "7214") (IF (> 15001.0 0.0) (= LV_DOUBLE : LookupZoneRatedCollisionCostNewRelativity (RateTable (ZoneRatedCollisionCostNewRelativity 15001))) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionCostNewRelativity 0.0)) ELSE (IF (NOTEQUALS LV_STRING : ratingPrimaryClassCode "7214") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupZoneRatedCollisionCostNewRelativity (RateTable (ZoneRatedCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionCostNewRelativity 0.0)))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (NOT (EQUALS LV_INTEGER : RatingBasisNumeric 1.0)) (IF (EQUALS LV_STRING : ratingPrimaryClassCode "7214") (IF (> 15001.0 0.0) (= LV_DOUBLE : LookupPublicTransportationCollisionCostNewRelativity (RateTable (PublicTransportationCollisionCostNewRelativity 15001))) ELSE (= LV_DOUBLE : LookupPublicTransportationCollisionCostNewRelativity 0.0)) ELSE (IF (NOTEQUALS LV_STRING : ratingPrimaryClassCode "7214") (IF (> LV_INTEGER : OriginalCostNew 0.0) (= LV_DOUBLE : LookupPublicTransportationCollisionCostNewRelativity (RateTable (PublicTransportationCollisionCostNewRelativity LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupPublicTransportationCollisionCostNewRelativity 0.0)))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= CostNewRelativity LV_DOUBLE : LookupTruckCollisionCostNewRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= CostNewRelativity LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "ACV") (= CostNewRelativity LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= CostNewRelativity LV_DOUBLE : LookupTruckCollisionCostNewRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= CostNewRelativity LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (EQUALS LV_INTEGER : RatingBasisNumeric 1.0) (IF (EQUALS LV_STRING : ratingPrimaryClassCode "7214") (= CostNewRelativity LookupZoneRatedCollisionCostNewRelativity) ELSE (IF (NOTEQUALS LV_STRING : ratingPrimaryClassCode "7214") (= CostNewRelativity LookupZoneRatedCollisionCostNewRelativity))) ELSE (IF (EQUALS LV_STRING : ratingPrimaryClassCode "7214") (= CostNewRelativity LookupPublicTransportationCollisionCostNewRelativity) ELSE (IF (NOTEQUALS LV_STRING : ratingPrimaryClassCode "7214") (= CostNewRelativity LookupPublicTransportationCollisionCostNewRelativity)))) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= CostNewRelativity LV_DOUBLE : LookupTruckCollisionCostNewRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= CostNewRelativity LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity)))))))))) ELSE (= CostNewRelativity 0.0))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= CostNewRelativity LV_DOUBLE : LookupTruckCollisionCostNewRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= CostNewRelativity LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity)))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (EQUALS CoverageType "ACV") (= CostNewRelativity LV_DOUBLE : LookupTruckCollisionCostNewRelativity) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= CostNewRelativity LV_DOUBLE : LookupTruckCollisionCostNewRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= CostNewRelativity LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity)))))))))) ELSE (= CostNewRelativity 0.0))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "ACV") (IF (EQUALS LV_STRING : ratingPrimaryClassCode "7214") (= CostNewRelativity LookupZoneRatedCollisionCostNewRelativity) ELSE (IF (NOTEQUALS LV_STRING : ratingPrimaryClassCode "7214") (= CostNewRelativity LookupZoneRatedCollisionCostNewRelativity))) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= CostNewRelativity LV_DOUBLE : LookupTruckCollisionCostNewRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= CostNewRelativity LV_DOUBLE : LookupPrivatePassengerCollisionCostNewRelativity))))))))))))))))))
2015-01-01 16:06:07,732 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,740 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,741 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,741 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,741 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,742 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,742 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,742 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,743 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,743 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,744 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,744 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:07,744 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,745 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,745 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,745 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,746 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,746 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,746 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,747 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,747 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,747 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,748 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:07,748 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:07,748 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,749 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,749 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,749 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,750 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,750 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,750 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,751 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,751 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,751 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,752 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:07,752 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:07,752 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:07,753 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,754 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,754 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:07,755 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,755 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,755 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,756 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,756 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,756 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,757 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,757 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,757 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,758 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:07,758 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:07,759 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,759 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,759 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,759 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,760 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,760 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,760 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,761 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,761 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,761 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:07,762 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:07,762 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,763 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,763 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:07,763 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,764 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,764 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,764 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,765 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,765 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,765 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,766 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,766 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,766 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:07,766 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:07,767 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,767 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,767 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,768 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,768 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,768 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,768 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,769 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,769 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,769 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,770 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:07,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:07,771 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,771 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,771 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:07,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,773 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,773 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,774 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,774 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,774 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:07,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:07,776 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,776 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,776 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:07,777 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,777 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,777 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,778 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,778 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,778 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,779 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,779 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,779 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,780 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:07,780 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:07,780 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,780 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,781 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,781 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,782 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,782 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,782 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,782 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,783 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,783 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:07,783 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:07,784 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:07,784 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,784 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,785 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,785 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,785 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,786 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,786 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,786 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,787 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,787 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:07,787 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:07,788 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:07,788 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,789 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,789 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:07,790 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,790 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,790 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,791 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,791 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,791 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,792 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,792 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,792 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,793 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:07,793 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:07,793 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,794 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,794 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,794 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,794 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,795 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,795 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,795 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,796 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,796 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:07,796 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:07,797 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,797 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,798 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:07,798 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,798 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,799 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,799 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,799 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,800 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,800 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,800 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,801 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,801 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:07,801 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:07,802 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,802 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,803 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:07,803 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,803 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:07,803 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:07,804 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:07,804 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,804 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,805 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:07,805 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:07,805 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:07,806 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:07,806 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:07,807 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:07,807 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:07,807 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:07,808 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,808 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:07,808 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:07,809 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:07,809 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,809 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,810 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:07,810 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:07,810 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:07,811 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:07,811 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:07,811 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:07,812 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:07,812 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:07,813 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,813 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,813 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:07,813 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:07,814 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:07,814 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,815 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns false
2015-01-01 16:06:07,815 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,815 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:07,816 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,817 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,818 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,820 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,824 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:07,824 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='ratingBasisNumeric' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,826 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,855 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,855 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,857 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,859 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:07,860 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='ratingBasisNumeric' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,863 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 21CFF73E-C387-39C5-8A80-D9D0077F9DF4
2015-01-01 16:06:07,863 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name ratingBasisNumeric
2015-01-01 16:06:07,863 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='21CFF73E-C387-39C5-8A80-D9D0077F9DF4' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,868 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,868 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,868 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,869 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,869 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LV_INTEGER:ratingBasisNumeric = 0.0
IF  ( XPATH:"../RatingBasisNumeric" != null ) THEN 
	LV_INTEGER:ratingBasisNumeric = XPATH:"../RatingBasisNumeric" 
END IF
LV_INTEGER:ratingBasisNumeric = 0.0
IF  ( XPATH:"../RatingBasisNumeric" != null ) THEN 
	LV_INTEGER:ratingBasisNumeric = XPATH:"../RatingBasisNumeric" 
END IF

2015-01-01 16:06:07,869 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,870 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,870 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= LV_INTEGER : ratingBasisNumeric 0.0) (IF (NOTEQUALS XPATH : "../RatingBasisNumeric" null) (= LV_INTEGER : ratingBasisNumeric XPATH : "../RatingBasisNumeric")) (= LV_INTEGER : ratingBasisNumeric 0.0) (IF (NOTEQUALS XPATH : "../RatingBasisNumeric" null) (= LV_INTEGER : ratingBasisNumeric XPATH : "../RatingBasisNumeric"))
2015-01-01 16:06:07,870 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,870 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:07,871 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,871 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,871 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:07,871 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:07,872 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:07,872 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,872 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:07,872 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:07,872 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:07,873 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:07,873 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0 [ 0.0 ] of type String
2015-01-01 16:06:07,873 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,873 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:07,874 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:07,874 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:07,874 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,874 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:07,875 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:07,875 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,875 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns false
2015-01-01 16:06:07,875 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,875 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:07,876 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,876 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,876 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,878 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,880 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:07,881 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='RatingBasisNumeric' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,882 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,906 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,906 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,908 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,911 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:07,912 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='RatingBasisNumeric' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,914 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program B6E75AB3-AB1A-3811-927C-702C8EB891E7
2015-01-01 16:06:07,914 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name RatingBasisNumeric
2015-01-01 16:06:07,915 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='B6E75AB3-AB1A-3811-927C-702C8EB891E7' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,917 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,917 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,917 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,918 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,918 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - RatingBasisNumeric = LV_INTEGER:LookupPublicTransportationRatingBasisNumeric

2015-01-01 16:06:07,918 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,918 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,919 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= RatingBasisNumeric LV_INTEGER : LookupPublicTransportationRatingBasisNumeric)
2015-01-01 16:06:07,919 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,919 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,919 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : RatingBasisNumeric
2015-01-01 16:06:07,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable RatingBasisNumeric
2015-01-01 16:06:07,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:07,921 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,921 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:07,921 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:07,921 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:07,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:07,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:07,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:07,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:07,923 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,923 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric returns false
2015-01-01 16:06:07,923 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,924 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:07,924 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,924 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,924 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,926 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,928 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:07,928 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationRatingBasisNumeric' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,930 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,953 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,954 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,956 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,958 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:07,958 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationRatingBasisNumeric' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,960 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 770D9DD8-AA83-3AF5-B5DF-C97D249DFDAC
2015-01-01 16:06:07,960 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:07,961 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='770D9DD8-AA83-3AF5-B5DF-C97D249DFDAC' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:07,964 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:07,964 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:07,964 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:07,964 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:07,965 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( ClassCodeNumeric == 0.0 ) THEN 
	LV_INTEGER:LookupPublicTransportationRatingBasisNumeric = 0.0 
ELSE 
	LV_INTEGER:LookupPublicTransportationRatingBasisNumeric = RateTable:PublicTransportationRatingBasisNumeric ( ClassCodeNumeric )  
END IF
IF  ( ClassCodeNumeric == 0.0 ) THEN 
	LV_INTEGER:LookupPublicTransportationRatingBasisNumeric = 0.0 
ELSE 
	LV_INTEGER:LookupPublicTransportationRatingBasisNumeric = RateTable:PublicTransportationRatingBasisNumeric ( ClassCodeNumeric )  
END IF
IF  ( ClassCodeNumeric == 0.0 ) THEN 
	LV_INTEGER:LookupPublicTransportationRatingBasisNumeric = 0.0 
ELSE 
	LV_INTEGER:LookupPublicTransportationRatingBasisNumeric = RateTable:PublicTransportationRatingBasisNumeric ( ClassCodeNumeric )  
END IF

2015-01-01 16:06:07,965 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:07,965 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:07,965 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (EQUALS ClassCodeNumeric 0.0) (= LV_INTEGER : LookupPublicTransportationRatingBasisNumeric 0.0) ELSE (= LV_INTEGER : LookupPublicTransportationRatingBasisNumeric (RateTable (PublicTransportationRatingBasisNumeric ClassCodeNumeric)))) (IF (EQUALS ClassCodeNumeric 0.0) (= LV_INTEGER : LookupPublicTransportationRatingBasisNumeric 0.0) ELSE (= LV_INTEGER : LookupPublicTransportationRatingBasisNumeric (RateTable (PublicTransportationRatingBasisNumeric ClassCodeNumeric)))) (IF (EQUALS ClassCodeNumeric 0.0) (= LV_INTEGER : LookupPublicTransportationRatingBasisNumeric 0.0) ELSE (= LV_INTEGER : LookupPublicTransportationRatingBasisNumeric (RateTable (PublicTransportationRatingBasisNumeric ClassCodeNumeric))))
2015-01-01 16:06:07,966 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:07,966 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,966 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : ClassCodeNumeric
2015-01-01 16:06:07,966 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable ClassCodeNumeric
2015-01-01 16:06:07,967 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ClassCodeNumeric
2015-01-01 16:06:07,967 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:07,967 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric returns false
2015-01-01 16:06:07,967 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:07,968 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:07,968 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:07,968 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,969 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:07,971 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:07,972 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:07,973 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='ClassCodeNumeric' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:07,974 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:07,997 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:07,998 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,000 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,002 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:08,002 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='ClassCodeNumeric' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,005 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 495FF9B6-3AC3-38F7-AE16-DDBF04E06E96
2015-01-01 16:06:08,006 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name ClassCodeNumeric
2015-01-01 16:06:08,006 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='495FF9B6-3AC3-38F7-AE16-DDBF04E06E96' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:08,009 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:08,009 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:08,009 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:08,010 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:08,010 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - ClassCodeNumeric = LV_INTEGER:LookupPublicTransportationPrimaryClassCodeNumeric

2015-01-01 16:06:08,010 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:08,010 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:08,011 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= ClassCodeNumeric LV_INTEGER : LookupPublicTransportationPrimaryClassCodeNumeric)
2015-01-01 16:06:08,011 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:08,011 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,011 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,012 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : ClassCodeNumeric
2015-01-01 16:06:08,012 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable ClassCodeNumeric
2015-01-01 16:06:08,012 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ClassCodeNumeric
2015-01-01 16:06:08,012 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,013 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,013 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric returns true
2015-01-01 16:06:08,013 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,013 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ClassCodeNumeric
2015-01-01 16:06:08,014 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,014 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,014 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,015 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,015 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,015 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationPrimaryClassCodeNumeric returns false
2015-01-01 16:06:08,015 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,016 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,016 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,016 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,017 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,019 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,021 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:08,021 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationPrimaryClassCodeNumeric' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,023 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,046 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,046 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,048 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,050 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:08,050 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationPrimaryClassCodeNumeric' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,053 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 68F85A42-AE9C-3BC7-A465-6E84CA28ABFB
2015-01-01 16:06:08,053 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,054 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='68F85A42-AE9C-3BC7-A465-6E84CA28ABFB' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:08,056 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:08,056 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:08,057 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:08,057 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:08,057 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( Fleet == "" || Type == "" || RadiusClass == "" ) THEN 
	LV_INTEGER:LookupPublicTransportationPrimaryClassCodeNumeric = 0.0 
ELSE 
	LV_INTEGER:LookupPublicTransportationPrimaryClassCodeNumeric = RateTable:PublicTransportationPrimaryClassCodeNumeric ( Type , Fleet , RadiusClass )  
END IF

2015-01-01 16:06:08,057 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:08,058 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:08,058 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (OR (OR (EQUALS Fleet "") (EQUALS Type "")) (EQUALS RadiusClass "")) (= LV_INTEGER : LookupPublicTransportationPrimaryClassCodeNumeric 0.0) ELSE (= LV_INTEGER : LookupPublicTransportationPrimaryClassCodeNumeric (RateTable (PublicTransportationPrimaryClassCodeNumeric Type , Fleet , RadiusClass))))
2015-01-01 16:06:08,058 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:08,058 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,059 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,059 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Fleet
2015-01-01 16:06:08,059 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Fleet
2015-01-01 16:06:08,060 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Fleet
2015-01-01 16:06:08,060 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,060 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Fleet returns false
2015-01-01 16:06:08,060 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,061 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Fleet
2015-01-01 16:06:08,061 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,061 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,062 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,064 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,066 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:08,066 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Fleet' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,068 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,093 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,093 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,095 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,097 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:08,098 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Fleet' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,100 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,105 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,106 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,107 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,108 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:08,108 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program Fleet
2015-01-01 16:06:08,109 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Fleet
2015-01-01 16:06:08,109 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Fleet = ''
2015-01-01 16:06:08,109 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,110 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,110 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Type
2015-01-01 16:06:08,110 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Type
2015-01-01 16:06:08,110 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Type
2015-01-01 16:06:08,111 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,111 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type returns false
2015-01-01 16:06:08,111 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,111 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type
2015-01-01 16:06:08,112 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,112 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,112 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,114 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,117 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:08,117 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Type' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,120 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,146 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,146 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,148 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,150 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:08,151 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Type' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,153 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,157 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,157 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,158 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,159 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:08,159 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program Type
2015-01-01 16:06:08,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Type
2015-01-01 16:06:08,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Type = ''
2015-01-01 16:06:08,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : RadiusClass
2015-01-01 16:06:08,161 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable RadiusClass
2015-01-01 16:06:08,161 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RadiusClass
2015-01-01 16:06:08,161 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,161 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RadiusClass returns false
2015-01-01 16:06:08,162 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,162 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RadiusClass
2015-01-01 16:06:08,162 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,163 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,163 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,165 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,167 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:08,167 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='RadiusClass' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,169 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,191 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,192 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,194 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,196 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:08,196 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='RadiusClass' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,198 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,202 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,202 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,204 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:08,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program RadiusClass
2015-01-01 16:06:08,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RadiusClass
2015-01-01 16:06:08,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RadiusClass = ''
2015-01-01 16:06:08,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((Fleet = '' or Type = '') or RadiusClass = '')
2015-01-01 16:06:08,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,207 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,207 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,207 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,207 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,208 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,208 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,208 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,208 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationPrimaryClassCodeNumeric returns true
2015-01-01 16:06:08,209 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,210 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:08,210 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,210 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Type
2015-01-01 16:06:08,210 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Type
2015-01-01 16:06:08,211 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Type
2015-01-01 16:06:08,211 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,211 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type
2015-01-01 16:06:08,211 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type returns true
2015-01-01 16:06:08,212 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type
2015-01-01 16:06:08,212 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Type
2015-01-01 16:06:08,212 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of Type
2015-01-01 16:06:08,213 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter Type is of type String value is Urban Bus
2015-01-01 16:06:08,213 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for Type is Urban Bus @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,213 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored Urban Bus @ index 0
2015-01-01 16:06:08,213 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:08,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Fleet
2015-01-01 16:06:08,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Fleet
2015-01-01 16:06:08,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Fleet
2015-01-01 16:06:08,215 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,215 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Fleet
2015-01-01 16:06:08,215 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Fleet returns true
2015-01-01 16:06:08,215 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Fleet
2015-01-01 16:06:08,216 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Fleet
2015-01-01 16:06:08,216 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of Fleet
2015-01-01 16:06:08,216 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter Fleet is of type String value is No
2015-01-01 16:06:08,217 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for Fleet is No @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,217 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored No @ index 1
2015-01-01 16:06:08,217 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:08,217 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,218 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : RadiusClass
2015-01-01 16:06:08,218 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable RadiusClass
2015-01-01 16:06:08,218 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RadiusClass
2015-01-01 16:06:08,218 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RadiusClass
2015-01-01 16:06:08,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RadiusClass returns true
2015-01-01 16:06:08,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RadiusClass
2015-01-01 16:06:08,219 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RadiusClass
2015-01-01 16:06:08,220 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of RadiusClass
2015-01-01 16:06:08,220 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter RadiusClass is of type String value is Local
2015-01-01 16:06:08,220 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for RadiusClass is Local @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,221 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored Local @ index 2
2015-01-01 16:06:08,222 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationPrimaryClassCodeNumeric ] Execution *************
2015-01-01 16:06:08,222 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146368222
2015-01-01 16:06:08,222 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:08,224 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationPrimaryClassCodeNumeric'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,226 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,249 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationPrimaryClassCodeNumeric'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,253 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> 70EFB882-B6C9-446E-8364-E66625C8B6E2
2015-01-01 16:06:08,254 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='70EFB882-B6C9-446E-8364-E66625C8B6E2'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A' return $x )
2015-01-01 16:06:08,259 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:08,260 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='70EFB882-B6C9-446E-8364-E66625C8B6E2'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A'  and $x/Column1='Urban Bus'  and $x/Column2='No'  and $x/Column3='Local' return $x
2015-01-01 16:06:08,265 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as 515.0
2015-01-01 16:06:08,265 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146368265
2015-01-01 16:06:08,266 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationPrimaryClassCodeNumeric
2015-01-01 16:06:08,266 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ClassCodeNumeric as 515.0 [ LookupPublicTransportationPrimaryClassCodeNumeric ] of type String
2015-01-01 16:06:08,267 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the ClassCodeNumeric in the xml, for assignment we will create it! 
2015-01-01 16:06:08,267 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ClassCodeNumeric
2015-01-01 16:06:08,267 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns ClassCodeNumeric = 0.0
2015-01-01 16:06:08,267 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ClassCodeNumeric = 0.0
2015-01-01 16:06:08,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,268 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,270 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,270 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,270 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric returns true
2015-01-01 16:06:08,270 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:08,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,272 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : ClassCodeNumeric
2015-01-01 16:06:08,272 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable ClassCodeNumeric
2015-01-01 16:06:08,272 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ClassCodeNumeric
2015-01-01 16:06:08,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,273 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,273 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric returns true
2015-01-01 16:06:08,273 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,273 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ClassCodeNumeric
2015-01-01 16:06:08,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of ClassCodeNumeric
2015-01-01 16:06:08,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter ClassCodeNumeric is of type String value is 515.0
2015-01-01 16:06:08,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for ClassCodeNumeric is 515.0 @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,274 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored 515.0 @ index 0
2015-01-01 16:06:08,275 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationRatingBasisNumeric ] Execution *************
2015-01-01 16:06:08,275 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146368275
2015-01-01 16:06:08,275 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:08,275 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationRatingBasisNumeric'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,277 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,325 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationRatingBasisNumeric'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,328 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> EC34429D-2106-4DCD-B1FE-82C5256CB47E
2015-01-01 16:06:08,328 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='EC34429D-2106-4DCD-B1FE-82C5256CB47E'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A' return $x )
2015-01-01 16:06:08,330 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:08,331 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='EC34429D-2106-4DCD-B1FE-82C5256CB47E'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A'  and number($x/NColumn1)=515.0 return $x
2015-01-01 16:06:08,335 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as 0.0
2015-01-01 16:06:08,335 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146368335
2015-01-01 16:06:08,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : ClassCodeNumeric
2015-01-01 16:06:08,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable ClassCodeNumeric
2015-01-01 16:06:08,337 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ClassCodeNumeric
2015-01-01 16:06:08,337 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,337 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,337 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric returns true
2015-01-01 16:06:08,338 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ClassCodeNumeric
2015-01-01 16:06:08,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns ClassCodeNumeric = 0.0
2015-01-01 16:06:08,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ClassCodeNumeric = 0.0
2015-01-01 16:06:08,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,341 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,341 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,341 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,341 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric returns true
2015-01-01 16:06:08,342 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,342 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,342 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,342 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:08,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : ClassCodeNumeric
2015-01-01 16:06:08,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable ClassCodeNumeric
2015-01-01 16:06:08,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ClassCodeNumeric
2015-01-01 16:06:08,343 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,344 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,344 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric returns true
2015-01-01 16:06:08,344 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,344 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ClassCodeNumeric
2015-01-01 16:06:08,345 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of ClassCodeNumeric
2015-01-01 16:06:08,345 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter ClassCodeNumeric is of type String value is 515.0
2015-01-01 16:06:08,345 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for ClassCodeNumeric is 515.0 @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,345 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored 515.0 @ index 0
2015-01-01 16:06:08,346 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationRatingBasisNumeric ] Execution *************
2015-01-01 16:06:08,346 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146368346
2015-01-01 16:06:08,346 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:08,346 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationRatingBasisNumeric'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,348 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,371 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationRatingBasisNumeric'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,374 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> EC34429D-2106-4DCD-B1FE-82C5256CB47E
2015-01-01 16:06:08,374 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='EC34429D-2106-4DCD-B1FE-82C5256CB47E'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A' return $x )
2015-01-01 16:06:08,376 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:08,377 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='EC34429D-2106-4DCD-B1FE-82C5256CB47E'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A'  and number($x/NColumn1)=515.0 return $x
2015-01-01 16:06:08,380 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as 0.0
2015-01-01 16:06:08,381 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146368381
2015-01-01 16:06:08,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : ClassCodeNumeric
2015-01-01 16:06:08,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable ClassCodeNumeric
2015-01-01 16:06:08,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ClassCodeNumeric
2015-01-01 16:06:08,382 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,382 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,383 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric returns true
2015-01-01 16:06:08,383 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ClassCodeNumeric
2015-01-01 16:06:08,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns ClassCodeNumeric = 0.0
2015-01-01 16:06:08,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ClassCodeNumeric = 0.0
2015-01-01 16:06:08,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,386 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,386 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,386 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric returns true
2015-01-01 16:06:08,387 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:08,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : ClassCodeNumeric
2015-01-01 16:06:08,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable ClassCodeNumeric
2015-01-01 16:06:08,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ClassCodeNumeric
2015-01-01 16:06:08,388 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric returns true
2015-01-01 16:06:08,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/ClassCodeNumeric
2015-01-01 16:06:08,389 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ClassCodeNumeric
2015-01-01 16:06:08,390 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of ClassCodeNumeric
2015-01-01 16:06:08,390 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter ClassCodeNumeric is of type String value is 515.0
2015-01-01 16:06:08,390 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for ClassCodeNumeric is 515.0 @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,390 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored 515.0 @ index 0
2015-01-01 16:06:08,391 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationRatingBasisNumeric ] Execution *************
2015-01-01 16:06:08,391 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146368391
2015-01-01 16:06:08,391 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:08,391 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationRatingBasisNumeric'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,393 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,416 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationRatingBasisNumeric'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,420 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> EC34429D-2106-4DCD-B1FE-82C5256CB47E
2015-01-01 16:06:08,420 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='EC34429D-2106-4DCD-B1FE-82C5256CB47E'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A' return $x )
2015-01-01 16:06:08,423 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:08,423 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='EC34429D-2106-4DCD-B1FE-82C5256CB47E'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A'  and number($x/NColumn1)=515.0 return $x
2015-01-01 16:06:08,427 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as 0.0
2015-01-01 16:06:08,427 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146368427
2015-01-01 16:06:08,428 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationRatingBasisNumeric
2015-01-01 16:06:08,428 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ LookupPublicTransportationRatingBasisNumeric ] of type String
2015-01-01 16:06:08,428 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the RatingBasisNumeric in the xml, for assignment we will create it! 
2015-01-01 16:06:08,428 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:08,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:08,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:08,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,431 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:08,431 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,431 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,431 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:08,432 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:08,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:08,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,433 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,433 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,433 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,433 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,434 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:08,434 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,434 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:08,434 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0.0 [ ../RatingBasisNumeric ] of type String
2015-01-01 16:06:08,435 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,435 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,435 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,435 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,435 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,436 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:08,436 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,436 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,436 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:08,436 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,437 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:08,437 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0 [ 0.0 ] of type String
2015-01-01 16:06:08,437 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,437 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:08,438 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:08,438 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:08,438 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,438 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,439 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,439 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,439 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,439 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:08,440 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,440 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:08,440 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:08,440 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:08,441 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,441 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,441 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,441 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,441 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,442 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,442 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,442 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:08,442 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,443 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,443 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:08,443 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,443 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:08,443 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:08,444 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,444 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,444 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,444 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,445 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,445 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:08,445 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,445 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:08,446 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0.0 [ ../RatingBasisNumeric ] of type String
2015-01-01 16:06:08,446 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:08,446 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0 [ 0.0 ] of type String
2015-01-01 16:06:08,446 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,447 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:08,447 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:08,447 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:08,447 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,447 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,448 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,448 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,448 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,448 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:08,448 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,449 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:08,449 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:08,449 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:08,449 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,450 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,450 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,450 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,450 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,450 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,451 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,451 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:08,451 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,451 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,451 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:08,452 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,452 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:08,452 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:08,452 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,452 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,453 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,453 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,453 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,453 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:08,454 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:08,454 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:08,454 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0.0 [ ../RatingBasisNumeric ] of type String
2015-01-01 16:06:08,454 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,454 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,455 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,455 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:08,455 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:08,455 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:08,455 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,456 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns false
2015-01-01 16:06:08,456 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,456 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:08,456 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,457 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,457 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,459 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,461 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:08,461 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='RatingBasisNumeric' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,463 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,487 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,487 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,489 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,491 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:08,491 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='RatingBasisNumeric' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,493 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,497 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,497 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,499 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,499 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:08,499 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program RatingBasisNumeric
2015-01-01 16:06:08,499 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:08,500 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,500 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,500 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,500 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:08,500 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,501 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,501 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:08,501 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,501 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:08,501 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:08,502 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,502 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,502 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,502 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:08,502 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:08,503 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:08,503 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,503 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:08,503 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:08,504 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:08,504 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:08,504 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,504 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,504 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:08,505 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:08,505 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,505 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,505 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:08,505 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:08,506 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:08,506 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:08,506 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,506 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,506 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,507 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,507 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,507 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,507 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,508 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,508 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,508 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,508 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:08,508 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:08,509 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,509 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,509 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,509 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,509 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,510 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,510 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,510 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,510 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,510 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:08,511 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:08,511 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:08,511 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,511 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,511 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,512 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,512 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,512 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,512 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,512 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,513 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,513 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:08,513 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,513 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,514 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,514 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,514 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:08,514 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,515 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,515 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,515 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,515 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,515 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,516 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,516 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,516 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,516 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:08,516 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:08,517 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,517 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,517 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,517 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,517 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,518 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,518 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,518 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,518 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,519 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:08,519 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:08,519 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,519 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,520 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:08,520 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,520 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,520 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,521 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,521 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,521 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,521 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,522 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,522 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,522 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:08,522 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:08,522 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,523 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,523 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:08,523 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,523 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,524 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,524 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,524 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,524 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,524 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,525 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,525 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,525 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:08,525 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:08,526 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,526 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,526 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,526 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,526 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,527 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,527 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,527 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,527 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,527 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,528 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,528 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,528 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:08,528 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:08,529 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,529 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,529 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,529 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,529 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,530 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,530 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,530 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,530 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,530 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:08,531 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:08,531 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:08,531 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,531 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,531 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,532 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,532 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,532 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,532 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,532 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,533 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,533 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:08,533 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,533 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,534 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,534 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,534 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:08,534 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,535 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,535 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,535 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,535 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,535 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,536 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,536 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,536 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,536 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:08,536 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:08,537 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,537 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,537 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,537 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,537 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,538 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,538 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,538 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,538 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,539 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:08,539 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:08,539 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,539 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,540 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:08,540 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,540 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,540 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,540 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,541 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,541 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,541 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,541 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,542 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,542 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:08,542 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:08,542 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,543 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,543 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:08,543 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,543 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,543 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,544 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,544 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,544 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,544 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,544 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,545 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,545 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:08,545 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:08,545 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:08,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,547 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,547 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,547 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,547 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,547 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,548 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,548 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:08,548 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:08,548 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:08,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:08,550 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:08,550 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,550 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:08,550 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:08,551 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:08,551 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:08,551 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:08,551 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is RatingBasisNumeric = 1.0
2015-01-01 16:06:08,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,552 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,553 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,553 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,553 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,553 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,554 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,554 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:08,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:08,555 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,555 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,555 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,555 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,555 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,556 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,556 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,556 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,556 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,556 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:08,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:08,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:08,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,558 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,558 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,558 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,558 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,558 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:08,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:08,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,561 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,561 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,562 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,562 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:08,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:08,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,564 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,564 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,564 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,564 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,564 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:08,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:08,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:08,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,567 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,567 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,567 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,567 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,567 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,568 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,568 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:08,568 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:08,568 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:08,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,569 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,570 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,570 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,570 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,570 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,570 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,571 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,571 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:08,572 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:08,572 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,572 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,573 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:08,573 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,573 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,573 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,573 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,574 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,574 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,574 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,574 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,575 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,575 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:08,575 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:08,575 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,576 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,576 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,576 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:08,576 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:08,576 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:08,577 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,577 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:08,577 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:08,577 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:08,578 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:08,578 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:08,578 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( RatingBasisNumeric = 1.0 )
2015-01-01 16:06:08,578 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,579 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,579 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "7214"
2015-01-01 16:06:08,579 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,579 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,579 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,580 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingPrimaryClassCode
2015-01-01 16:06:08,580 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,580 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode returns false
2015-01-01 16:06:08,580 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,581 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,581 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,581 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,581 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,583 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,585 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:08,585 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='ratingPrimaryClassCode' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,587 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,613 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,613 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,615 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,617 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:08,617 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='ratingPrimaryClassCode' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,620 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 15222E11-32D9-3443-8539-621890FE4491
2015-01-01 16:06:08,621 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name ratingPrimaryClassCode
2015-01-01 16:06:08,621 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='15222E11-32D9-3443-8539-621890FE4491' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:08,626 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:08,626 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:08,626 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:08,626 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:08,627 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LV_STRING:Class = ""
LV_STRING:className = ""
IF  ( XPATH:"../Class" != null ) THEN 
						LV_STRING:className = XPATH:"../Class" 
					END IF
IF  ( LV_STRING:className != "" ) THEN 
						LV_STRING:Class = LV_STRING:className 
					END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
			IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
				IF  ( VehicleType == "Special" ) THEN 
					IF  (  NOT (   ( LV_STRING:Class == "Ambulance Services" )  )  ) THEN 
						IF  (  NOT (   ( LV_STRING:Class == "Driver Training Programs" )  )  ) THEN 
							IF  (  NOT (   ( LV_STRING:Class == "Fire Departments" )  )  ) THEN 
								IF  (  NOT (   ( LV_STRING:Class == "Funeral Directors" )  )  ) THEN 
									IF  (  NOT (   ( LV_STRING:Class == "Law Enforcement Agencies" )  )  ) THEN 
										IF  (  NOT (   ( LV_STRING:Class == "Leasing or Rental Concerns" )  )  ) THEN 
											IF  ( LV_STRING:Class == "Golf Carts and Low Speed Vehicles" ) THEN 
												LV_STRING:ratingPrimaryClassCode = "" 
												IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
													LV_STRING:ratingPrimaryClassCode = XPATH:"../RatingPrimaryClassCode" 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
			IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
				IF  ( VehicleType == "Special" ) THEN 
					LV_STRING:ratingPrimaryClassCode = "" 
					IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
						LV_STRING:ratingPrimaryClassCode = XPATH:"../RatingPrimaryClassCode" 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF
LV_STRING:ratingPrimaryClassCode = ""
IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
	LV_STRING:ratingPrimaryClassCode = XPATH:"../RatingPrimaryClassCode" 
END IF
LV_STRING:ratingPrimaryClassCode = ""
IF  ( XPATH:"../RatingPrimaryClassCode" != null ) THEN 
	LV_STRING:ratingPrimaryClassCode = XPATH:"../RatingPrimaryClassCode" 
END IF

2015-01-01 16:06:08,627 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:08,629 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:08,629 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= LV_STRING : Class "") (= LV_STRING : className "") (IF (NOTEQUALS XPATH : "../Class" null) (= LV_STRING : className XPATH : "../Class")) (IF (NOTEQUALS LV_STRING : className "") (= LV_STRING : Class LV_STRING : className)) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS LV_STRING : Class "Ambulance Services")) (IF (NOT (EQUALS LV_STRING : Class "Driver Training Programs")) (IF (NOT (EQUALS LV_STRING : Class "Fire Departments")) (IF (NOT (EQUALS LV_STRING : Class "Funeral Directors")) (IF (NOT (EQUALS LV_STRING : Class "Law Enforcement Agencies")) (IF (NOT (EQUALS LV_STRING : Class "Leasing or Rental Concerns")) (IF (EQUALS LV_STRING : Class "Golf Carts and Low Speed Vehicles") (= LV_STRING : ratingPrimaryClassCode "") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (= LV_STRING : ratingPrimaryClassCode XPATH : "../RatingPrimaryClassCode")))))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (= LV_STRING : ratingPrimaryClassCode "") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (= LV_STRING : ratingPrimaryClassCode XPATH : "../RatingPrimaryClassCode"))))))) (= LV_STRING : ratingPrimaryClassCode "") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (= LV_STRING : ratingPrimaryClassCode XPATH : "../RatingPrimaryClassCode")) (= LV_STRING : ratingPrimaryClassCode "") (IF (NOTEQUALS XPATH : "../RatingPrimaryClassCode" null) (= LV_STRING : ratingPrimaryClassCode XPATH : "../RatingPrimaryClassCode"))
2015-01-01 16:06:08,629 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:08,630 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,630 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,630 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,630 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : Class
2015-01-01 16:06:08,631 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : Class
2015-01-01 16:06:08,631 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Class
2015-01-01 16:06:08,631 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,631 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Class returns false
2015-01-01 16:06:08,632 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,632 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Class
2015-01-01 16:06:08,632 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,633 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,633 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,635 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,637 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:08,637 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Class' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,638 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,661 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,661 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,663 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,665 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:08,665 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Class' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,667 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,671 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,671 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,673 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,673 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:08,673 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program Class
2015-01-01 16:06:08,673 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Class
2015-01-01 16:06:08,674 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,674 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at Class as [StringEvaluator] ''
2015-01-01 16:06:08,674 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,674 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : className
2015-01-01 16:06:08,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : className
2015-01-01 16:06:08,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for className
2015-01-01 16:06:08,676 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,676 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className returns false
2015-01-01 16:06:08,676 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,676 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className
2015-01-01 16:06:08,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,677 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,679 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,681 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:08,681 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='className' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,682 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,705 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,705 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,707 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,709 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:08,709 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='className' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,711 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,715 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,716 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,717 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,717 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:08,717 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program className
2015-01-01 16:06:08,717 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value className
2015-01-01 16:06:08,718 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,718 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at className as [StringEvaluator] ''
2015-01-01 16:06:08,718 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,719 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:08,719 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:08,719 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../Class"
2015-01-01 16:06:08,719 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../Class @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,720 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../Class @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,720 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../Class with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Class
2015-01-01 16:06:08,720 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,720 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Class returns false
2015-01-01 16:06:08,721 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,721 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Class
2015-01-01 16:06:08,721 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,722 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,722 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,724 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,726 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:08,726 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Class' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,727 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,750 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,750 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,752 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,754 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:08,754 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Class' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,756 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,760 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,761 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,762 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,762 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:08,762 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program Class
2015-01-01 16:06:08,763 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../Class
2015-01-01 16:06:08,763 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../Class ) 
2015-01-01 16:06:08,763 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../Class ) 
2015-01-01 16:06:08,763 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,764 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,764 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,764 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,764 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : className
2015-01-01 16:06:08,765 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : className
2015-01-01 16:06:08,765 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for className
2015-01-01 16:06:08,765 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,765 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className
2015-01-01 16:06:08,766 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className returns true
2015-01-01 16:06:08,766 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className
2015-01-01 16:06:08,766 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value className
2015-01-01 16:06:08,766 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> className != ''
2015-01-01 16:06:08,767 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is className != ''
2015-01-01 16:06:08,767 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,767 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,767 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,768 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,768 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,768 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,768 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,769 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,769 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,769 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,769 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:08,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:08,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,771 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,771 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,771 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,771 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,772 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,772 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,772 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:08,773 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:08,773 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:08,773 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,773 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,774 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,774 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,774 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,774 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,775 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,775 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:08,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,776 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,776 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,777 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,777 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:08,777 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,777 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,777 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,778 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,778 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,778 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,779 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,779 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,779 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,779 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:08,779 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:08,780 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,780 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,780 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,780 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,781 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,781 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,781 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,781 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,782 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,782 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:08,782 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:08,782 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,783 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,783 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:08,783 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,783 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,784 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,784 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,784 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,784 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,785 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,785 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,785 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,785 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:08,786 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:08,786 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,786 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,787 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:08,787 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,787 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,787 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,787 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,788 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,788 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,788 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,788 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,789 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,789 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:08,789 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:08,790 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,790 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,790 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,790 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,791 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,791 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,791 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,791 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,791 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,792 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,792 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,792 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,792 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:08,793 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:08,793 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,793 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,793 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,794 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,794 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,794 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,794 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,794 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,795 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,795 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:08,795 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:08,795 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:08,796 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,796 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,796 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,796 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,797 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,797 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,797 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,797 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,797 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,798 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:08,798 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,798 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:08,799 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,799 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,799 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:08,800 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,800 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,800 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,800 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,800 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,801 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,801 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,801 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,802 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,802 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:08,802 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:08,802 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,802 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,803 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,803 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,803 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,803 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,804 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,804 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,804 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,804 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:08,805 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:08,805 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,805 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,806 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:08,806 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,806 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,806 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,806 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,807 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,807 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,807 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,807 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,808 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,808 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:08,808 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:08,808 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,809 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,809 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:08,809 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,809 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:08,810 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:08,810 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:08,810 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,810 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,811 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:08,811 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:08,811 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:08,811 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:08,812 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:08,812 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,812 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,812 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,813 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,813 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,813 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,813 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,814 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingPrimaryClassCode
2015-01-01 16:06:08,814 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,814 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,814 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode returns true
2015-01-01 16:06:08,815 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,815 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingPrimaryClassCode
2015-01-01 16:06:08,815 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,815 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at ratingPrimaryClassCode as [StringEvaluator] ''
2015-01-01 16:06:08,815 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,816 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:08,816 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:08,816 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingPrimaryClassCode"
2015-01-01 16:06:08,816 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingPrimaryClassCode @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,817 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingPrimaryClassCode @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,817 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingPrimaryClassCode with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,817 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,818 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode returns false
2015-01-01 16:06:08,818 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,818 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,818 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,819 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,819 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,821 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,824 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:08,825 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='RatingPrimaryClassCode' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,826 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,849 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,850 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,851 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,853 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:08,853 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='RatingPrimaryClassCode' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,855 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 6E6A6023-3ABE-38C7-BB45-7785D8F0101A
2015-01-01 16:06:08,856 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name RatingPrimaryClassCode
2015-01-01 16:06:08,856 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='6E6A6023-3ABE-38C7-BB45-7785D8F0101A' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:08,858 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:08,858 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:08,859 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:08,859 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:08,859 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( PrimaryClassCode == "Unknown" ) THEN 
	RatingPrimaryClassCode = LV_STRING:LookupPublicTransportationPrimaryClassCode 
ELSE 
	RatingPrimaryClassCode = PrimaryClassCode 
END IF

2015-01-01 16:06:08,859 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:08,860 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:08,860 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (EQUALS PrimaryClassCode "Unknown") (= RatingPrimaryClassCode LV_STRING : LookupPublicTransportationPrimaryClassCode) ELSE (= RatingPrimaryClassCode PrimaryClassCode))
2015-01-01 16:06:08,860 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:08,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Unknown"
2015-01-01 16:06:08,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : PrimaryClassCode
2015-01-01 16:06:08,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable PrimaryClassCode
2015-01-01 16:06:08,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PrimaryClassCode
2015-01-01 16:06:08,862 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,862 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PrimaryClassCode returns false
2015-01-01 16:06:08,862 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,862 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PrimaryClassCode
2015-01-01 16:06:08,863 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,863 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,864 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,866 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,867 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:08,868 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PrimaryClassCode' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,869 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,892 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,892 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,894 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,896 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:08,896 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PrimaryClassCode' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,898 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,902 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,902 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,904 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,904 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:08,904 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program PrimaryClassCode
2015-01-01 16:06:08,904 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PrimaryClassCode
2015-01-01 16:06:08,905 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns PrimaryClassCode = 'Unknown'
2015-01-01 16:06:08,905 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is PrimaryClassCode = 'Unknown'
2015-01-01 16:06:08,905 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,905 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,906 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,906 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,906 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : RatingPrimaryClassCode
2015-01-01 16:06:08,906 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable RatingPrimaryClassCode
2015-01-01 16:06:08,907 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingPrimaryClassCode
2015-01-01 16:06:08,907 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,907 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,907 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode returns true
2015-01-01 16:06:08,908 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,908 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingPrimaryClassCode
2015-01-01 16:06:08,908 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:08,908 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : PrimaryClassCode
2015-01-01 16:06:08,909 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable PrimaryClassCode
2015-01-01 16:06:08,909 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PrimaryClassCode
2015-01-01 16:06:08,909 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,909 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PrimaryClassCode
2015-01-01 16:06:08,910 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PrimaryClassCode returns true
2015-01-01 16:06:08,910 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PrimaryClassCode
2015-01-01 16:06:08,910 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PrimaryClassCode
2015-01-01 16:06:08,910 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingPrimaryClassCode as 515 [ PrimaryClassCode ] of type String
2015-01-01 16:06:08,911 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the RatingPrimaryClassCode in the xml, for assignment we will create it! 
2015-01-01 16:06:08,911 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingPrimaryClassCode
2015-01-01 16:06:08,911 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingPrimaryClassCode ) 
2015-01-01 16:06:08,911 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingPrimaryClassCode ) 
2015-01-01 16:06:08,912 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,912 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,912 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,912 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,913 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,913 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,913 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,913 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingPrimaryClassCode
2015-01-01 16:06:08,914 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,914 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,914 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode returns true
2015-01-01 16:06:08,914 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingPrimaryClassCode
2015-01-01 16:06:08,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingPrimaryClassCode"
2015-01-01 16:06:08,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingPrimaryClassCode @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingPrimaryClassCode @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,916 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingPrimaryClassCode with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,916 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,916 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,916 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode returns true
2015-01-01 16:06:08,916 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,917 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingPrimaryClassCode
2015-01-01 16:06:08,917 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingPrimaryClassCode as 515 [ ../RatingPrimaryClassCode ] of type String
2015-01-01 16:06:08,917 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,917 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingPrimaryClassCode
2015-01-01 16:06:08,919 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,919 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,919 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode returns true
2015-01-01 16:06:08,919 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingPrimaryClassCode
2015-01-01 16:06:08,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at ratingPrimaryClassCode as [StringEvaluator] ''
2015-01-01 16:06:08,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,921 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:08,921 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:08,921 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingPrimaryClassCode"
2015-01-01 16:06:08,921 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingPrimaryClassCode @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingPrimaryClassCode @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingPrimaryClassCode with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,922 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,922 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,922 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode returns true
2015-01-01 16:06:08,923 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingPrimaryClassCode
2015-01-01 16:06:08,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingPrimaryClassCode ) 
2015-01-01 16:06:08,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingPrimaryClassCode ) 
2015-01-01 16:06:08,924 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,924 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,924 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,924 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingPrimaryClassCode
2015-01-01 16:06:08,926 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,926 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,926 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode returns true
2015-01-01 16:06:08,926 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingPrimaryClassCode
2015-01-01 16:06:08,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingPrimaryClassCode"
2015-01-01 16:06:08,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingPrimaryClassCode @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingPrimaryClassCode @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,928 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingPrimaryClassCode with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,928 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,928 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,928 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode returns true
2015-01-01 16:06:08,929 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingPrimaryClassCode
2015-01-01 16:06:08,929 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingPrimaryClassCode
2015-01-01 16:06:08,929 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingPrimaryClassCode as 515 [ ../RatingPrimaryClassCode ] of type String
2015-01-01 16:06:08,929 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingPrimaryClassCode
2015-01-01 16:06:08,930 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns ratingPrimaryClassCode = '7214'
2015-01-01 16:06:08,930 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ratingPrimaryClassCode = '7214'
2015-01-01 16:06:08,930 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:08,930 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:08,930 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "7214"
2015-01-01 16:06:08,931 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,931 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,931 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:08,931 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingPrimaryClassCode
2015-01-01 16:06:08,932 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,932 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,932 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode returns true
2015-01-01 16:06:08,932 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:08,933 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingPrimaryClassCode
2015-01-01 16:06:08,933 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> ratingPrimaryClassCode != '7214'
2015-01-01 16:06:08,933 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ratingPrimaryClassCode != '7214'
2015-01-01 16:06:08,933 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,933 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,934 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,934 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : OriginalCostNew
2015-01-01 16:06:08,934 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : OriginalCostNew
2015-01-01 16:06:08,934 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for OriginalCostNew
2015-01-01 16:06:08,935 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,935 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:08,935 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew returns true
2015-01-01 16:06:08,935 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:08,935 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value OriginalCostNew
2015-01-01 16:06:08,936 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (OriginalCostNew > 0.0)
2015-01-01 16:06:08,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:08,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:08,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:08,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,939 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,939 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_DOUBLE : LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:08,939 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_DOUBLE : LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:08,939 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:08,939 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,940 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionCostNewRelativity returns false
2015-01-01 16:06:08,940 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:08,940 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:08,940 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,941 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,941 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,943 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,945 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:08,945 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationCollisionCostNewRelativity' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,946 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,969 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,969 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,971 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:08,973 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:08,973 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationCollisionCostNewRelativity' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:08,975 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:08,979 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:08,980 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:08,981 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:08,981 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:08,981 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:08,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:08,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:08,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:08,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,983 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : OriginalCostNew
2015-01-01 16:06:08,983 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : OriginalCostNew
2015-01-01 16:06:08,983 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for OriginalCostNew
2015-01-01 16:06:08,983 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,984 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:08,984 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew returns true
2015-01-01 16:06:08,984 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:08,984 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value OriginalCostNew
2015-01-01 16:06:08,984 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of OriginalCostNew
2015-01-01 16:06:08,985 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter OriginalCostNew is of type String value is 40000
2015-01-01 16:06:08,985 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for OriginalCostNew is 40000 @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,985 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored 40000 @ index 0
2015-01-01 16:06:08,985 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationCollisionCostNewRelativity ] Execution *************
2015-01-01 16:06:08,986 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146368985
2015-01-01 16:06:08,986 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:08,986 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationCollisionCostNewRelativity'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:08,989 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> 7AF04F3C-029A-33FC-8027-5CD43E59578D
2015-01-01 16:06:08,989 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='7AF04F3C-029A-33FC-8027-5CD43E59578D'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583'  and $x/Status='A' return $x )
2015-01-01 16:06:08,991 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:08,991 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='7AF04F3C-029A-33FC-8027-5CD43E59578D'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583'  and $x/Status='A'  and number($x/NColumn1)<=40000  order by number($x/NColumn1) descending return $x
2015-01-01 16:06:08,995 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as 1.35
2015-01-01 16:06:08,996 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146368996
2015-01-01 16:06:08,996 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:08,996 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,996 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,997 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,997 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,997 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:08,997 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,997 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:08,998 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:08,998 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:08,998 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:08,998 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:08,999 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:08,999 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:08,999 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:08,999 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:08,999 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,000 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,000 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,000 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,000 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,000 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,002 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,002 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,002 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,002 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,002 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,003 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,003 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,003 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,003 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,004 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,004 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,004 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,004 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,005 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,005 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,005 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,005 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,005 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,006 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,006 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,006 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,006 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,006 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,007 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,007 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,007 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,007 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,007 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,008 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,008 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,008 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,008 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,008 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,009 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:09,009 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,009 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,009 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,010 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,010 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,010 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,010 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,011 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,011 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,011 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,011 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,011 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,012 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,012 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:09,012 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,012 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,013 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,013 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,013 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,013 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,013 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,014 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,014 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,014 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,014 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,014 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,015 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,015 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,015 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,015 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,016 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,016 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,016 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,016 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,016 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,017 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,017 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,017 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,017 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,017 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,018 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,018 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:09,018 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,018 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,019 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,019 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,019 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,019 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,019 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,020 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,020 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,020 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,020 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,020 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:09,021 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is RatingBasisNumeric = 1.0
2015-01-01 16:06:09,021 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,021 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,022 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "7214"
2015-01-01 16:06:09,022 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,022 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:09,022 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:09,022 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingPrimaryClassCode
2015-01-01 16:06:09,023 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,023 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:09,023 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode returns true
2015-01-01 16:06:09,023 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:09,024 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingPrimaryClassCode
2015-01-01 16:06:09,024 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns ratingPrimaryClassCode = '7214'
2015-01-01 16:06:09,024 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ratingPrimaryClassCode = '7214'
2015-01-01 16:06:09,024 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,025 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,025 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "7214"
2015-01-01 16:06:09,025 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,025 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:09,025 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ratingPrimaryClassCode
2015-01-01 16:06:09,026 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingPrimaryClassCode
2015-01-01 16:06:09,026 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,026 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:09,026 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode returns true
2015-01-01 16:06:09,027 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingPrimaryClassCode
2015-01-01 16:06:09,027 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingPrimaryClassCode
2015-01-01 16:06:09,027 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> ratingPrimaryClassCode != '7214'
2015-01-01 16:06:09,027 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ratingPrimaryClassCode != '7214'
2015-01-01 16:06:09,027 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,028 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,028 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,028 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,028 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CostNewRelativity
2015-01-01 16:06:09,029 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CostNewRelativity
2015-01-01 16:06:09,029 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CostNewRelativity
2015-01-01 16:06:09,039 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,040 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CostNewRelativity
2015-01-01 16:06:09,040 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CostNewRelativity returns true
2015-01-01 16:06:09,040 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CostNewRelativity
2015-01-01 16:06:09,040 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CostNewRelativity
2015-01-01 16:06:09,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:09,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:09,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:09,041 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,042 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:09,042 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionCostNewRelativity returns true
2015-01-01 16:06:09,042 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:09,042 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationCollisionCostNewRelativity
2015-01-01 16:06:09,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at CostNewRelativity as 1.35 [ LookupPublicTransportationCollisionCostNewRelativity ] of type String
2015-01-01 16:06:09,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the CostNewRelativity in the xml, for assignment we will create it! 
2015-01-01 16:06:09,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CostNewRelativity
2015-01-01 16:06:09,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : DeductibleRelativity
2015-01-01 16:06:09,044 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable DeductibleRelativity
2015-01-01 16:06:09,044 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for DeductibleRelativity
2015-01-01 16:06:09,044 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,044 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/DeductibleRelativity returns false
2015-01-01 16:06:09,044 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,045 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/DeductibleRelativity
2015-01-01 16:06:09,045 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,045 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,045 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,047 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,049 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:09,049 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='DeductibleRelativity' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,050 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,073 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,073 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,075 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,077 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:09,077 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='DeductibleRelativity' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,081 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 1671E810-A92E-3B92-BF04-5017B441A503
2015-01-01 16:06:09,081 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name DeductibleRelativity
2015-01-01 16:06:09,081 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='1671E810-A92E-3B92-BF04-5017B441A503' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:09,090 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:09,090 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:09,091 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:09,091 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:09,091 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
			IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
				IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
					LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = 0.0 
				ELSE 
					LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = RateTable:GarageDealersCollisionBlanketDeductibleFactor ( Deductible )  
				END IF 
			ELSE 
				IF  ( VehicleType == "Private Passenger" ) THEN 
					IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
										IF  ( VehicleType == "Special" ) THEN 
											IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
												IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
													IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
														IF  ( CalculationType == "Dealers" ) THEN 
															IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = 0.0 
															ELSE 
																LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = RateTable:GarageDealersCollisionBlanketDeductibleFactor ( Deductible )  
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( VehicleType == "Public Transportation" ) THEN 
						IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
							IF  ( CoverageType == "Stated Amount" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
												IF  ( VehicleType == "Special" ) THEN 
													IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
														IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
															IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																IF  ( CalculationType == "Dealers" ) THEN 
																	IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																		LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = 0.0 
																	ELSE 
																		LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = RateTable:GarageDealersCollisionBlanketDeductibleFactor ( Deductible )  
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					ELSE 
						IF  ( VehicleType == "Special" ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
											IF  ( VehicleType == "Special" ) THEN 
												IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
													IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
														IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
															IF  ( CalculationType == "Dealers" ) THEN 
																IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																	LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = 0.0 
																ELSE 
																	LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = RateTable:GarageDealersCollisionBlanketDeductibleFactor ( Deductible )  
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						ELSE 
							IF  ( VehicleType == "Truck" ) THEN 
								IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
									IF  ( CoverageType == "Stated Amount" ) THEN 
										IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
												IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
													IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
														IF  ( VehicleType == "Special" ) THEN 
															IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																	IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																		IF  ( CalculationType == "Dealers" ) THEN 
																			IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																				LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = 0.0 
																			ELSE 
																				LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = RateTable:GarageDealersCollisionBlanketDeductibleFactor ( Deductible )  
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							ELSE 
								IF  ( VehicleType == "Zone Rated" ) THEN 
									IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
												IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
													IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
														IF  ( VehicleType == "Special" ) THEN 
															IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																	IF  (  NOT (   ( CalculationType == "Priv Pass-SA" )  )  ) THEN 
																		IF  ( CalculationType == "Dealers" ) THEN 
																			IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																				LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = 0.0 
																			ELSE 
																				LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor = RateTable:GarageDealersCollisionBlanketDeductibleFactor ( Deductible )  
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
											IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
												IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
													IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
														IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																	IF  ( VehicleType == "Special" ) THEN 
																		IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																			IF  ( CalculationType == "Truck-SA" ) THEN 
																				IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																					LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																				ELSE 
																					LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																				END IF 
																			END IF 
																		END IF 
																		IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																			IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																				IF  ( CalculationType == "Truck-ACV" ) THEN 
																					IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																						LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																					ELSE 
																						LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											ELSE 
												IF  ( VehicleType == "Private Passenger" ) THEN 
													IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
														IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																		IF  ( VehicleType == "Special" ) THEN 
																			IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																				IF  ( CalculationType == "Truck-SA" ) THEN 
																					IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																						LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																					ELSE 
																						LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																					END IF 
																				END IF 
																			END IF 
																			IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																				IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																					IF  ( CalculationType == "Truck-ACV" ) THEN 
																						IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																							LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																						ELSE 
																							LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Public Transportation" ) THEN 
														IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
															IF  ( CoverageType == "Stated Amount" ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																				IF  ( VehicleType == "Special" ) THEN 
																					IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																						IF  ( CalculationType == "Truck-SA" ) THEN 
																							IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																								LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																							ELSE 
																								LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																							END IF 
																						END IF 
																					END IF 
																					IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																							IF  ( CalculationType == "Truck-ACV" ) THEN 
																								IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																									LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																								ELSE 
																									LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													ELSE 
														IF  ( VehicleType == "Special" ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																			IF  ( VehicleType == "Special" ) THEN 
																				IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																					IF  ( CalculationType == "Truck-SA" ) THEN 
																						IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																							LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																						ELSE 
																							LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																						END IF 
																					END IF 
																				END IF 
																				IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																					IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																						IF  ( CalculationType == "Truck-ACV" ) THEN 
																							IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																								LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																							ELSE 
																								LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														ELSE 
															IF  ( VehicleType == "Truck" ) THEN 
																IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																	LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																ELSE 
																	LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																END IF 
																IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																	IF  ( CoverageType == "Stated Amount" ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																						IF  ( VehicleType == "Special" ) THEN 
																							IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																								IF  ( CalculationType == "Truck-SA" ) THEN 
																									IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																										LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																									ELSE 
																										LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																									END IF 
																								END IF 
																							END IF 
																							IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																									IF  ( CalculationType == "Truck-ACV" ) THEN 
																										IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																											LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																										ELSE 
																											LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															ELSE 
																IF  ( VehicleType == "Zone Rated" ) THEN 
																	IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																						IF  ( VehicleType == "Special" ) THEN 
																							IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																								IF  ( CalculationType == "Truck-SA" ) THEN 
																									IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																										LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																									ELSE 
																										LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																									END IF 
																								END IF 
																							END IF 
																							IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																									IF  ( CalculationType == "Truck-ACV" ) THEN 
																										IF  ( Deductible != "" && Deductible != "Not Applicable" ) THEN 
																											LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = RateTable:TruckCollisionDeductibleRelativity ( Deductible )  
																										ELSE 
																											LV_DOUBLE:LookupTruckCollisionDeductibleRelativity = 0.0 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
												IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
													IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
														IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																		IF  ( VehicleType == "Special" ) THEN 
																			IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																				IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																					IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																						IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																							LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																						ELSE 
																							LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																			IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																				IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																					LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																				ELSE 
																					LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																				END IF 
																			ELSE 
																				IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																					IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																						IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																							IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																								LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																							ELSE 
																								LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Private Passenger" ) THEN 
														IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
															LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
														ELSE 
															LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
														END IF 
														IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																			IF  ( VehicleType == "Special" ) THEN 
																				IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																					IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																						IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																							IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																								LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																							ELSE 
																								LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																				IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																					IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																						LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																					ELSE 
																						LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																					END IF 
																				ELSE 
																					IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																							IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																								IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																									LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																								ELSE 
																									LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													ELSE 
														IF  ( VehicleType == "Public Transportation" ) THEN 
															IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																IF  ( CoverageType == "Stated Amount" ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																					IF  ( VehicleType == "Special" ) THEN 
																						IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																							IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																								IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																									IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																										LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																									ELSE 
																										LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																						IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																							IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																								LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																							ELSE 
																								LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																							END IF 
																						ELSE 
																							IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																									IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																										IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																											LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																										ELSE 
																											LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														ELSE 
															IF  ( VehicleType == "Special" ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																				IF  ( VehicleType == "Special" ) THEN 
																					IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																							IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																								IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																									LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																								ELSE 
																									LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																					IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																						IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																							LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																						ELSE 
																							LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																						END IF 
																					ELSE 
																						IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																							IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																								IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																									IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																										LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																									ELSE 
																										LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															ELSE 
																IF  ( VehicleType == "Truck" ) THEN 
																	IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																		IF  ( CoverageType == "Stated Amount" ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																							IF  ( VehicleType == "Special" ) THEN 
																								IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																										IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																											IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																												LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																											ELSE 
																												LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																								IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																									IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																										LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																									ELSE 
																										LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																									END IF 
																								ELSE 
																									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																										IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																											IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																												IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																													LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																												ELSE 
																													LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																ELSE 
																	IF  ( VehicleType == "Zone Rated" ) THEN 
																		IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																							IF  ( VehicleType == "Special" ) THEN 
																								IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Truck-SA" )  )  ) THEN 
																										IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																											IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																												LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																											ELSE 
																												LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																								IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																									IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																										LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																									ELSE 
																										LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																									END IF 
																								ELSE 
																									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																										IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																											IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																												IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																													LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = 0.0 
																												ELSE 
																													LV_DOUBLE:LookupPrivatePassengerCollisionDeductibleRelativity = RateTable:PrivatePassengerCollisionDeductibleRelativity ( LV_STRING:deductible )  
																												END IF 
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF
LV_INTEGER:ratingBasisNumeric = 0.0
IF  ( XPATH:"../RatingBasisNumeric" != null ) THEN 
					LV_INTEGER:ratingBasisNumeric = XPATH:"../RatingBasisNumeric" 
				END IF
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
								IF  ( VehicleType == "Public Transportation" ) THEN 
									IF  ( LV_INTEGER:RatingBasisNumeric == 1.0 ) THEN 
										IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
											LV_DOUBLE:LookupZoneRatedCollisionDeductibleRelativity = 0.0 
										ELSE 
											LV_DOUBLE:LookupZoneRatedCollisionDeductibleRelativity = RateTable:ZoneRatedCollisionDeductibleRelativity ( Deductible )  
										END IF 
									END IF 
								ELSE 
									IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Truck" )  )  ) THEN 
											IF  ( VehicleType == "Zone Rated" ) THEN 
												IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
													LV_DOUBLE:LookupZoneRatedCollisionDeductibleRelativity = 0.0 
												ELSE 
													LV_DOUBLE:LookupZoneRatedCollisionDeductibleRelativity = RateTable:ZoneRatedCollisionDeductibleRelativity ( Deductible )  
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
								IF  ( VehicleType == "Public Transportation" ) THEN 
									IF  (  NOT (   ( LV_INTEGER:RatingBasisNumeric == 1.0 )  )  ) THEN 
										IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
											LV_DOUBLE:LookupPublicTransportationCollisionDeductibleRelativity = 0.0 
										ELSE 
											LV_DOUBLE:LookupPublicTransportationCollisionDeductibleRelativity = RateTable:PublicTransportationCollisionDeductibleRelativity ( Deductible )  
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
		DeductibleRelativity = LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor 
		IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
							IF  ( VehicleType == "Special" ) THEN 
								IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
									IF  ( CalculationType == "Truck-SA" ) THEN 
										DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
									ELSE 
										IF  ( CalculationType == "Priv Pass-SA" ) THEN 
											DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
										END IF 
									END IF 
								END IF 
								IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
									DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
								ELSE 
									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
										IF  ( CalculationType == "Truck-ACV" ) THEN 
											DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
										ELSE 
											IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
												DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	ELSE 
		IF  ( VehicleType == "Private Passenger" ) THEN 
			DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
			IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
				IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
								IF  ( VehicleType == "Special" ) THEN 
									IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
										IF  ( CalculationType == "Truck-SA" ) THEN 
											DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
										ELSE 
											IF  ( CalculationType == "Priv Pass-SA" ) THEN 
												DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
											ELSE 
												IF  ( CalculationType == "Dealers" ) THEN 
													DeductibleRelativity = LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor 
												END IF 
											END IF 
										END IF 
									END IF 
									IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
										DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
									ELSE 
										IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
											IF  ( CalculationType == "Truck-ACV" ) THEN 
												DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
											ELSE 
												IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
													DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		ELSE 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				IF  ( LV_INTEGER:RatingBasisNumeric == 1.0 ) THEN 
					DeductibleRelativity = LV_DOUBLE:LookupZoneRatedCollisionDeductibleRelativity 
				ELSE 
					DeductibleRelativity = LV_DOUBLE:LookupPublicTransportationCollisionDeductibleRelativity 
				END IF 
				IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
					IF  ( CoverageType == "Stated Amount" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
										IF  ( VehicleType == "Special" ) THEN 
											IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
												IF  ( CalculationType == "Truck-SA" ) THEN 
													DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
												ELSE 
													IF  ( CalculationType == "Priv Pass-SA" ) THEN 
														DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
													ELSE 
														IF  ( CalculationType == "Dealers" ) THEN 
															DeductibleRelativity = LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor 
														END IF 
													END IF 
												END IF 
											END IF 
											IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
												DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
											ELSE 
												IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
													IF  ( CalculationType == "Truck-ACV" ) THEN 
														DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
													ELSE 
														IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
															DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			ELSE 
				IF  ( VehicleType == "Special" ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
									IF  ( VehicleType == "Special" ) THEN 
										IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
											IF  ( CalculationType == "Truck-SA" ) THEN 
												DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
											ELSE 
												IF  ( CalculationType == "Priv Pass-SA" ) THEN 
													DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
												ELSE 
													IF  ( CalculationType == "Dealers" ) THEN 
														DeductibleRelativity = LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor 
													END IF 
												END IF 
											END IF 
										END IF 
										IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
											DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
										ELSE 
											IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
												IF  ( CalculationType == "Truck-ACV" ) THEN 
													DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
												ELSE 
													IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
														DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( VehicleType == "Truck" ) THEN 
						DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
						IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
							IF  ( CoverageType == "Stated Amount" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
												IF  ( VehicleType == "Special" ) THEN 
													IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
														IF  ( CalculationType == "Truck-SA" ) THEN 
															DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
														ELSE 
															IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
															ELSE 
																IF  ( CalculationType == "Dealers" ) THEN 
																	DeductibleRelativity = LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor 
																END IF 
															END IF 
														END IF 
													END IF 
													IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
														DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
													ELSE 
														IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
															IF  ( CalculationType == "Truck-ACV" ) THEN 
																DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
															ELSE 
																IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																	DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					ELSE 
						IF  ( VehicleType == "Zone Rated" ) THEN 
							DeductibleRelativity = LV_DOUBLE:LookupZoneRatedCollisionDeductibleRelativity 
							IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
												IF  ( VehicleType == "Special" ) THEN 
													IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
														IF  ( CalculationType == "Truck-SA" ) THEN 
															DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
														ELSE 
															IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
															ELSE 
																IF  ( CalculationType == "Dealers" ) THEN 
																	DeductibleRelativity = LV_DOUBLE:LookupGarageDealersCollisionBlanketDeductibleFactor 
																END IF 
															END IF 
														END IF 
													END IF 
													IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
														DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
													ELSE 
														IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
															IF  ( CalculationType == "Truck-ACV" ) THEN 
																DeductibleRelativity = LV_DOUBLE:LookupTruckCollisionDeductibleRelativity 
															ELSE 
																IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																	DeductibleRelativity = LookupPrivatePassengerCollisionDeductibleRelativity 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:09,092 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:09,106 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:09,107 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor 0.0) ELSE (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor (RateTable (GarageDealersCollisionBlanketDeductibleFactor Deductible)))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (EQUALS CalculationType "Dealers") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor 0.0) ELSE (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor (RateTable (GarageDealersCollisionBlanketDeductibleFactor Deductible)))))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (EQUALS CalculationType "Dealers") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor 0.0) ELSE (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor (RateTable (GarageDealersCollisionBlanketDeductibleFactor Deductible))))))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (EQUALS CalculationType "Dealers") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor 0.0) ELSE (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor (RateTable (GarageDealersCollisionBlanketDeductibleFactor Deductible))))))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (EQUALS CalculationType "Dealers") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor 0.0) ELSE (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor (RateTable (GarageDealersCollisionBlanketDeductibleFactor Deductible))))))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (NOT (EQUALS CalculationType "Priv Pass-SA")) (IF (EQUALS CalculationType "Dealers") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor 0.0) ELSE (= LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor (RateTable (GarageDealersCollisionBlanketDeductibleFactor Deductible))))))))))))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))) (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))) (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))) (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))) (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)) (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))) (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))) (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity (RateTable (TruckCollisionDeductibleRelativity Deductible))) ELSE (= LV_DOUBLE : LookupTruckCollisionDeductibleRelativity 0.0)))))))))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (EQUALS CalculationType "Priv Pass-SA") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))) (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (EQUALS CalculationType "Priv Pass-SA") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (EQUALS CalculationType "Priv Pass-SA") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (EQUALS CalculationType "Priv Pass-SA") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (EQUALS CalculationType "Priv Pass-SA") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (NOT (EQUALS CalculationType "Truck-SA")) (IF (EQUALS CalculationType "Priv Pass-SA") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible)))) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionDeductibleRelativity (RateTable (PrivatePassengerCollisionDeductibleRelativity LV_STRING : deductible))))))))))))))))))))) (= LV_INTEGER : ratingBasisNumeric 0.0) (IF (NOTEQUALS XPATH : "../RatingBasisNumeric" null) (= LV_INTEGER : ratingBasisNumeric XPATH : "../RatingBasisNumeric")) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS LV_INTEGER : RatingBasisNumeric 1.0) (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupZoneRatedCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionDeductibleRelativity (RateTable (ZoneRatedCollisionDeductibleRelativity Deductible))))) ELSE (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Truck")) (IF (EQUALS VehicleType "Zone Rated") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupZoneRatedCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionDeductibleRelativity (RateTable (ZoneRatedCollisionDeductibleRelativity Deductible))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS LV_INTEGER : RatingBasisNumeric 1.0)) (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupPublicTransportationCollisionDeductibleRelativity 0.0) ELSE (= LV_DOUBLE : LookupPublicTransportationCollisionDeductibleRelativity (RateTable (PublicTransportationCollisionDeductibleRelativity Deductible))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (= DeductibleRelativity LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity)))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Dealers") (= DeductibleRelativity LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS LV_INTEGER : RatingBasisNumeric 1.0) (= DeductibleRelativity LV_DOUBLE : LookupZoneRatedCollisionDeductibleRelativity) ELSE (= DeductibleRelativity LV_DOUBLE : LookupPublicTransportationCollisionDeductibleRelativity)) (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Dealers") (= DeductibleRelativity LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity)))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Dealers") (= DeductibleRelativity LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity)))))))))) ELSE (IF (EQUALS VehicleType "Truck") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Dealers") (= DeductibleRelativity LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity)))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (= DeductibleRelativity LV_DOUBLE : LookupZoneRatedCollisionDeductibleRelativity) (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Dealers") (= DeductibleRelativity LV_DOUBLE : LookupGarageDealersCollisionBlanketDeductibleFactor))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= DeductibleRelativity LV_DOUBLE : LookupTruckCollisionDeductibleRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= DeductibleRelativity LookupPrivatePassengerCollisionDeductibleRelativity))))))))))))))))))
2015-01-01 16:06:09,108 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:09,112 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,112 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,112 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,112 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,112 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,113 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,113 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,113 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,113 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,114 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,114 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,114 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,114 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,114 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,115 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,115 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,115 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,115 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,115 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,116 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,116 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,116 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,116 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,116 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,117 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,117 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,117 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,117 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,117 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,118 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,118 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,118 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,118 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,119 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,119 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,119 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,119 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,120 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,120 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,120 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,120 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,121 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,121 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,121 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,121 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,121 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,122 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,122 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,122 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,122 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,122 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,123 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,123 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,123 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,123 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,123 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,124 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,124 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,124 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,124 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,124 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:09,125 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,125 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,125 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,125 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,126 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,126 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,126 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,126 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,126 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,127 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,127 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,127 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,127 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,127 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:09,128 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,128 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,128 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,128 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,129 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,129 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,129 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,129 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,129 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,130 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,130 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,130 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,130 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,130 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,131 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,131 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,131 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,131 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,132 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,132 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,132 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,132 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,132 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,133 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,133 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,133 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,133 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,133 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:09,134 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,134 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,134 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,134 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,135 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,135 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,135 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,135 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,135 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,136 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,136 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,136 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,136 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,138 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,138 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,138 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,138 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,138 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,140 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,140 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,140 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,140 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,140 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,141 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,141 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,141 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,141 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,141 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,142 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,142 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,142 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,143 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,143 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,143 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,143 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,143 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,144 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,144 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,144 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,144 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,145 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,145 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,145 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,145 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,145 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,146 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,146 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,146 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,146 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,146 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,147 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,147 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,147 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:09,147 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,148 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,148 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,148 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,148 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,148 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,149 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,149 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,149 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,149 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,149 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,150 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,150 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,150 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:09,150 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,151 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,151 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,151 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,151 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,151 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,152 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,152 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,152 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,152 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,152 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,153 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,153 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,153 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,153 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,153 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,154 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,154 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,154 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,154 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,154 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,155 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,155 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,155 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,155 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,156 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,156 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,156 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:09,156 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,157 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,157 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,157 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,157 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,157 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,158 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,158 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,158 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,158 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,158 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,159 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,160 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,160 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,160 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,160 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,161 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,161 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,161 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,161 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,161 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,162 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,162 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,162 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,162 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,162 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,163 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,163 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,163 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,163 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,163 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,163 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,164 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,164 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,164 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,165 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,165 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,165 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,165 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,165 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,166 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,166 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,166 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,166 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,166 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,167 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,168 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,169 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,169 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,169 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:09,169 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,170 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,170 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,170 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,170 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,170 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,171 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,171 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,171 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,171 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,171 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,172 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,172 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,172 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:09,172 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,173 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,173 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,173 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,173 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,173 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,174 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,174 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,174 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,174 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,174 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,175 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,175 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,175 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,175 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,175 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,176 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,176 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,176 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,176 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,177 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,177 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,177 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,177 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,178 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,178 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,178 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,178 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:09,178 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,180 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,180 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,180 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,180 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,181 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,181 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,181 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,181 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0 [ 0.0 ] of type String
2015-01-01 16:06:09,181 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,182 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:09,182 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:09,182 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:09,182 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,182 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,183 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,183 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,183 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,183 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:09,183 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,184 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:09,184 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:09,184 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:09,184 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,185 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,185 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,185 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,185 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,185 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,186 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,186 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,186 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,186 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,186 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,187 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,187 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,187 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:09,187 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,187 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,188 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,188 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,188 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,188 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:09,188 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,189 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:09,189 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0.0 [ ../RatingBasisNumeric ] of type String
2015-01-01 16:06:09,189 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,189 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,190 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,190 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,190 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,190 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,190 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,191 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,191 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,191 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,191 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,191 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,192 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,192 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,192 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,192 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,192 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,193 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,193 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,193 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,193 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:09,194 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,194 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,194 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,194 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,194 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,195 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,195 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,195 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,195 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,195 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,197 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,197 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,197 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,197 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,197 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,198 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:09,198 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,198 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,198 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,199 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,199 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,199 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,199 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,199 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,200 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,200 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,200 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,200 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,200 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,201 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,201 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,201 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,201 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,201 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,202 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,202 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,202 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,202 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,202 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,204 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,207 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,207 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,207 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,207 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,207 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,208 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,208 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,208 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,208 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,209 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,210 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,210 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,210 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,210 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,210 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,211 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:09,211 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,211 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,211 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,212 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,212 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,212 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,212 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,213 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,213 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,213 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,213 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,213 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:09,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,214 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,215 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,215 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,215 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,215 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,216 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,216 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,216 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,217 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,217 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,217 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,217 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,217 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,218 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,218 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,218 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,218 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,219 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,219 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,220 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,220 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:09,220 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is RatingBasisNumeric = 1.0
2015-01-01 16:06:09,220 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,221 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,221 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,221 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,221 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,221 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,222 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,222 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,222 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,222 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,223 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,223 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,223 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,223 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,223 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,224 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,224 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,224 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,224 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,224 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,225 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,225 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,225 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,225 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,225 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,225 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,226 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,226 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,226 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,226 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,226 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,227 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,227 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,227 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,227 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,227 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,228 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,228 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,228 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,229 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,229 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,229 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,229 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,229 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,230 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,230 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,230 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,230 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,230 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,231 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,231 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,231 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,231 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,231 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,232 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,232 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,232 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,232 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,232 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,233 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,233 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,233 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,233 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:09,234 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,234 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,234 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,234 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,234 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,235 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,235 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,235 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,235 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,235 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,236 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,236 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,236 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,236 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:09,237 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,237 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,237 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,237 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,238 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,238 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,238 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,238 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,238 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,239 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,239 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,239 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,239 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,239 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,240 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,240 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,240 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,240 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,241 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,241 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,241 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,241 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,241 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,242 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,242 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,242 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:09,242 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( RatingBasisNumeric = 1.0 )
2015-01-01 16:06:09,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:09,244 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:09,244 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:09,244 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,244 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:09,244 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:09,245 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:09,245 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:09,245 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = ''
2015-01-01 16:06:09,245 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,245 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,246 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:09,246 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:09,246 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:09,246 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,247 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:09,247 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:09,247 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:09,247 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:09,247 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Deductible = 'Not Applicable'
2015-01-01 16:06:09,248 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (Deductible = '' or Deductible = 'Not Applicable')
2015-01-01 16:06:09,248 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,248 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,248 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,249 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,249 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,249 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_DOUBLE : LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,249 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_DOUBLE : LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,250 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,250 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,250 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionDeductibleRelativity returns false
2015-01-01 16:06:09,250 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,250 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,251 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,251 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,251 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,253 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,255 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:09,256 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationCollisionDeductibleRelativity' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,258 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,281 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,281 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,283 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,285 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:09,286 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationCollisionDeductibleRelativity' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,288 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,292 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,293 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,294 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:09,294 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:09,294 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,295 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,295 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,295 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:09,295 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,296 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Deductible
2015-01-01 16:06:09,296 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Deductible
2015-01-01 16:06:09,296 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Deductible
2015-01-01 16:06:09,296 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,296 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:09,297 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible returns true
2015-01-01 16:06:09,297 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Deductible
2015-01-01 16:06:09,297 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Deductible
2015-01-01 16:06:09,297 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of Deductible
2015-01-01 16:06:09,297 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter Deductible is of type String value is 250
2015-01-01 16:06:09,298 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for Deductible is 250 @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,298 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored 250 @ index 0
2015-01-01 16:06:09,298 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationCollisionDeductibleRelativity ] Execution *************
2015-01-01 16:06:09,298 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146369298
2015-01-01 16:06:09,299 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:09,299 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationCollisionDeductibleRelativity'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:09,301 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> 55D0DEBB-217C-3379-BED7-A7B014DA6FE2
2015-01-01 16:06:09,302 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='55D0DEBB-217C-3379-BED7-A7B014DA6FE2'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583'  and $x/Status='A' return $x )
2015-01-01 16:06:09,304 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:09,304 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='55D0DEBB-217C-3379-BED7-A7B014DA6FE2'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583'  and $x/Status='A'  and $x/Column1='250' return $x
2015-01-01 16:06:09,306 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as -0.065
2015-01-01 16:06:09,306 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146369306
2015-01-01 16:06:09,306 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,307 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,307 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,307 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,307 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,307 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,308 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,308 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,308 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,308 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,308 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,309 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,309 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,309 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,309 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,309 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,310 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,310 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,310 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,310 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,310 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,311 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,312 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,312 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,312 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,313 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,314 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,314 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,315 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,315 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,315 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,315 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,316 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,316 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,316 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,316 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,317 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,317 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,317 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,317 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,318 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,318 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,319 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,319 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,320 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:09,320 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,320 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,321 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,321 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,321 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,321 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,321 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,322 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,322 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,322 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,322 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,322 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:09,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,323 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,324 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,324 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,325 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,325 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,325 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,325 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,325 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,326 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,326 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,326 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,326 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,327 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,327 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,327 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,327 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,327 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,328 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,328 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,328 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,328 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:09,328 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is RatingBasisNumeric = 1.0
2015-01-01 16:06:09,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,329 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,330 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : DeductibleRelativity
2015-01-01 16:06:09,330 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable DeductibleRelativity
2015-01-01 16:06:09,330 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for DeductibleRelativity
2015-01-01 16:06:09,330 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,330 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/DeductibleRelativity
2015-01-01 16:06:09,331 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/DeductibleRelativity returns true
2015-01-01 16:06:09,331 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/DeductibleRelativity
2015-01-01 16:06:09,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value DeductibleRelativity
2015-01-01 16:06:09,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_DOUBLE : LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,331 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_DOUBLE : LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,332 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,332 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,332 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,332 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionDeductibleRelativity returns true
2015-01-01 16:06:09,333 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,333 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationCollisionDeductibleRelativity
2015-01-01 16:06:09,333 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at DeductibleRelativity as -0.065 [ LookupPublicTransportationCollisionDeductibleRelativity ] of type String
2015-01-01 16:06:09,333 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the DeductibleRelativity in the xml, for assignment we will create it! 
2015-01-01 16:06:09,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,334 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,335 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,335 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,335 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,335 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,335 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:09,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,336 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,337 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value DeductibleRelativity
2015-01-01 16:06:09,337 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (CostNewRelativity > DeductibleRelativity)
2015-01-01 16:06:09,337 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,337 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,337 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : BasePremium
2015-01-01 16:06:09,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable BasePremium
2015-01-01 16:06:09,338 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for BasePremium
2015-01-01 16:06:09,338 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,338 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/BasePremium
2015-01-01 16:06:09,339 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/BasePremium returns true
2015-01-01 16:06:09,339 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/BasePremium
2015-01-01 16:06:09,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value BasePremium
2015-01-01 16:06:09,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,339 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : OriginalCostNew
2015-01-01 16:06:09,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : OriginalCostNew
2015-01-01 16:06:09,340 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for OriginalCostNew
2015-01-01 16:06:09,340 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,340 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:09,340 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew returns true
2015-01-01 16:06:09,341 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:09,341 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value OriginalCostNew
2015-01-01 16:06:09,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : PublicTransportationOver90000Factor
2015-01-01 16:06:09,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable PublicTransportationOver90000Factor
2015-01-01 16:06:09,343 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PublicTransportationOver90000Factor
2015-01-01 16:06:09,343 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,344 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationOver90000Factor returns false
2015-01-01 16:06:09,344 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,344 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationOver90000Factor
2015-01-01 16:06:09,344 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,345 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,345 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,347 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,348 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:09,348 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PublicTransportationOver90000Factor' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,350 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program B1C1E9B2-F43F-3769-AD92-A7C834FDC080
2015-01-01 16:06:09,350 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name PublicTransportationOver90000Factor
2015-01-01 16:06:09,351 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='B1C1E9B2-F43F-3769-AD92-A7C834FDC080' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:09,354 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:09,354 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:09,354 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:09,355 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:09,355 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LV_INTEGER:ratingBasisNumeric = 0.0
IF  ( XPATH:"../RatingBasisNumeric" != null ) THEN 
								LV_INTEGER:ratingBasisNumeric = XPATH:"../RatingBasisNumeric" 
							END IF
IF  ( XPATH:"../OriginalCostNew" != null && XPATH:"../OriginalCostNew" != "" ) THEN 
							LV_INTEGER:OriginalCostNew = XPATH:"../OriginalCostNew" 
						END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
		IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
						IF  ( VehicleType == "Public Transportation" ) THEN 
							IF  ( StatedAmount > 90000.0 && LV_INTEGER:ratingBasisNumeric == 1.0 ) THEN 
								PublicTransportationOver90000Factor = RateTable:ZoneRatedCollisionOver90000Factor ( "Y" )  
							ELSE 
								IF  ( StatedAmount > 90000.0 ) THEN 
									PublicTransportationOver90000Factor = RateTable:PublicTransportationCollisionOver90000Factor ( "Y" )  
								ELSE 
									PublicTransportationOver90000Factor = 0.0 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	ELSE 
		IF  ( VehicleType == "Private Passenger" ) THEN 
			IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
				IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
							IF  ( VehicleType == "Public Transportation" ) THEN 
								IF  ( StatedAmount > 90000.0 && LV_INTEGER:ratingBasisNumeric == 1.0 ) THEN 
									PublicTransportationOver90000Factor = RateTable:ZoneRatedCollisionOver90000Factor ( "Y" )  
								ELSE 
									IF  ( StatedAmount > 90000.0 ) THEN 
										PublicTransportationOver90000Factor = RateTable:PublicTransportationCollisionOver90000Factor ( "Y" )  
									ELSE 
										PublicTransportationOver90000Factor = 0.0 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		ELSE 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				IF  ( CoverageType == "ACV" ) THEN 
					IF  ( CoverageType == "ACV" || CoverageType == "ACV - Fire Only" || CoverageType == "ACV - Fire and Theft Only" || CoverageType == "ACV - Fire, Theft and Windstorm Only" || CoverageType == "ACV - Limited Specified Causes of Loss" || CoverageType == "ACV - Specified Causes of Loss" ) THEN 
						IF  ( LV_INTEGER:OriginalCostNew > 90000.0 && LV_INTEGER:ratingBasisNumeric == 1.0 ) THEN 
							PublicTransportationOver90000Factor = RateTable:ZoneRatedCollisionOver90000Factor ( "Y" )  
						ELSE 
							IF  ( LV_INTEGER:OriginalCostNew > 90000.0 ) THEN 
								PublicTransportationOver90000Factor = RateTable:PublicTransportationCollisionOver90000Factor ( "Y" )  
							ELSE 
								PublicTransportationOver90000Factor = 0.0 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( CoverageType == "Stated Amount" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
									IF  ( VehicleType == "Public Transportation" ) THEN 
										IF  ( StatedAmount > 90000.0 && LV_INTEGER:ratingBasisNumeric == 1.0 ) THEN 
											PublicTransportationOver90000Factor = RateTable:ZoneRatedCollisionOver90000Factor ( "Y" )  
										ELSE 
											IF  ( StatedAmount > 90000.0 ) THEN 
												PublicTransportationOver90000Factor = RateTable:PublicTransportationCollisionOver90000Factor ( "Y" )  
											ELSE 
												PublicTransportationOver90000Factor = 0.0 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			ELSE 
				IF  ( VehicleType == "Special" ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
								IF  ( VehicleType == "Public Transportation" ) THEN 
									IF  ( StatedAmount > 90000.0 && LV_INTEGER:ratingBasisNumeric == 1.0 ) THEN 
										PublicTransportationOver90000Factor = RateTable:ZoneRatedCollisionOver90000Factor ( "Y" )  
									ELSE 
										IF  ( StatedAmount > 90000.0 ) THEN 
											PublicTransportationOver90000Factor = RateTable:PublicTransportationCollisionOver90000Factor ( "Y" )  
										ELSE 
											PublicTransportationOver90000Factor = 0.0 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( VehicleType == "Truck" ) THEN 
						IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
							IF  ( CoverageType == "Stated Amount" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
											IF  ( VehicleType == "Public Transportation" ) THEN 
												IF  ( StatedAmount > 90000.0 && LV_INTEGER:ratingBasisNumeric == 1.0 ) THEN 
													PublicTransportationOver90000Factor = RateTable:ZoneRatedCollisionOver90000Factor ( "Y" )  
												ELSE 
													IF  ( StatedAmount > 90000.0 ) THEN 
														PublicTransportationOver90000Factor = RateTable:PublicTransportationCollisionOver90000Factor ( "Y" )  
													ELSE 
														PublicTransportationOver90000Factor = 0.0 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					ELSE 
						IF  ( VehicleType == "Zone Rated" ) THEN 
							IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
											IF  ( VehicleType == "Public Transportation" ) THEN 
												IF  ( StatedAmount > 90000.0 && LV_INTEGER:ratingBasisNumeric == 1.0 ) THEN 
													PublicTransportationOver90000Factor = RateTable:ZoneRatedCollisionOver90000Factor ( "Y" )  
												ELSE 
													IF  ( StatedAmount > 90000.0 ) THEN 
														PublicTransportationOver90000Factor = RateTable:PublicTransportationCollisionOver90000Factor ( "Y" )  
													ELSE 
														PublicTransportationOver90000Factor = 0.0 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:09,355 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:09,357 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:09,358 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= LV_INTEGER : ratingBasisNumeric 0.0) (IF (NOTEQUALS XPATH : "../RatingBasisNumeric" null) (= LV_INTEGER : ratingBasisNumeric XPATH : "../RatingBasisNumeric")) (IF (AND (NOTEQUALS XPATH : "../OriginalCostNew" null) (NOTEQUALS XPATH : "../OriginalCostNew" "")) (= LV_INTEGER : OriginalCostNew XPATH : "../OriginalCostNew")) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (AND (> StatedAmount 90000.0) (EQUALS LV_INTEGER : ratingBasisNumeric 1.0)) (= PublicTransportationOver90000Factor (RateTable (ZoneRatedCollisionOver90000Factor "Y"))) ELSE (IF (> StatedAmount 90000.0) (= PublicTransportationOver90000Factor (RateTable (PublicTransportationCollisionOver90000Factor "Y"))) ELSE (= PublicTransportationOver90000Factor 0.0)))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (AND (> StatedAmount 90000.0) (EQUALS LV_INTEGER : ratingBasisNumeric 1.0)) (= PublicTransportationOver90000Factor (RateTable (ZoneRatedCollisionOver90000Factor "Y"))) ELSE (IF (> StatedAmount 90000.0) (= PublicTransportationOver90000Factor (RateTable (PublicTransportationCollisionOver90000Factor "Y"))) ELSE (= PublicTransportationOver90000Factor 0.0)))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (OR (OR (OR (OR (OR (EQUALS CoverageType "ACV") (EQUALS CoverageType "ACV - Fire Only")) (EQUALS CoverageType "ACV - Fire and Theft Only")) (EQUALS CoverageType "ACV - Fire, Theft and Windstorm Only")) (EQUALS CoverageType "ACV - Limited Specified Causes of Loss")) (EQUALS CoverageType "ACV - Specified Causes of Loss")) (IF (AND (> LV_INTEGER : OriginalCostNew 90000.0) (EQUALS LV_INTEGER : ratingBasisNumeric 1.0)) (= PublicTransportationOver90000Factor (RateTable (ZoneRatedCollisionOver90000Factor "Y"))) ELSE (IF (> LV_INTEGER : OriginalCostNew 90000.0) (= PublicTransportationOver90000Factor (RateTable (PublicTransportationCollisionOver90000Factor "Y"))) ELSE (= PublicTransportationOver90000Factor 0.0)))) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (AND (> StatedAmount 90000.0) (EQUALS LV_INTEGER : ratingBasisNumeric 1.0)) (= PublicTransportationOver90000Factor (RateTable (ZoneRatedCollisionOver90000Factor "Y"))) ELSE (IF (> StatedAmount 90000.0) (= PublicTransportationOver90000Factor (RateTable (PublicTransportationCollisionOver90000Factor "Y"))) ELSE (= PublicTransportationOver90000Factor 0.0))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (AND (> StatedAmount 90000.0) (EQUALS LV_INTEGER : ratingBasisNumeric 1.0)) (= PublicTransportationOver90000Factor (RateTable (ZoneRatedCollisionOver90000Factor "Y"))) ELSE (IF (> StatedAmount 90000.0) (= PublicTransportationOver90000Factor (RateTable (PublicTransportationCollisionOver90000Factor "Y"))) ELSE (= PublicTransportationOver90000Factor 0.0))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (AND (> StatedAmount 90000.0) (EQUALS LV_INTEGER : ratingBasisNumeric 1.0)) (= PublicTransportationOver90000Factor (RateTable (ZoneRatedCollisionOver90000Factor "Y"))) ELSE (IF (> StatedAmount 90000.0) (= PublicTransportationOver90000Factor (RateTable (PublicTransportationCollisionOver90000Factor "Y"))) ELSE (= PublicTransportationOver90000Factor 0.0))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (AND (> StatedAmount 90000.0) (EQUALS LV_INTEGER : ratingBasisNumeric 1.0)) (= PublicTransportationOver90000Factor (RateTable (ZoneRatedCollisionOver90000Factor "Y"))) ELSE (IF (> StatedAmount 90000.0) (= PublicTransportationOver90000Factor (RateTable (PublicTransportationCollisionOver90000Factor "Y"))) ELSE (= PublicTransportationOver90000Factor 0.0)))))))))))))))
2015-01-01 16:06:09,358 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:09,359 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,359 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,359 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,359 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,360 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,360 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,360 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,360 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,361 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,361 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,361 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,361 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0 [ 0.0 ] of type String
2015-01-01 16:06:09,361 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,362 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:09,362 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:09,362 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:09,362 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,363 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,363 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,363 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,363 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,363 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:09,364 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,364 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:09,364 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:09,364 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:09,365 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,365 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,365 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,365 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,365 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,366 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,366 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,366 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,366 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,367 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,367 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,367 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,367 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,367 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:09,368 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,368 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,368 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,368 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,368 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,369 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:09,369 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,369 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:09,369 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0.0 [ ../RatingBasisNumeric ] of type String
2015-01-01 16:06:09,370 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,370 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:09,370 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:09,370 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../OriginalCostNew"
2015-01-01 16:06:09,370 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,371 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,371 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../OriginalCostNew with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,371 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,371 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,372 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew returns true
2015-01-01 16:06:09,372 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,372 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../OriginalCostNew
2015-01-01 16:06:09,372 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../OriginalCostNew ) 
2015-01-01 16:06:09,372 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../OriginalCostNew"
2015-01-01 16:06:09,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../OriginalCostNew with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,374 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,374 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,374 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew returns true
2015-01-01 16:06:09,374 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../OriginalCostNew
2015-01-01 16:06:09,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> ../OriginalCostNew != ''
2015-01-01 16:06:09,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ( boolean( ../OriginalCostNew )  and ../OriginalCostNew != '')
2015-01-01 16:06:09,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ( boolean( ../OriginalCostNew )  and ../OriginalCostNew != '')
2015-01-01 16:06:09,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,376 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,376 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,376 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,376 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : OriginalCostNew
2015-01-01 16:06:09,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : OriginalCostNew
2015-01-01 16:06:09,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for OriginalCostNew
2015-01-01 16:06:09,377 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,378 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:09,378 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew returns true
2015-01-01 16:06:09,378 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:09,378 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value OriginalCostNew
2015-01-01 16:06:09,378 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../OriginalCostNew"
2015-01-01 16:06:09,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../OriginalCostNew @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../OriginalCostNew with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,379 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,380 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,380 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew returns true
2015-01-01 16:06:09,380 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/OriginalCostNew
2015-01-01 16:06:09,380 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../OriginalCostNew
2015-01-01 16:06:09,380 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at OriginalCostNew as 40000 [ ../OriginalCostNew ] of type String
2015-01-01 16:06:09,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,381 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,382 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,382 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,382 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,382 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,384 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,384 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,384 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,385 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,385 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,387 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,387 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,387 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,387 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,389 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,389 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,389 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,389 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,390 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,390 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,390 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,390 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,390 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,391 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,391 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,391 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,391 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,391 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,392 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,392 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,392 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,392 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,393 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,393 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,393 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,393 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,393 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,394 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:09,394 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,394 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,394 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,395 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,395 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,395 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,395 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,396 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,396 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,396 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,396 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,397 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,397 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,397 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:09,397 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,398 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,398 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,398 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,398 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,398 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,399 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,399 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,399 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,399 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,399 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,400 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,400 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,400 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,400 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,401 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,401 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,401 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,401 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,401 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,402 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,402 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,402 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,402 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,402 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,403 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,403 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,404 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:09,404 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,405 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,405 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,405 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,406 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,406 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,406 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,407 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,407 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,407 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,407 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV - Fire Only"
2015-01-01 16:06:09,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,409 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,409 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,409 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,409 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,410 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,410 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,410 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,410 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV - Fire Only'
2015-01-01 16:06:09,411 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV - Fire and Theft Only"
2015-01-01 16:06:09,411 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,411 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,411 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,411 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,412 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,412 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,412 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,412 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,413 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,413 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV - Fire and Theft Only'
2015-01-01 16:06:09,413 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV - Fire, Theft and Windstorm Only"
2015-01-01 16:06:09,413 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,413 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,414 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,414 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,414 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,414 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,415 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,415 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,415 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,415 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV - Fire, Theft and Windstorm Only'
2015-01-01 16:06:09,415 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV - Limited Specified Causes of Loss"
2015-01-01 16:06:09,416 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,416 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,416 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,416 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,416 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,417 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,417 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,417 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,417 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,418 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV - Limited Specified Causes of Loss'
2015-01-01 16:06:09,418 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV - Specified Causes of Loss"
2015-01-01 16:06:09,418 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,418 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,419 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,419 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,419 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,419 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,419 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,420 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,420 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,420 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV - Specified Causes of Loss'
2015-01-01 16:06:09,420 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (((((CoverageType = 'ACV' or CoverageType = 'ACV - Fire Only') or CoverageType = 'ACV - Fire and Theft Only') or CoverageType = 'ACV - Fire, Theft and Windstorm Only') or CoverageType = 'ACV - Limited Specified Causes of Loss') or CoverageType = 'ACV - Specified Causes of Loss')
2015-01-01 16:06:09,421 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,421 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,422 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,422 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : OriginalCostNew
2015-01-01 16:06:09,422 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : OriginalCostNew
2015-01-01 16:06:09,422 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for OriginalCostNew
2015-01-01 16:06:09,422 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,423 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:09,423 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew returns true
2015-01-01 16:06:09,423 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:09,423 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value OriginalCostNew
2015-01-01 16:06:09,424 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,424 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,424 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,424 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,425 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,425 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,425 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,425 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,426 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,426 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns ratingBasisNumeric = 1.0
2015-01-01 16:06:09,426 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((OriginalCostNew > 90000.0) and ratingBasisNumeric = 1.0)
2015-01-01 16:06:09,426 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((OriginalCostNew > 90000.0) and ratingBasisNumeric = 1.0)
2015-01-01 16:06:09,426 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : OriginalCostNew
2015-01-01 16:06:09,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : OriginalCostNew
2015-01-01 16:06:09,428 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for OriginalCostNew
2015-01-01 16:06:09,428 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,428 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:09,428 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew returns true
2015-01-01 16:06:09,429 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/OriginalCostNew
2015-01-01 16:06:09,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value OriginalCostNew
2015-01-01 16:06:09,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (OriginalCostNew > 90000.0)
2015-01-01 16:06:09,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : PublicTransportationOver90000Factor
2015-01-01 16:06:09,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable PublicTransportationOver90000Factor
2015-01-01 16:06:09,431 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PublicTransportationOver90000Factor
2015-01-01 16:06:09,431 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,431 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationOver90000Factor
2015-01-01 16:06:09,431 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationOver90000Factor returns true
2015-01-01 16:06:09,431 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationOver90000Factor
2015-01-01 16:06:09,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PublicTransportationOver90000Factor
2015-01-01 16:06:09,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at PublicTransportationOver90000Factor as 0 [ 0.0 ] of type String
2015-01-01 16:06:09,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the PublicTransportationOver90000Factor in the xml, for assignment we will create it! 
2015-01-01 16:06:09,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PublicTransportationOver90000Factor
2015-01-01 16:06:09,433 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,433 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CostNewRelativity
2015-01-01 16:06:09,433 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CostNewRelativity
2015-01-01 16:06:09,433 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CostNewRelativity
2015-01-01 16:06:09,433 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,434 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CostNewRelativity
2015-01-01 16:06:09,434 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CostNewRelativity returns true
2015-01-01 16:06:09,434 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CostNewRelativity
2015-01-01 16:06:09,434 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CostNewRelativity
2015-01-01 16:06:09,434 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,435 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : DeductibleRelativity
2015-01-01 16:06:09,435 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable DeductibleRelativity
2015-01-01 16:06:09,435 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for DeductibleRelativity
2015-01-01 16:06:09,435 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,435 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/DeductibleRelativity
2015-01-01 16:06:09,435 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/DeductibleRelativity returns true
2015-01-01 16:06:09,436 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/DeductibleRelativity
2015-01-01 16:06:09,436 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value DeductibleRelativity
2015-01-01 16:06:09,436 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,436 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : AgeGroupRelativity
2015-01-01 16:06:09,437 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable AgeGroupRelativity
2015-01-01 16:06:09,437 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroupRelativity
2015-01-01 16:06:09,437 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,437 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroupRelativity returns false
2015-01-01 16:06:09,437 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,438 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroupRelativity
2015-01-01 16:06:09,438 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,438 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,438 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,440 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,442 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:09,442 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='AgeGroupRelativity' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,444 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 71DAC2ED-9D8D-3F74-B55D-5067A4280588
2015-01-01 16:06:09,444 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name AgeGroupRelativity
2015-01-01 16:06:09,444 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='71DAC2ED-9D8D-3F74-B55D-5067A4280588' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:09,450 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:09,450 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:09,450 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:09,450 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:09,451 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
										IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
											IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
												IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
													IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
														IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																IF  ( VehicleType == "Special" ) THEN 
																	IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																		IF  ( XPATH:"../AgeGroup" != null ) THEN 
																			IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																				LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																			ELSE 
																				LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																			END IF 
																		ELSE 
																			LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																		END IF 
																	ELSE 
																		IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																			IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																				IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																					IF  ( XPATH:"../AgeGroup" != null ) THEN 
																						IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																							LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																						ELSE 
																							LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																						END IF 
																					ELSE 
																						LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										ELSE 
											IF  ( VehicleType == "Private Passenger" ) THEN 
												IF  ( CoverageType == "ACV" ) THEN 
													IF  ( XPATH:"../AgeGroup" != null ) THEN 
														IF  ( XPATH:"../AgeGroup" == "" ) THEN 
															LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
														ELSE 
															LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
														END IF 
													ELSE 
														LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
													END IF 
												ELSE 
													IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
														IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																	IF  ( VehicleType == "Special" ) THEN 
																		IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																			IF  ( XPATH:"../AgeGroup" != null ) THEN 
																				IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																					LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																				ELSE 
																					LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																				END IF 
																			ELSE 
																				LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																			END IF 
																		ELSE 
																			IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																				IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																					IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																						IF  ( XPATH:"../AgeGroup" != null ) THEN 
																							IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																								LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																							ELSE 
																								LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																							END IF 
																						ELSE 
																							LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											ELSE 
												IF  ( VehicleType == "Public Transportation" ) THEN 
													IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
														IF  ( CoverageType == "Stated Amount" ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																			IF  ( VehicleType == "Special" ) THEN 
																				IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																					IF  ( XPATH:"../AgeGroup" != null ) THEN 
																						IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																							LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																						ELSE 
																							LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																						END IF 
																					ELSE 
																						LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																					END IF 
																				ELSE 
																					IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																							IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																								IF  ( XPATH:"../AgeGroup" != null ) THEN 
																									IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																										LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																									ELSE 
																										LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																									END IF 
																								ELSE 
																									LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Special" ) THEN 
														IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																		IF  ( VehicleType == "Special" ) THEN 
																			IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																				IF  ( XPATH:"../AgeGroup" != null ) THEN 
																					IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																						LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																					ELSE 
																						LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																					END IF 
																				ELSE 
																					LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																				END IF 
																			ELSE 
																				IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																					IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																						IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																							IF  ( XPATH:"../AgeGroup" != null ) THEN 
																								IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																									LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																								ELSE 
																									LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																								END IF 
																							ELSE 
																								LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													ELSE 
														IF  ( VehicleType == "Truck" ) THEN 
															IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																IF  ( CoverageType == "Stated Amount" ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																					IF  ( VehicleType == "Special" ) THEN 
																						IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																							IF  ( XPATH:"../AgeGroup" != null ) THEN 
																								IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																									LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																								ELSE 
																									LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																								END IF 
																							ELSE 
																								LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																							END IF 
																						ELSE 
																							IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																									IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																										IF  ( XPATH:"../AgeGroup" != null ) THEN 
																											IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																												LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																											ELSE 
																												LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																											END IF 
																										ELSE 
																											LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														ELSE 
															IF  ( VehicleType == "Zone Rated" ) THEN 
																IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																					IF  ( VehicleType == "Special" ) THEN 
																						IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
																							IF  ( XPATH:"../AgeGroup" != null ) THEN 
																								IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																									LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																								ELSE 
																									LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																								END IF 
																							ELSE 
																								LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																							END IF 
																						ELSE 
																							IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																								IF  (  NOT (   ( CalculationType == "Truck-ACV" )  )  ) THEN 
																									IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																										IF  ( XPATH:"../AgeGroup" != null ) THEN 
																											IF  ( XPATH:"../AgeGroup" == "" ) THEN 
																												LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																											ELSE 
																												LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = RateTable:PrivatePassengerCollisionAgeGroupRelativity ( XPATH:"../AgeGroup" )  
																											END IF 
																										ELSE 
																											LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity = 0.0 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF
LV_INTEGER:AgeGroup = 0.0
LV_STRING:ageGroup = ""
IF  ( XPATH:"../AgeGroup" != null ) THEN 
																							LV_STRING:ageGroup = XPATH:"../AgeGroup" 
																						END IF
IF  ( LV_STRING:ageGroup != "" ) THEN 
																							LV_INTEGER:AgeGroup = LV_STRING:ageGroup 
																						END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
												IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
													IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
														IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																		IF  ( VehicleType == "Special" ) THEN 
																			IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																				IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																					IF  ( CalculationType == "Truck-ACV" ) THEN 
																						IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
																							LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = 0.0 
																						ELSE 
																							LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = RateTable:TruckCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Private Passenger" ) THEN 
														IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
															IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																			IF  ( VehicleType == "Special" ) THEN 
																				IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																					IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																						IF  ( CalculationType == "Truck-ACV" ) THEN 
																							IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
																								LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = 0.0 
																							ELSE 
																								LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = RateTable:TruckCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													ELSE 
														IF  ( VehicleType == "Public Transportation" ) THEN 
															IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																IF  ( CoverageType == "Stated Amount" ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																					IF  ( VehicleType == "Special" ) THEN 
																						IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																							IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																								IF  ( CalculationType == "Truck-ACV" ) THEN 
																									IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
																										LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = 0.0 
																									ELSE 
																										LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = RateTable:TruckCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														ELSE 
															IF  ( VehicleType == "Special" ) THEN 
																IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																	IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																				IF  ( VehicleType == "Special" ) THEN 
																					IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																						IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																							IF  ( CalculationType == "Truck-ACV" ) THEN 
																								IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
																									LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = 0.0 
																								ELSE 
																									LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = RateTable:TruckCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															ELSE 
																IF  ( VehicleType == "Truck" ) THEN 
																	IF  ( CoverageType == "ACV" ) THEN 
																		IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
																			LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = 0.0 
																		ELSE 
																			LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = RateTable:TruckCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
																		END IF 
																	ELSE 
																		IF  ( CoverageType == "Stated Amount" ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																							IF  ( VehicleType == "Special" ) THEN 
																								IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																										IF  ( CalculationType == "Truck-ACV" ) THEN 
																											IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
																												LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = 0.0 
																											ELSE 
																												LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = RateTable:TruckCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																ELSE 
																	IF  ( VehicleType == "Zone Rated" ) THEN 
																		IF  (  NOT (   ( CoverageType == "ACV" )  )  ) THEN 
																			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
																				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
																					IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
																						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
																							IF  ( VehicleType == "Special" ) THEN 
																								IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" )  )  ) THEN 
																									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
																										IF  ( CalculationType == "Truck-ACV" ) THEN 
																											IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
																												LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = 0.0 
																											ELSE 
																												LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity = RateTable:TruckCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
																											END IF 
																										END IF 
																									END IF 
																								END IF 
																							END IF 
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF
LV_INTEGER:ratingBasisNumeric = 0.0
IF  ( XPATH:"../RatingBasisNumeric" != null ) THEN 
						LV_INTEGER:ratingBasisNumeric = XPATH:"../RatingBasisNumeric" 
					END IF
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
									IF  ( VehicleType == "Public Transportation" ) THEN 
										IF  ( CoverageType == "ACV" ) THEN 
											IF  ( LV_INTEGER:RatingBasisNumeric == 1.0 ) THEN 
												IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
													LV_DOUBLE:LookupZoneRatedCollisionAgeGroupRelativity = 0.0 
												ELSE 
													LV_DOUBLE:LookupZoneRatedCollisionAgeGroupRelativity = RateTable:ZoneRatedCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
												END IF 
											END IF 
										END IF 
									ELSE 
										IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Truck" )  )  ) THEN 
												IF  ( VehicleType == "Zone Rated" ) THEN 
													IF  ( CoverageType == "ACV" ) THEN 
														IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
															LV_DOUBLE:LookupZoneRatedCollisionAgeGroupRelativity = 0.0 
														ELSE 
															LV_DOUBLE:LookupZoneRatedCollisionAgeGroupRelativity = RateTable:ZoneRatedCollisionAgeGroupRelativity ( LV_INTEGER:AgeGroup )  
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
								IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
									IF  ( VehicleType == "Public Transportation" ) THEN 
										IF  ( CoverageType == "ACV" ) THEN 
											IF  (  NOT (   ( LV_INTEGER:RatingBasisNumeric == 1.0 )  )  ) THEN 
												IF  ( LV_INTEGER:AgeGroup == 0.0 ) THEN 
													LV_DOUBLE:LookupPublicTransportationCollisionAgeGroupRelativity = 0.0 
												ELSE 
													LV_DOUBLE:LookupPublicTransportationCollisionAgeGroupRelativity = RateTable:PublicTransportationCollisionAgeGroupRelativity ( LV_STRING:ageGroup )  
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  ( VehicleType == "Garage" || VehicleType == "Garage Services" ) THEN 
		IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
			IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
				IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
					IF  ( VehicleType == "Private Passenger" ) THEN 
						AgeGroupRelativity = 1.0 
						IF  (  NOT (   ( CoverageType == "Stated Amount" )  )  ) THEN 
							AgeGroupRelativity = 0.0 
						END IF 
					ELSE 
						IF  ( VehicleType == "Public Transportation" ) THEN 
							AgeGroupRelativity = 1.0 
						ELSE 
							IF  ( VehicleType == "Special" ) THEN 
								IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
									IF  ( CalculationType == "Truck-SA" ) THEN 
										AgeGroupRelativity = 1.0 
									ELSE 
										IF  ( CalculationType == "Priv Pass-SA" ) THEN 
											AgeGroupRelativity = 1.0 
										ELSE 
											IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
												IF  (  NOT (   ( CalculationType == "Hired Auto" )  )  ) THEN 
													AgeGroupRelativity = 0.0 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
								IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
									AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
								ELSE 
									IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
										IF  ( CalculationType == "Truck-ACV" ) THEN 
											AgeGroupRelativity = LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity 
										ELSE 
											IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
												AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
											END IF 
										END IF 
									END IF 
								END IF 
							ELSE 
								IF  ( VehicleType == "Truck" ) THEN 
									AgeGroupRelativity = 1.0 
								ELSE 
									IF  ( VehicleType == "Zone Rated" ) THEN 
										AgeGroupRelativity = 1.0 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	ELSE 
		IF  ( VehicleType == "Private Passenger" ) THEN 
			IF  ( CoverageType == "ACV" ) THEN 
				AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
			ELSE 
				IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
						IF  ( VehicleType == "Private Passenger" ) THEN 
							AgeGroupRelativity = 1.0 
							IF  (  NOT (   ( CoverageType == "Stated Amount" )  )  ) THEN 
								AgeGroupRelativity = 0.0 
							END IF 
						ELSE 
							IF  ( VehicleType == "Public Transportation" ) THEN 
								AgeGroupRelativity = 1.0 
							ELSE 
								IF  ( VehicleType == "Special" ) THEN 
									IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
										IF  ( CalculationType == "Truck-SA" ) THEN 
											AgeGroupRelativity = 1.0 
										ELSE 
											IF  ( CalculationType == "Priv Pass-SA" ) THEN 
												AgeGroupRelativity = 1.0 
											ELSE 
												IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
													IF  (  NOT (   ( CalculationType == "Hired Auto" )  )  ) THEN 
														AgeGroupRelativity = 0.0 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
									IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
										AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
									ELSE 
										IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
											IF  ( CalculationType == "Truck-ACV" ) THEN 
												AgeGroupRelativity = LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity 
											ELSE 
												IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
													AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
												END IF 
											END IF 
										END IF 
									END IF 
								ELSE 
									IF  ( VehicleType == "Truck" ) THEN 
										AgeGroupRelativity = 1.0 
									ELSE 
										IF  ( VehicleType == "Zone Rated" ) THEN 
											AgeGroupRelativity = 1.0 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		ELSE 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				IF  ( CoverageType == "ACV" ) THEN 
					IF  ( LV_INTEGER:RatingBasisNumeric == 1.0 ) THEN 
						AgeGroupRelativity = LV_DOUBLE:LookupZoneRatedCollisionAgeGroupRelativity 
					ELSE 
						AgeGroupRelativity = LookupPublicTransportationCollisionAgeGroupRelativity 
					END IF 
				ELSE 
					IF  ( CoverageType == "Stated Amount" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
								IF  ( VehicleType == "Private Passenger" ) THEN 
									AgeGroupRelativity = 1.0 
									IF  (  NOT (   ( CoverageType == "Stated Amount" )  )  ) THEN 
										AgeGroupRelativity = 0.0 
									END IF 
								ELSE 
									IF  ( VehicleType == "Public Transportation" ) THEN 
										AgeGroupRelativity = 1.0 
									ELSE 
										IF  ( VehicleType == "Special" ) THEN 
											IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
												IF  ( CalculationType == "Truck-SA" ) THEN 
													AgeGroupRelativity = 1.0 
												ELSE 
													IF  ( CalculationType == "Priv Pass-SA" ) THEN 
														AgeGroupRelativity = 1.0 
													ELSE 
														IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
															IF  (  NOT (   ( CalculationType == "Hired Auto" )  )  ) THEN 
																AgeGroupRelativity = 0.0 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
											IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
												AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
											ELSE 
												IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
													IF  ( CalculationType == "Truck-ACV" ) THEN 
														AgeGroupRelativity = LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity 
													ELSE 
														IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
															AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
														END IF 
													END IF 
												END IF 
											END IF 
										ELSE 
											IF  ( VehicleType == "Truck" ) THEN 
												AgeGroupRelativity = 1.0 
											ELSE 
												IF  ( VehicleType == "Zone Rated" ) THEN 
													AgeGroupRelativity = 1.0 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					ELSE 
						AgeGroupRelativity = 0.0 
					END IF 
				END IF 
			ELSE 
				IF  ( VehicleType == "Special" ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
							IF  ( VehicleType == "Private Passenger" ) THEN 
								AgeGroupRelativity = 1.0 
								IF  (  NOT (   ( CoverageType == "Stated Amount" )  )  ) THEN 
									AgeGroupRelativity = 0.0 
								END IF 
							ELSE 
								IF  ( VehicleType == "Public Transportation" ) THEN 
									AgeGroupRelativity = 1.0 
								ELSE 
									IF  ( VehicleType == "Special" ) THEN 
										IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
											IF  ( CalculationType == "Truck-SA" ) THEN 
												AgeGroupRelativity = 1.0 
											ELSE 
												IF  ( CalculationType == "Priv Pass-SA" ) THEN 
													AgeGroupRelativity = 1.0 
												ELSE 
													IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
														IF  (  NOT (   ( CalculationType == "Hired Auto" )  )  ) THEN 
															AgeGroupRelativity = 0.0 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
										IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
											AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
										ELSE 
											IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
												IF  ( CalculationType == "Truck-ACV" ) THEN 
													AgeGroupRelativity = LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity 
												ELSE 
													IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
														AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
													END IF 
												END IF 
											END IF 
										END IF 
									ELSE 
										IF  ( VehicleType == "Truck" ) THEN 
											AgeGroupRelativity = 1.0 
										ELSE 
											IF  ( VehicleType == "Zone Rated" ) THEN 
												AgeGroupRelativity = 1.0 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( VehicleType == "Truck" ) THEN 
						IF  ( CoverageType == "ACV" ) THEN 
							AgeGroupRelativity = LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity 
						ELSE 
							IF  ( CoverageType == "Stated Amount" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  ( VehicleType == "Private Passenger" ) THEN 
											AgeGroupRelativity = 1.0 
											IF  (  NOT (   ( CoverageType == "Stated Amount" )  )  ) THEN 
												AgeGroupRelativity = 0.0 
											END IF 
										ELSE 
											IF  ( VehicleType == "Public Transportation" ) THEN 
												AgeGroupRelativity = 1.0 
											ELSE 
												IF  ( VehicleType == "Special" ) THEN 
													IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
														IF  ( CalculationType == "Truck-SA" ) THEN 
															AgeGroupRelativity = 1.0 
														ELSE 
															IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																AgeGroupRelativity = 1.0 
															ELSE 
																IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
																	IF  (  NOT (   ( CalculationType == "Hired Auto" )  )  ) THEN 
																		AgeGroupRelativity = 0.0 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
													IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
														AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
													ELSE 
														IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
															IF  ( CalculationType == "Truck-ACV" ) THEN 
																AgeGroupRelativity = LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity 
															ELSE 
																IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																	AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Truck" ) THEN 
														AgeGroupRelativity = 1.0 
													ELSE 
														IF  ( VehicleType == "Zone Rated" ) THEN 
															AgeGroupRelativity = 1.0 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							ELSE 
								AgeGroupRelativity = 0.0 
							END IF 
						END IF 
					ELSE 
						IF  ( VehicleType == "Zone Rated" ) THEN 
							IF  ( CoverageType == "ACV" ) THEN 
								AgeGroupRelativity = LV_DOUBLE:LookupZoneRatedCollisionAgeGroupRelativity 
							ELSE 
								IF  (  NOT (   ( VehicleType == "Garage" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage Services" )  )  ) THEN 
										IF  ( VehicleType == "Private Passenger" ) THEN 
											AgeGroupRelativity = 1.0 
											IF  (  NOT (   ( CoverageType == "Stated Amount" )  )  ) THEN 
												AgeGroupRelativity = 0.0 
											END IF 
										ELSE 
											IF  ( VehicleType == "Public Transportation" ) THEN 
												AgeGroupRelativity = 1.0 
											ELSE 
												IF  ( VehicleType == "Special" ) THEN 
													IF  (  NOT (   ( CalculationType == "Special-SA" )  )  ) THEN 
														IF  ( CalculationType == "Truck-SA" ) THEN 
															AgeGroupRelativity = 1.0 
														ELSE 
															IF  ( CalculationType == "Priv Pass-SA" ) THEN 
																AgeGroupRelativity = 1.0 
															ELSE 
																IF  (  NOT (   ( CalculationType == "Dealers" )  )  ) THEN 
																	IF  (  NOT (   ( CalculationType == "Hired Auto" )  )  ) THEN 
																		AgeGroupRelativity = 0.0 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
													IF  ( CalculationType == "Motorcycle-ACV" ) THEN 
														AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
													ELSE 
														IF  (  NOT (   ( CalculationType == "Golfmobile-ACV" )  )  ) THEN 
															IF  ( CalculationType == "Truck-ACV" ) THEN 
																AgeGroupRelativity = LV_DOUBLE:LookupTruckCollisionAgeGroupRelativity 
															ELSE 
																IF  ( CalculationType == "Priv Pass-ACV" ) THEN 
																	AgeGroupRelativity = LV_DOUBLE:LookupPrivatePassengerCollisionAgeGroupRelativity 
																END IF 
															END IF 
														END IF 
													END IF 
												ELSE 
													IF  ( VehicleType == "Truck" ) THEN 
														AgeGroupRelativity = 1.0 
													ELSE 
														IF  ( VehicleType == "Zone Rated" ) THEN 
															AgeGroupRelativity = 1.0 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:09,451 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:09,462 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:09,463 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0))))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0))))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0))))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (EQUALS CalculationType "Motorcycle-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0)) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (NOT (EQUALS CalculationType "Truck-ACV")) (IF (EQUALS CalculationType "Priv Pass-ACV") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (IF (EQUALS XPATH : "../AgeGroup" "") (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity (RateTable (PrivatePassengerCollisionAgeGroupRelativity XPATH : "../AgeGroup")))) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity 0.0))))))))))))))))))) (= LV_INTEGER : AgeGroup 0.0) (= LV_STRING : ageGroup "") (IF (NOTEQUALS XPATH : "../AgeGroup" null) (= LV_STRING : ageGroup XPATH : "../AgeGroup")) (IF (NOTEQUALS LV_STRING : ageGroup "") (= LV_INTEGER : AgeGroup LV_STRING : ageGroup)) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity (RateTable (TruckCollisionAgeGroupRelativity LV_INTEGER : AgeGroup))))))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity (RateTable (TruckCollisionAgeGroupRelativity LV_INTEGER : AgeGroup))))))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS CoverageType "ACV")) (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity (RateTable (TruckCollisionAgeGroupRelativity LV_INTEGER : AgeGroup)))))))))))))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity (RateTable (TruckCollisionAgeGroupRelativity LV_INTEGER : AgeGroup)))))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (EQUALS CoverageType "ACV") (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity (RateTable (TruckCollisionAgeGroupRelativity LV_INTEGER : AgeGroup)))) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity (RateTable (TruckCollisionAgeGroupRelativity LV_INTEGER : AgeGroup)))))))))))))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (NOT (EQUALS CoverageType "ACV")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Motorcycle-ACV")) (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity (RateTable (TruckCollisionAgeGroupRelativity LV_INTEGER : AgeGroup)))))))))))))))))))) (= LV_INTEGER : ratingBasisNumeric 0.0) (IF (NOTEQUALS XPATH : "../RatingBasisNumeric" null) (= LV_INTEGER : ratingBasisNumeric XPATH : "../RatingBasisNumeric")) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (EQUALS LV_INTEGER : RatingBasisNumeric 1.0) (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupZoneRatedCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionAgeGroupRelativity (RateTable (ZoneRatedCollisionAgeGroupRelativity LV_INTEGER : AgeGroup)))))) ELSE (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Truck")) (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "ACV") (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupZoneRatedCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionAgeGroupRelativity (RateTable (ZoneRatedCollisionAgeGroupRelativity LV_INTEGER : AgeGroup)))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (NOT (EQUALS LV_INTEGER : RatingBasisNumeric 1.0)) (IF (EQUALS LV_INTEGER : AgeGroup 0.0) (= LV_DOUBLE : LookupPublicTransportationCollisionAgeGroupRelativity 0.0) ELSE (= LV_DOUBLE : LookupPublicTransportationCollisionAgeGroupRelativity (RateTable (PublicTransportationCollisionAgeGroupRelativity LV_STRING : ageGroup)))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services")) (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (= AgeGroupRelativity 1.0) (IF (NOT (EQUALS CoverageType "Stated Amount")) (= AgeGroupRelativity 0.0)) ELSE (IF (EQUALS VehicleType "Public Transportation") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= AgeGroupRelativity 1.0) ELSE (IF (NOT (EQUALS CalculationType "Dealers")) (IF (NOT (EQUALS CalculationType "Hired Auto")) (= AgeGroupRelativity 0.0)))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity))))) ELSE (IF (EQUALS VehicleType "Truck") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Zone Rated") (= AgeGroupRelativity 1.0))))))))) ELSE (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS CoverageType "ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (= AgeGroupRelativity 1.0) (IF (NOT (EQUALS CoverageType "Stated Amount")) (= AgeGroupRelativity 0.0)) ELSE (IF (EQUALS VehicleType "Public Transportation") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= AgeGroupRelativity 1.0) ELSE (IF (NOT (EQUALS CalculationType "Dealers")) (IF (NOT (EQUALS CalculationType "Hired Auto")) (= AgeGroupRelativity 0.0)))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity))))) ELSE (IF (EQUALS VehicleType "Truck") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Zone Rated") (= AgeGroupRelativity 1.0))))))))) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (EQUALS LV_INTEGER : RatingBasisNumeric 1.0) (= AgeGroupRelativity LV_DOUBLE : LookupZoneRatedCollisionAgeGroupRelativity) ELSE (= AgeGroupRelativity LookupPublicTransportationCollisionAgeGroupRelativity)) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (= AgeGroupRelativity 1.0) (IF (NOT (EQUALS CoverageType "Stated Amount")) (= AgeGroupRelativity 0.0)) ELSE (IF (EQUALS VehicleType "Public Transportation") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= AgeGroupRelativity 1.0) ELSE (IF (NOT (EQUALS CalculationType "Dealers")) (IF (NOT (EQUALS CalculationType "Hired Auto")) (= AgeGroupRelativity 0.0)))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity))))) ELSE (IF (EQUALS VehicleType "Truck") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Zone Rated") (= AgeGroupRelativity 1.0)))))))) ELSE (= AgeGroupRelativity 0.0))) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (= AgeGroupRelativity 1.0) (IF (NOT (EQUALS CoverageType "Stated Amount")) (= AgeGroupRelativity 0.0)) ELSE (IF (EQUALS VehicleType "Public Transportation") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= AgeGroupRelativity 1.0) ELSE (IF (NOT (EQUALS CalculationType "Dealers")) (IF (NOT (EQUALS CalculationType "Hired Auto")) (= AgeGroupRelativity 0.0)))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity))))) ELSE (IF (EQUALS VehicleType "Truck") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Zone Rated") (= AgeGroupRelativity 1.0)))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (EQUALS CoverageType "ACV") (= AgeGroupRelativity LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity) ELSE (IF (EQUALS CoverageType "Stated Amount") (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (= AgeGroupRelativity 1.0) (IF (NOT (EQUALS CoverageType "Stated Amount")) (= AgeGroupRelativity 0.0)) ELSE (IF (EQUALS VehicleType "Public Transportation") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= AgeGroupRelativity 1.0) ELSE (IF (NOT (EQUALS CalculationType "Dealers")) (IF (NOT (EQUALS CalculationType "Hired Auto")) (= AgeGroupRelativity 0.0)))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity))))) ELSE (IF (EQUALS VehicleType "Truck") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Zone Rated") (= AgeGroupRelativity 1.0)))))))) ELSE (= AgeGroupRelativity 0.0))) ELSE (IF (EQUALS VehicleType "Zone Rated") (IF (EQUALS CoverageType "ACV") (= AgeGroupRelativity LV_DOUBLE : LookupZoneRatedCollisionAgeGroupRelativity) ELSE (IF (NOT (EQUALS VehicleType "Garage")) (IF (NOT (EQUALS VehicleType "Garage Services")) (IF (EQUALS VehicleType "Private Passenger") (= AgeGroupRelativity 1.0) (IF (NOT (EQUALS CoverageType "Stated Amount")) (= AgeGroupRelativity 0.0)) ELSE (IF (EQUALS VehicleType "Public Transportation") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS CalculationType "Special-SA")) (IF (EQUALS CalculationType "Truck-SA") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS CalculationType "Priv Pass-SA") (= AgeGroupRelativity 1.0) ELSE (IF (NOT (EQUALS CalculationType "Dealers")) (IF (NOT (EQUALS CalculationType "Hired Auto")) (= AgeGroupRelativity 0.0)))))) (IF (EQUALS CalculationType "Motorcycle-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity) ELSE (IF (NOT (EQUALS CalculationType "Golfmobile-ACV")) (IF (EQUALS CalculationType "Truck-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupTruckCollisionAgeGroupRelativity) ELSE (IF (EQUALS CalculationType "Priv Pass-ACV") (= AgeGroupRelativity LV_DOUBLE : LookupPrivatePassengerCollisionAgeGroupRelativity))))) ELSE (IF (EQUALS VehicleType "Truck") (= AgeGroupRelativity 1.0) ELSE (IF (EQUALS VehicleType "Zone Rated") (= AgeGroupRelativity 1.0))))))))))))))))
2015-01-01 16:06:09,463 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:09,467 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,467 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,467 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,467 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,467 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,468 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,468 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,468 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,468 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,468 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,469 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,469 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,469 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,469 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,469 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,470 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,470 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,470 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,470 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,470 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,471 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,471 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,471 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,471 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,471 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,472 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,472 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,472 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,472 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,472 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,473 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,473 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,473 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,473 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,473 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,474 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,474 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,474 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,475 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,475 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,475 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,475 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,475 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,476 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,476 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,476 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,476 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,476 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,477 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,477 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,477 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,477 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,477 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,478 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,478 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,478 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,478 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,478 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,479 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,479 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,479 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:09,479 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,480 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,480 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,480 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,480 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,480 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,481 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,481 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,481 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,481 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,481 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,482 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,482 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,482 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:09,482 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,483 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,483 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,483 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,483 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,483 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,483 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,484 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,484 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,484 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,484 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,485 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,485 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,485 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,485 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,485 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,486 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,486 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,486 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,486 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,486 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,487 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,487 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,487 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,487 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,487 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,488 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,488 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:09,488 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,488 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,489 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,489 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,489 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,489 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : AgeGroup
2015-01-01 16:06:09,489 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : AgeGroup
2015-01-01 16:06:09,490 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,490 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,490 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup returns false
2015-01-01 16:06:09,490 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,490 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup
2015-01-01 16:06:09,491 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,491 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,491 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,493 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,495 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:09,495 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='AgeGroup' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,496 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,519 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,519 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,521 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,523 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:09,523 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='AgeGroup' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,526 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,532 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,533 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,534 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:09,534 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:09,534 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program AgeGroup
2015-01-01 16:06:09,535 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,535 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at AgeGroup as 0 [ 0.0 ] of type String
2015-01-01 16:06:09,535 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,535 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,536 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,536 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ageGroup
2015-01-01 16:06:09,536 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ageGroup
2015-01-01 16:06:09,536 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ageGroup
2015-01-01 16:06:09,536 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,537 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup returns false
2015-01-01 16:06:09,537 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,537 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,538 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,538 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,538 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,542 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,544 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:09,544 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='ageGroup' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,545 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,568 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,568 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,570 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,572 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:09,572 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='ageGroup' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,574 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 5DDC67C8-F7F8-35C1-8446-2F76CE8CB054
2015-01-01 16:06:09,574 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name ageGroup
2015-01-01 16:06:09,575 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='5DDC67C8-F7F8-35C1-8446-2F76CE8CB054' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:09,577 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:09,578 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:09,578 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:09,578 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:09,578 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LV_INTEGER:ratingBasisNumeric = 0.0
IF  ( XPATH:"../RatingBasisNumeric" != null ) THEN 
						LV_INTEGER:ratingBasisNumeric = XPATH:"../RatingBasisNumeric" 
					END IF
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
		IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				IF  ( CoverageType == "ACV" ) THEN 
					IF  (  NOT (   ( LV_INTEGER:RatingBasisNumeric == 1.0 )  )  ) THEN 
						ageGroup = LV_INTEGER:AgeGroup 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:09,579 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:09,579 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:09,579 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= LV_INTEGER : ratingBasisNumeric 0.0) (IF (NOTEQUALS XPATH : "../RatingBasisNumeric" null) (= LV_INTEGER : ratingBasisNumeric XPATH : "../RatingBasisNumeric")) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS CoverageType "ACV") (IF (NOT (EQUALS LV_INTEGER : RatingBasisNumeric 1.0)) (= ageGroup LV_INTEGER : AgeGroup)))))))
2015-01-01 16:06:09,579 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:09,580 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,580 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,580 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,580 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,581 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,581 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,581 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,581 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,582 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,582 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,582 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,582 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0 [ 0.0 ] of type String
2015-01-01 16:06:09,583 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,583 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:09,583 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:09,583 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:09,583 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,584 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,584 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,584 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,584 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,584 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:09,585 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,585 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:09,585 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:09,585 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:09,586 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,586 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,586 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,586 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,586 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,587 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,587 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,587 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,587 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,588 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,588 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,588 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,588 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,588 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:09,589 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,589 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,589 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,589 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,590 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,590 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:09,590 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,590 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:09,591 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0.0 [ ../RatingBasisNumeric ] of type String
2015-01-01 16:06:09,591 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,591 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,591 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,591 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,592 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,592 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,592 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,592 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,592 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,593 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,593 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,593 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,593 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,593 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,594 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,594 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,594 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,594 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,595 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,595 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,595 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:09,595 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,595 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,596 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,596 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,596 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,596 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,597 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,597 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,597 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,597 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,597 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,598 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,598 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,598 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,598 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,598 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,599 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,599 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,599 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,599 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,599 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:09,600 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,600 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,600 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,600 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,601 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,601 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,601 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,601 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,601 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,602 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,602 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,602 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,602 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,602 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,603 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,603 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,603 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,603 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,603 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,604 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,604 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,604 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,604 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,605 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,605 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,605 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,605 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,605 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,606 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,606 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,606 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,606 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,606 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,607 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,607 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,607 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,607 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,608 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,608 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,608 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,608 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,609 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,609 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,609 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,609 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,609 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,610 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,610 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,610 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,610 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,610 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,611 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,611 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,611 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,611 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,612 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,612 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,612 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,612 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,612 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,613 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:09,613 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,613 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,614 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,614 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,614 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,614 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,614 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,615 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,615 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,615 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,615 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,616 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,616 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,616 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:09,616 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,617 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,617 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,617 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,617 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,617 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,618 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,618 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,618 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,618 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,619 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,619 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,619 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,619 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,619 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,620 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,620 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,620 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,620 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,621 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,621 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,621 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,621 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,621 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,622 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,622 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,622 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,622 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:09,623 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,623 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,623 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,623 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,623 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,624 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,624 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,624 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,624 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,625 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,625 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,625 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:09,625 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( RatingBasisNumeric = 1.0 )
2015-01-01 16:06:09,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,626 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : ageGroup
2015-01-01 16:06:09,627 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable ageGroup
2015-01-01 16:06:09,627 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ageGroup
2015-01-01 16:06:09,627 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,627 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,628 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup returns true
2015-01-01 16:06:09,628 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ageGroup
2015-01-01 16:06:09,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,628 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : AgeGroup
2015-01-01 16:06:09,629 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : AgeGroup
2015-01-01 16:06:09,629 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,629 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,629 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup
2015-01-01 16:06:09,630 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup returns true
2015-01-01 16:06:09,630 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup
2015-01-01 16:06:09,630 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,630 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ageGroup as 0 [ AgeGroup ] of type String
2015-01-01 16:06:09,631 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ageGroup
2015-01-01 16:06:09,631 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,631 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at ageGroup as [StringEvaluator] ''
2015-01-01 16:06:09,631 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,631 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:09,632 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:09,632 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../AgeGroup"
2015-01-01 16:06:09,632 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../AgeGroup @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,632 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../AgeGroup @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,632 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../AgeGroup with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,633 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,633 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup returns false
2015-01-01 16:06:09,633 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,633 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,634 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,634 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,634 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,636 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,637 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:09,638 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='AgeGroup' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,639 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,661 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,661 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,663 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,665 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:09,665 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='AgeGroup' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,667 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 67DDC70D-1D28-33F4-8E79-67D44A99A7B9
2015-01-01 16:06:09,667 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name AgeGroup
2015-01-01 16:06:09,667 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='67DDC70D-1D28-33F4-8E79-67D44A99A7B9' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:09,671 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:09,672 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:09,672 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:09,672 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:09,672 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( XPATH:"../../EffDate.Month" >= 10.0 && XPATH:"../../EffDate.Month" <= 12.0 ) THEN 
	AgeGroup =   ( LV_INTEGER:year - Year + 1.0  )  
ELSE 
	AgeGroup =   ( LV_INTEGER:year - Year  )  
END IF
AgeGroup = AgeGroup + 1.0
IF  ( AgeGroup > 12.0 ) THEN 
	AgeGroup = 12.0 
END IF
IF  ( AgeGroup < 1.0 ) THEN 
	AgeGroup = 1.0 
END IF

2015-01-01 16:06:09,672 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:09,673 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:09,673 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (AND (>= XPATH : "../../EffDate.Month" 10.0) (<= XPATH : "../../EffDate.Month" 12.0)) (= AgeGroup (+ (SUBTRACT LV_INTEGER : year Year) 1.0)) ELSE (= AgeGroup (SUBTRACT LV_INTEGER : year Year))) (= AgeGroup (+ AgeGroup 1.0)) (IF (> AgeGroup 12.0) (= AgeGroup 12.0)) (IF (< AgeGroup 1.0) (= AgeGroup 1.0))
2015-01-01 16:06:09,673 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:09,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../../EffDate.Month"
2015-01-01 16:06:09,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../../EffDate.Month @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,676 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../../EffDate.Month @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,676 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../../EffDate.Month with reference value as /SRERequest/EffDate.Month
2015-01-01 16:06:09,676 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/EffDate.Month returns false
2015-01-01 16:06:09,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/EffDate.Month
2015-01-01 16:06:09,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest
2015-01-01 16:06:09,678 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getProduct(ProcessBlockExecutor.java:469) - We got the Ratebook as 93BBD210-679F-4516-BA9F-3629CFE79583 at /SRERequest
2015-01-01 16:06:09,678 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='93BBD210-679F-4516-BA9F-3629CFE79583' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,691 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,691 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='SRERequest'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,693 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Name='SRERequest'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,695 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 93BBD210-679F-4516-BA9F-3629CFE79583-SRERequest
2015-01-01 16:06:09,695 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='EffDate.Month' ] where $x/Id='93BBD210-679F-4516-BA9F-3629CFE79583-SRERequest'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,696 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,718 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,718 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='SRERequest'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,720 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:09,720 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ SRERequest ] definition in database 
2015-01-01 16:06:09,720 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program EffDate.Month
2015-01-01 16:06:09,720 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../../EffDate.Month
2015-01-01 16:06:09,721 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../../EffDate.Month"
2015-01-01 16:06:09,721 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../../EffDate.Month @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,721 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../../EffDate.Month @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,721 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../../EffDate.Month with reference value as /SRERequest/EffDate.Month
2015-01-01 16:06:09,722 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,722 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/EffDate.Month
2015-01-01 16:06:09,722 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/EffDate.Month returns true
2015-01-01 16:06:09,722 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/EffDate.Month
2015-01-01 16:06:09,722 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../../EffDate.Month
2015-01-01 16:06:09,723 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((../../EffDate.Month >= 10.0) and (../../EffDate.Month <= 12.0))
2015-01-01 16:06:09,723 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((../../EffDate.Month >= 10.0) and (../../EffDate.Month <= 12.0))
2015-01-01 16:06:09,724 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,725 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,725 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,725 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,725 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : AgeGroup
2015-01-01 16:06:09,725 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable AgeGroup
2015-01-01 16:06:09,726 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,726 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,726 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,726 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup returns true
2015-01-01 16:06:09,727 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,727 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,727 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,727 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : year
2015-01-01 16:06:09,727 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : year
2015-01-01 16:06:09,728 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for year
2015-01-01 16:06:09,728 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,728 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/year returns false
2015-01-01 16:06:09,728 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,729 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/year
2015-01-01 16:06:09,729 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,729 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,729 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,731 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,734 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:09,734 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='year' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,735 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,758 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,758 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,760 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,762 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:09,762 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='year' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,765 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 312C3985-7194-3DCE-BEA0-AE3A7FF36A50
2015-01-01 16:06:09,765 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name year
2015-01-01 16:06:09,765 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='312C3985-7194-3DCE-BEA0-AE3A7FF36A50' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:09,767 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:09,767 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:09,768 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:09,768 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:09,768 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LV_INTEGER:year = XPATH:"../../EffDate.Year"

2015-01-01 16:06:09,768 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:09,769 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:09,769 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= LV_INTEGER : year XPATH : "../../EffDate.Year")
2015-01-01 16:06:09,769 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:09,769 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,769 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : year
2015-01-01 16:06:09,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : year
2015-01-01 16:06:09,770 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for year
2015-01-01 16:06:09,771 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,771 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/year
2015-01-01 16:06:09,771 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/year returns true
2015-01-01 16:06:09,771 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/year
2015-01-01 16:06:09,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value year
2015-01-01 16:06:09,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../../EffDate.Year"
2015-01-01 16:06:09,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../../EffDate.Year @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,772 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:104) - We have a Date Function variable
2015-01-01 16:06:09,775 [main] INFO  com.mmpnc.rating.xpath.custom.functions.XpathYearFunction.getYear(XpathYearFunction.java:94) - Date is java.util.GregorianCalendar[time=1359608400000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="America/New_York",offset=-18000000,dstSavings=3600000,useDaylight=true,transitions=235,lastRule=java.util.SimpleTimeZone[id=America/New_York,offset=-18000000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=5,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=31,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-18000000,DST_OFFSET=0] ----- Year : 2013
2015-01-01 16:06:09,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at year as 2013 [ rating:get-year(../../EffDate) ] of type String
2015-01-01 16:06:09,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value year
2015-01-01 16:06:09,775 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,776 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Year
2015-01-01 16:06:09,776 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Year
2015-01-01 16:06:09,776 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Year
2015-01-01 16:06:09,776 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,777 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Year returns false
2015-01-01 16:06:09,777 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,777 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Year
2015-01-01 16:06:09,778 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,778 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,778 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,780 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,782 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:09,782 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Year' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,783 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,806 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,806 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,808 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,809 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:09,809 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Year' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,811 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:09,815 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,815 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,819 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:09,819 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:09,819 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program Year
2015-01-01 16:06:09,819 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Year
2015-01-01 16:06:09,820 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at AgeGroup as 9 [ 9 ] of type String
2015-01-01 16:06:09,820 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the AgeGroup in the xml, for assignment we will create it! 
2015-01-01 16:06:09,820 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,820 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,821 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : AgeGroup
2015-01-01 16:06:09,821 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable AgeGroup
2015-01-01 16:06:09,821 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,821 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,821 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,822 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup returns true
2015-01-01 16:06:09,822 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,822 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,822 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,822 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : AgeGroup
2015-01-01 16:06:09,823 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable AgeGroup
2015-01-01 16:06:09,823 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,823 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,823 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,824 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup returns true
2015-01-01 16:06:09,824 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,824 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,824 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at AgeGroup as 10 [ 10 ] of type String
2015-01-01 16:06:09,825 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,825 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : AgeGroup
2015-01-01 16:06:09,825 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable AgeGroup
2015-01-01 16:06:09,825 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,825 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,826 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,826 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup returns true
2015-01-01 16:06:09,826 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,826 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,826 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (AgeGroup > 12.0)
2015-01-01 16:06:09,827 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,827 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,827 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:09,828 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : AgeGroup
2015-01-01 16:06:09,828 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable AgeGroup
2015-01-01 16:06:09,828 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,828 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,828 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,829 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup returns true
2015-01-01 16:06:09,829 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,829 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,829 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (AgeGroup < 1.0)
2015-01-01 16:06:09,830 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,831 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,831 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../AgeGroup
2015-01-01 16:06:09,831 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../AgeGroup ) 
2015-01-01 16:06:09,831 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../AgeGroup ) 
2015-01-01 16:06:09,832 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,832 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,832 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,832 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,833 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,833 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ageGroup
2015-01-01 16:06:09,833 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ageGroup
2015-01-01 16:06:09,833 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ageGroup
2015-01-01 16:06:09,833 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,834 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,834 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup returns true
2015-01-01 16:06:09,834 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,834 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ageGroup
2015-01-01 16:06:09,834 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../AgeGroup"
2015-01-01 16:06:09,835 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../AgeGroup @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,835 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../AgeGroup @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,835 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../AgeGroup with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,835 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,836 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,836 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup returns true
2015-01-01 16:06:09,836 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/AgeGroup
2015-01-01 16:06:09,836 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../AgeGroup
2015-01-01 16:06:09,836 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ageGroup as 10 [ ../AgeGroup ] of type String
2015-01-01 16:06:09,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ageGroup
2015-01-01 16:06:09,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ageGroup
2015-01-01 16:06:09,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ageGroup
2015-01-01 16:06:09,838 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,838 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,838 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup returns true
2015-01-01 16:06:09,838 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ageGroup
2015-01-01 16:06:09,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> ageGroup != ''
2015-01-01 16:06:09,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ageGroup != ''
2015-01-01 16:06:09,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : AgeGroup
2015-01-01 16:06:09,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : AgeGroup
2015-01-01 16:06:09,841 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup
2015-01-01 16:06:09,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup returns true
2015-01-01 16:06:09,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup
2015-01-01 16:06:09,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ageGroup
2015-01-01 16:06:09,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ageGroup
2015-01-01 16:06:09,842 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ageGroup
2015-01-01 16:06:09,843 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,843 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,843 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup returns true
2015-01-01 16:06:09,843 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:09,843 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ageGroup
2015-01-01 16:06:09,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at AgeGroup as 10 [ ageGroup ] of type String
2015-01-01 16:06:09,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,844 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,845 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,845 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,845 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,845 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,845 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,846 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,846 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,847 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,847 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,847 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,847 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,847 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,848 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,848 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,848 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,848 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,848 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,849 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,849 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,849 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,849 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,849 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,850 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,850 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,850 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,850 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,850 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,851 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,851 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,851 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,851 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,852 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,852 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,852 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,852 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,852 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,853 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,853 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,853 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,853 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,853 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,854 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,855 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,855 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,855 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,855 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,855 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,856 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,856 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:09,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,857 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,858 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,858 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,858 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,858 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,858 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,859 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,859 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,859 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,859 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:09,859 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,860 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,861 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,861 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,861 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,861 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,862 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,862 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,863 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,863 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,863 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,863 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,864 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,864 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,864 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,864 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,864 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,865 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,865 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,865 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,865 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( CoverageType = 'ACV' )
2015-01-01 16:06:09,866 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,866 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,866 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,866 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,866 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,867 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,867 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,867 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,867 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,867 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,868 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,868 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,868 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,868 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0 [ 0.0 ] of type String
2015-01-01 16:06:09,868 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,869 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:09,869 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:09,869 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:09,869 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,869 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,870 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,870 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,870 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,870 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:09,871 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,871 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:09,871 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:09,871 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:09,871 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,872 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,872 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,872 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,872 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,872 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,873 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,873 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,873 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,873 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,873 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,874 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,874 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,874 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:09,874 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,874 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,875 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,875 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,875 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,875 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:09,875 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:09,876 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:09,876 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0.0 [ ../RatingBasisNumeric ] of type String
2015-01-01 16:06:09,876 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,876 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,877 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,877 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,877 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,877 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,878 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,878 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,878 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,878 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,878 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,879 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,879 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,879 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,879 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,879 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,880 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,880 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,880 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,880 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,880 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:09,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,882 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,882 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,882 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,882 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,882 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,883 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,883 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,883 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,883 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:09,883 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:09,884 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,884 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,884 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:09,884 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:09,884 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:09,885 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:09,885 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,885 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,885 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,885 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,886 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,886 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,886 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,886 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,886 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,887 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,887 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,887 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,887 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,887 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,888 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,888 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,888 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,888 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,888 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,889 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,889 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,889 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,889 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,889 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,890 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,890 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,890 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,890 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,890 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,891 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,891 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,891 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,891 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,891 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,892 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,892 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,892 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,893 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,894 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,894 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,894 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,894 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,894 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,895 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,895 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,895 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,895 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,895 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,896 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,896 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,896 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,896 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,896 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,897 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,897 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,897 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,897 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:09,897 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,898 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,898 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,898 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,898 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,899 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,899 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,899 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,899 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,899 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,900 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,900 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,900 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,900 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:09,901 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,901 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,901 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,901 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,901 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,902 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,902 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,902 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,902 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,902 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,903 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,903 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,903 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,903 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,904 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,904 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,904 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,904 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,904 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,905 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,905 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,905 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,905 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,905 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,906 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,906 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,906 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,906 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:09,907 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,907 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,907 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,907 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,907 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,908 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,908 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,908 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,908 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,908 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,909 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,909 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:09,909 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is RatingBasisNumeric = 1.0
2015-01-01 16:06:09,909 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,910 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,910 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:09,910 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,910 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,911 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,911 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,911 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,911 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,911 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,912 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,912 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,912 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:09,912 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:09,912 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,913 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,913 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,913 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,913 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,913 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,914 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,914 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,914 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,914 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:09,914 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:09,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:09,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,915 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,915 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,916 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,916 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,916 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,916 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,916 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:09,917 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,917 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:09,917 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:09,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,918 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,919 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,919 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,919 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,919 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,919 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:09,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:09,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,920 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,921 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,921 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,921 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,921 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,921 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,922 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:09,922 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:09,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:09,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,923 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,924 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,924 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,924 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,924 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,925 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,925 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:09,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:09,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:09,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:09,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:09,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:09,927 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,927 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,927 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:09,928 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:09,928 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:09,928 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:09,928 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:09,929 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,929 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,929 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:09,929 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,929 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:09,930 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:09,930 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:09,930 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,930 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,930 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:09,931 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:09,931 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:09,931 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:09,931 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:09,932 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,932 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,932 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,932 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,932 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:09,933 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:09,933 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,933 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,933 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:09,934 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:09,934 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:09,934 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:09,934 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( RatingBasisNumeric = 1.0 )
2015-01-01 16:06:09,934 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:09,935 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:09,935 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,935 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : AgeGroup
2015-01-01 16:06:09,935 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : AgeGroup
2015-01-01 16:06:09,936 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroup
2015-01-01 16:06:09,936 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,936 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup
2015-01-01 16:06:09,936 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup returns true
2015-01-01 16:06:09,936 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroup
2015-01-01 16:06:09,937 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroup
2015-01-01 16:06:09,937 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns AgeGroup = 0.0
2015-01-01 16:06:09,937 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is AgeGroup = 0.0
2015-01-01 16:06:09,937 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:09,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:09,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:09,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,938 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_DOUBLE : LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:09,939 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_DOUBLE : LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:09,939 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:09,939 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:09,939 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionAgeGroupRelativity returns false
2015-01-01 16:06:09,940 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:09,940 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:09,940 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:09,940 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:09,941 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:09,946 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:09,948 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:09,948 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationCollisionAgeGroupRelativity' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:09,971 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,005 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,005 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,007 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,009 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,009 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationCollisionAgeGroupRelativity' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,011 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,015 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,015 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,016 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,017 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:10,017 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,017 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,017 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,017 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:10,018 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,018 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : ageGroup
2015-01-01 16:06:10,018 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : ageGroup
2015-01-01 16:06:10,018 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ageGroup
2015-01-01 16:06:10,019 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,019 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:10,019 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup returns true
2015-01-01 16:06:10,019 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ageGroup
2015-01-01 16:06:10,019 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ageGroup
2015-01-01 16:06:10,020 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of ageGroup
2015-01-01 16:06:10,020 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter ageGroup is of type String value is 10
2015-01-01 16:06:10,020 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for ageGroup is 10 @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,020 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored 10 @ index 0
2015-01-01 16:06:10,021 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationCollisionAgeGroupRelativity ] Execution *************
2015-01-01 16:06:10,021 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146370021
2015-01-01 16:06:10,021 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:10,021 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationCollisionAgeGroupRelativity'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:10,024 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> 935DC957-E5FD-3A28-BCB2-38D3B7BF114C
2015-01-01 16:06:10,025 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='935DC957-E5FD-3A28-BCB2-38D3B7BF114C'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583'  and $x/Status='A' return $x )
2015-01-01 16:06:10,026 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:10,026 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='935DC957-E5FD-3A28-BCB2-38D3B7BF114C'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583'  and $x/Status='A'  and number($x/NColumn1)<=10  order by number($x/NColumn1) descending return $x
2015-01-01 16:06:10,030 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as 0.55
2015-01-01 16:06:10,030 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146370030
2015-01-01 16:06:10,031 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,031 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,031 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,031 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,032 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,032 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,032 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,032 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,033 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,033 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,033 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:10,033 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:10,033 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,033 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,034 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,034 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,034 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,034 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,034 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,035 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,035 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,035 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:10,035 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:10,035 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,036 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,036 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,036 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,036 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,036 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,037 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,037 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,037 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,037 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,037 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:10,038 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,038 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,038 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,039 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,039 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:10,039 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,039 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,039 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,040 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,040 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,040 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,040 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,040 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:10,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:10,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,041 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,042 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,042 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,042 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,042 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,042 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,043 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:10,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (VehicleType = 'Garage' or VehicleType = 'Garage Services')
2015-01-01 16:06:10,043 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,044 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,044 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:10,044 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,044 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,045 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,045 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,045 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,045 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,045 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,046 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,046 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,046 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:10,046 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:10,046 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,047 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,047 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:10,047 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,047 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,047 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,048 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,048 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,048 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,048 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,048 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:10,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:10,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "ACV"
2015-01-01 16:06:10,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,051 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns CoverageType = 'ACV'
2015-01-01 16:06:10,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is CoverageType = 'ACV'
2015-01-01 16:06:10,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,052 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,053 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,053 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:10,053 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:10,053 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:10,054 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,054 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:10,054 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:10,054 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:10,054 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:10,055 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:10,055 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is RatingBasisNumeric = 1.0
2015-01-01 16:06:10,055 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,055 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,055 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,056 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,056 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : AgeGroupRelativity
2015-01-01 16:06:10,056 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable AgeGroupRelativity
2015-01-01 16:06:10,056 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for AgeGroupRelativity
2015-01-01 16:06:10,056 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,057 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroupRelativity
2015-01-01 16:06:10,057 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroupRelativity returns true
2015-01-01 16:06:10,057 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/AgeGroupRelativity
2015-01-01 16:06:10,057 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroupRelativity
2015-01-01 16:06:10,057 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,058 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,058 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,058 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,058 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,058 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,059 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionAgeGroupRelativity returns true
2015-01-01 16:06:10,060 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,060 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationCollisionAgeGroupRelativity
2015-01-01 16:06:10,061 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at AgeGroupRelativity as 0.55 [ LookupPublicTransportationCollisionAgeGroupRelativity ] of type String
2015-01-01 16:06:10,061 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the AgeGroupRelativity in the xml, for assignment we will create it! 
2015-01-01 16:06:10,061 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value AgeGroupRelativity
2015-01-01 16:06:10,061 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,062 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : PreliminaryBaseRate
2015-01-01 16:06:10,062 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable PreliminaryBaseRate
2015-01-01 16:06:10,062 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PreliminaryBaseRate
2015-01-01 16:06:10,062 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,062 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PreliminaryBaseRate returns false
2015-01-01 16:06:10,062 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,063 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PreliminaryBaseRate
2015-01-01 16:06:10,063 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,063 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,063 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,065 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,067 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,067 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PreliminaryBaseRate' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,068 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,090 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,091 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,092 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,094 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,094 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PreliminaryBaseRate' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,096 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program D7F0037F-FE3E-3EEE-BCCC-77411444299D
2015-01-01 16:06:10,096 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name PreliminaryBaseRate
2015-01-01 16:06:10,097 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='D7F0037F-FE3E-3EEE-BCCC-77411444299D' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:10,099 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:10,099 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:10,099 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:10,099 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:10,099 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LV_DOUBLE:LCMPhysicalDamage = XPATH:"../../LCMPhysicalDamage" 
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
		IF  ( VehicleType == "Private Passenger" ) THEN 
			PreliminaryBaseRate =  RoundThousandth (   ( PreliminaryBaseRateFromTable * LV_DOUBLE:LCMPhysicalDamage )  )  
		ELSE 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				PreliminaryBaseRate =  RoundThousandth (   ( PreliminaryBaseRateFromTable * LV_DOUBLE:LCMPhysicalDamage )  )  
			ELSE 
				IF  ( VehicleType == "Special" ) THEN 
					PreliminaryBaseRate =  RoundThousandth (   ( PreliminaryBaseRateFromTable * LV_DOUBLE:LCMPhysicalDamage )  )  
				ELSE 
					IF  ( VehicleType == "Truck" ) THEN 
						PreliminaryBaseRate =  RoundThousandth (   ( PreliminaryBaseRateFromTable * LV_DOUBLE:LCMPhysicalDamage )  )  
					ELSE 
						IF  ( VehicleType == "Zone Rated" ) THEN 
							PreliminaryBaseRate =  RoundThousandth (   ( PreliminaryBaseRateFromTable * LV_DOUBLE:LCMPhysicalDamage )  )  
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:10,100 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:10,100 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:10,101 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= LV_DOUBLE : LCMPhysicalDamage XPATH : "../../LCMPhysicalDamage") (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (EQUALS VehicleType "Private Passenger") (= PreliminaryBaseRate (RoundThousandth (* PreliminaryBaseRateFromTable LV_DOUBLE : LCMPhysicalDamage))) ELSE (IF (EQUALS VehicleType "Public Transportation") (= PreliminaryBaseRate (RoundThousandth (* PreliminaryBaseRateFromTable LV_DOUBLE : LCMPhysicalDamage))) ELSE (IF (EQUALS VehicleType "Special") (= PreliminaryBaseRate (RoundThousandth (* PreliminaryBaseRateFromTable LV_DOUBLE : LCMPhysicalDamage))) ELSE (IF (EQUALS VehicleType "Truck") (= PreliminaryBaseRate (RoundThousandth (* PreliminaryBaseRateFromTable LV_DOUBLE : LCMPhysicalDamage))) ELSE (IF (EQUALS VehicleType "Zone Rated") (= PreliminaryBaseRate (RoundThousandth (* PreliminaryBaseRateFromTable LV_DOUBLE : LCMPhysicalDamage))))))))))
2015-01-01 16:06:10,101 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:10,101 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,101 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,101 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,102 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_DOUBLE : LCMPhysicalDamage
2015-01-01 16:06:10,102 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_DOUBLE : LCMPhysicalDamage
2015-01-01 16:06:10,102 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LCMPhysicalDamage
2015-01-01 16:06:10,102 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,102 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LCMPhysicalDamage returns false
2015-01-01 16:06:10,103 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,103 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LCMPhysicalDamage
2015-01-01 16:06:10,103 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,103 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,104 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,105 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,107 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,107 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LCMPhysicalDamage' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,108 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,133 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,133 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,135 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,137 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,137 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LCMPhysicalDamage' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,140 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,144 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,145 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,146 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,146 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:10,147 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program LCMPhysicalDamage
2015-01-01 16:06:10,147 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LCMPhysicalDamage
2015-01-01 16:06:10,147 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../../LCMPhysicalDamage"
2015-01-01 16:06:10,147 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../../LCMPhysicalDamage @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,147 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../../LCMPhysicalDamage @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,148 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../../LCMPhysicalDamage with reference value as /SRERequest/CommercialAuto/LCMPhysicalDamage
2015-01-01 16:06:10,148 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,148 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/LCMPhysicalDamage returns false
2015-01-01 16:06:10,148 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,149 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/LCMPhysicalDamage
2015-01-01 16:06:10,149 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto
2015-01-01 16:06:10,149 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getProduct(ProcessBlockExecutor.java:469) - We got the Ratebook as 93BBD210-679F-4516-BA9F-3629CFE79583 at /SRERequest/CommercialAuto
2015-01-01 16:06:10,149 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='93BBD210-679F-4516-BA9F-3629CFE79583' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,164 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,164 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAuto'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,166 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='87FAA9FB-C3FE-36C3-9FD5-974CEECEC2C7'  and $x/Name='CommercialAuto'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,168 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 160A6C8B-6A7C-3818-996C-B4107AB46F84
2015-01-01 16:06:10,168 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LCMPhysicalDamage' ] where $x/Id='160A6C8B-6A7C-3818-996C-B4107AB46F84'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,169 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,192 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,193 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAuto'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,194 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6AD8CFD2-D4C8-325F-8364-575B931B6AC1'  and $x/Name='CommercialAuto'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,196 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F0BFC5A3-E277-3519-AAB3-AEBE7FF3D4FD
2015-01-01 16:06:10,197 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LCMPhysicalDamage' ] where $x/Id='F0BFC5A3-E277-3519-AAB3-AEBE7FF3D4FD'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,199 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program C1615CFA-2F4B-386F-9F51-E9819EEE3230
2015-01-01 16:06:10,199 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name LCMPhysicalDamage
2015-01-01 16:06:10,199 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='C1615CFA-2F4B-386F-9F51-E9819EEE3230' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:10,201 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:10,201 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:10,202 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:10,202 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:10,202 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - LCMPhysicalDamage = RateTable:LCMPhysicalDamage ( "Y" )

2015-01-01 16:06:10,202 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:10,202 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:10,203 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= LCMPhysicalDamage (RateTable (LCMPhysicalDamage "Y")))
2015-01-01 16:06:10,203 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:10,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto
2015-01-01 16:06:10,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto
2015-01-01 16:06:10,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : LCMPhysicalDamage
2015-01-01 16:06:10,204 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable LCMPhysicalDamage
2015-01-01 16:06:10,204 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LCMPhysicalDamage
2015-01-01 16:06:10,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/LCMPhysicalDamage
2015-01-01 16:06:10,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/LCMPhysicalDamage returns true
2015-01-01 16:06:10,205 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/LCMPhysicalDamage
2015-01-01 16:06:10,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LCMPhysicalDamage
2015-01-01 16:06:10,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for LCMPhysicalDamage
2015-01-01 16:06:10,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:10,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Y"
2015-01-01 16:06:10,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of 'Y'
2015-01-01 16:06:10,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter 'Y' is of type String value is Y
2015-01-01 16:06:10,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for 'Y' is Y @ /SRERequest/CommercialAuto
2015-01-01 16:06:10,207 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored Y @ index 0
2015-01-01 16:06:10,207 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ LCMPhysicalDamage ] Execution *************
2015-01-01 16:06:10,207 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146370207
2015-01-01 16:06:10,207 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:10,208 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='LCMPhysicalDamage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:10,209 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,233 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='LCMPhysicalDamage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:10,236 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> E3F4BBAB-F99E-4BA0-B300-452ABFD01594
2015-01-01 16:06:10,236 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='E3F4BBAB-F99E-4BA0-B300-452ABFD01594'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A' return $x )
2015-01-01 16:06:10,238 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:10,238 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='E3F4BBAB-F99E-4BA0-B300-452ABFD01594'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A'  and $x/Column1='Y' return $x
2015-01-01 16:06:10,240 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as 1.0
2015-01-01 16:06:10,240 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146370240
2015-01-01 16:06:10,240 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the LCMPhysicalDamage in the xml, for assignment we will create it! 
2015-01-01 16:06:10,240 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../../LCMPhysicalDamage
2015-01-01 16:06:10,241 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at LCMPhysicalDamage as 1.0 [ ../../LCMPhysicalDamage ] of type String
2015-01-01 16:06:10,241 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,241 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,241 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,242 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,242 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,242 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,242 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,242 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,243 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:10,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:10,243 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,244 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,244 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,244 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,244 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,244 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,245 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,245 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,245 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,245 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:10,245 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:10,246 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,246 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,246 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,246 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,246 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,247 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,247 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,247 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,247 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,248 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,248 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:10,248 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,248 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,249 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,250 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,250 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:10,250 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,250 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,251 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,251 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,251 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,251 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,252 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,252 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,252 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,252 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:10,253 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:10,253 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,254 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,254 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,254 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,254 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,254 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,255 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,255 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,255 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,255 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:10,255 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:10,256 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,256 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,256 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:10,257 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,257 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,257 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,257 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,257 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,258 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,258 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,258 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,258 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,258 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:10,259 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:10,259 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,259 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,260 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:10,260 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,260 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,260 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,261 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,261 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,261 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,261 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,261 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,262 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,262 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:10,262 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:10,262 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,263 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,263 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,263 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,264 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : PreliminaryBaseRate
2015-01-01 16:06:10,264 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable PreliminaryBaseRate
2015-01-01 16:06:10,264 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PreliminaryBaseRate
2015-01-01 16:06:10,264 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,264 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PreliminaryBaseRate
2015-01-01 16:06:10,265 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PreliminaryBaseRate returns true
2015-01-01 16:06:10,265 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PreliminaryBaseRate
2015-01-01 16:06:10,265 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PreliminaryBaseRate
2015-01-01 16:06:10,265 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,265 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : PreliminaryBaseRateFromTable
2015-01-01 16:06:10,266 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable PreliminaryBaseRateFromTable
2015-01-01 16:06:10,266 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PreliminaryBaseRateFromTable
2015-01-01 16:06:10,266 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,267 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PreliminaryBaseRateFromTable returns false
2015-01-01 16:06:10,267 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,267 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PreliminaryBaseRateFromTable
2015-01-01 16:06:10,267 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,268 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,268 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,270 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,272 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PreliminaryBaseRateFromTable' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,274 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,309 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,310 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,312 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,315 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,315 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PreliminaryBaseRateFromTable' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 8E6A3EB8-49CF-3880-84BF-73110A37012A
2015-01-01 16:06:10,319 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name PreliminaryBaseRateFromTable
2015-01-01 16:06:10,320 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='8E6A3EB8-49CF-3880-84BF-73110A37012A' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:10,332 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:10,332 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:10,332 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:10,333 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:10,333 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
				IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
					IF  ( VehicleType == "Private Passenger" ) THEN 
						IF  ( XPATH:"ancestor::*[name(.)='CommercialAuto']/RiskAnalyzerWanted" != null && XPATH:"ancestor::*[name(.)='CommercialAuto' and not(@offset='Deleted')]/RiskAnalyzerWanted" != "" ) THEN 
							LV_STRING:RACAWanted = XPATH:"ancestor::*[name(.)='CommercialAuto' and not(@offset='Deleted')]/RiskAnalyzerWanted" 
						END IF 
					ELSE 
						IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
								IF  ( VehicleType == "Truck" ) THEN 
									IF  ( XPATH:"ancestor::*[name(.)='CommercialAuto']/RiskAnalyzerWanted" != null && XPATH:"ancestor::*[name(.)='CommercialAuto' and not(@offset='Deleted')]/RiskAnalyzerWanted" != "" ) THEN 
										LV_STRING:RACAWanted = XPATH:"ancestor::*[name(.)='CommercialAuto' and not(@offset='Deleted')]/RiskAnalyzerWanted" 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF 
			END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
									IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
										IF  ( VehicleType == "Private Passenger" ) THEN 
											IF  ( XPATH:"../ZipCode" != null ) THEN 
												LV_STRING:ZipCode = XPATH:"../ZipCode" 
											END IF 
										ELSE 
											IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
												IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
													IF  ( VehicleType == "Truck" ) THEN 
														IF  ( XPATH:"../ZipCode" != null ) THEN 
															LV_STRING:ZipCode = XPATH:"../ZipCode" 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
						IF  ( VehicleType == "Private Passenger" ) THEN 
							IF  ( LV_STRING:RACAWanted == "Yes" ) THEN 
								IF  ( LV_STRING:ZipCode == "" ) THEN 
									LV_DOUBLE:LookupPrivatePassengerCollisionBaseRateRACA = 0.0 
								ELSE 
									LV_DOUBLE:LookupPrivatePassengerCollisionBaseRateRACA = RateTable:PrivatePassengerCollisionBaseRateRACA ( LV_STRING:ZipCode )  
								END IF 
							END IF 
						END IF 
					END IF 
				END IF
IF  ( XPATH:"../Territory" != null ) THEN 
									LV_STRING:Territory = XPATH:"../Territory" 
								END IF
LV_STRING:Class = ""
LV_STRING:className = ""
IF  ( XPATH:"../Class" != null ) THEN 
										LV_STRING:className = XPATH:"../Class" 
									END IF
IF  ( LV_STRING:className != "" ) THEN 
										LV_STRING:Class = LV_STRING:className 
									END IF
LV_STRING:SupplementaryType = ""
IF  ( XPATH:"../SupplementaryType" != null ) THEN 
											LV_STRING:SupplementaryType = XPATH:"../SupplementaryType" 
										END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
					IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
						IF  ( VehicleType == "Private Passenger" ) THEN 
							IF  (  NOT (   ( LV_STRING:RACAWanted == "Yes" )  )  ) THEN 
								IF  ( LV_STRING:Territory == "" ) THEN 
									LV_DOUBLE:LookupPrivatePassengerCollisionBaseRate = 0.0 
								ELSE 
									LV_DOUBLE:LookupPrivatePassengerCollisionBaseRate = RateTable:PrivatePassengerCollisionBaseRate ( LV_STRING:Territory )  
								END IF 
							END IF 
						ELSE 
							IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
								IF  ( VehicleType == "Special" ) THEN 
									IF  (  NOT (   ( LV_STRING:Class == "Antique Autos" )  )  ) THEN 
										IF  (  NOT (   ( LV_STRING:SupplementaryType == "Snowmobile With Passenger Hazard" || LV_STRING:SupplementaryType == "Snowmobile Without Passenger Hazard" )  )  ) THEN 
											IF  ( CalculationType == "Motorcycle-ACV" || CalculationType == "Priv Pass-ACV" || CalculationType == "Priv Pass-SA" ) THEN 
												IF  ( LV_STRING:Territory == "" ) THEN 
													LV_DOUBLE:LookupPrivatePassengerCollisionBaseRate = 0.0 
												ELSE 
													LV_DOUBLE:LookupPrivatePassengerCollisionBaseRate = RateTable:PrivatePassengerCollisionBaseRate ( LV_STRING:Territory )  
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				END IF
LV_INTEGER:ratingBasisNumeric = 0.0
IF  ( XPATH:"../RatingBasisNumeric" != null ) THEN 
					LV_INTEGER:ratingBasisNumeric = XPATH:"../RatingBasisNumeric" 
				END IF
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
LV_INTEGER:RatingBasisNumeric = LV_INTEGER:ratingBasisNumeric
LV_STRING:GaragingZone = ""
LV_STRING:garagingZone = ""
IF  ( XPATH:"../GaragingZone" != null ) THEN 
											LV_STRING:garagingZone = XPATH:"../GaragingZone" 
										END IF
IF  ( LV_STRING:garagingZone != "" ) THEN 
											LV_STRING:GaragingZone = LV_STRING:garagingZone 
										END IF
LV_STRING:FarthestTerminalZone = ""
LV_STRING:farthestTerminalZone = ""
IF  ( XPATH:"../FarthestTerminalZone" != null ) THEN 
											LV_STRING:farthestTerminalZone = XPATH:"../FarthestTerminalZone" 
										END IF
IF  ( LV_STRING:farthestTerminalZone != "" ) THEN 
											LV_STRING:FarthestTerminalZone = LV_STRING:farthestTerminalZone 
										END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
								IF  ( VehicleType == "Public Transportation" ) THEN 
									IF  ( LV_INTEGER:RatingBasisNumeric == 1.0 ) THEN 
										IF  ( LV_STRING:GaragingZone == "" || LV_STRING:FarthestTerminalZone == "" || LV_STRING:GaragingZone == "Not Applicable" || LV_STRING:FarthestTerminalZone == "Not Applicable" ) THEN 
											LV_DOUBLE:LookupZoneRatedCollisionBasePremium = 0.0 
										ELSE 
											LV_DOUBLE:LookupZoneRatedCollisionBasePremium = RateTable:ZoneRatedCollisionBasePremium ( LV_STRING:GaragingZone , LV_STRING:FarthestTerminalZone )  
										END IF 
									END IF 
								ELSE 
									IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Truck" )  )  ) THEN 
											IF  ( VehicleType == "Zone Rated" ) THEN 
												IF  ( LV_STRING:GaragingZone == "" || LV_STRING:FarthestTerminalZone == "" || LV_STRING:GaragingZone == "Not Applicable" || LV_STRING:FarthestTerminalZone == "Not Applicable" ) THEN 
													LV_DOUBLE:LookupZoneRatedCollisionBasePremium = 0.0 
												ELSE 
													LV_DOUBLE:LookupZoneRatedCollisionBasePremium = RateTable:ZoneRatedCollisionBasePremium ( LV_STRING:GaragingZone , LV_STRING:FarthestTerminalZone )  
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF
LV_STRING:PublicTransportationGroup = ""
IF  ( XPATH:"../PublicTransportationGroup" != null ) THEN 
											LV_STRING:PublicTransportationGroup = XPATH:"../PublicTransportationGroup" 
										END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
						IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
							IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
								IF  ( VehicleType == "Public Transportation" ) THEN 
									IF  (  NOT (   ( LV_INTEGER:RatingBasisNumeric == 1.0 )  )  ) THEN 
										IF  ( LV_STRING:Territory == "" || LV_STRING:PublicTransportationGroup == "" ) THEN 
											LV_DOUBLE:LookupPublicTransportationCollisionBaseRate = 0.0 
										ELSE 
											LV_DOUBLE:LookupPublicTransportationCollisionBaseRate = RateTable:PublicTransportationCollisionBaseRate ( LV_STRING:PublicTransportationGroup , LV_STRING:Territory )  
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF
LV_STRING:VehicleIndicator = ""
IF  ( XPATH:"../VehicleIndicator" != null ) THEN 
									LV_STRING:VehicleIndicator = XPATH:"../VehicleIndicator" 
								END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
										IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
												IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
													IF  ( VehicleType == "Special" ) THEN 
														IF  (  NOT (   ( LV_STRING:Class == "Antique Autos" )  )  ) THEN 
															IF  (  NOT (   ( LV_STRING:SupplementaryType == "Snowmobile With Passenger Hazard" || LV_STRING:SupplementaryType == "Snowmobile Without Passenger Hazard" )  )  ) THEN 
																IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" || CalculationType == "Priv Pass-ACV" || CalculationType == "Priv Pass-SA" )  )  ) THEN 
																	IF  ( LV_STRING:VehicleIndicator == "Golfmobiles" ) THEN 
																		IF  ( Deductible != "" && Deductible != "Not Applicable" && LV_INTEGER:OriginalCostNew > 0.0 ) THEN 
																			LV_DOUBLE:LookupSpecialTypesGolfmobileCollisionRate = RateTable:SpecialTypesGolfmobileCollisionRate ( Deductible , LV_INTEGER:OriginalCostNew )  
																		ELSE 
																			LV_DOUBLE:LookupSpecialTypesGolfmobileCollisionRate = 0.0 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
											IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
												IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
													IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
														IF  ( VehicleType == "Special" ) THEN 
															IF  (  NOT (   ( LV_STRING:Class == "Antique Autos" )  )  ) THEN 
																IF  (  NOT (   ( LV_STRING:SupplementaryType == "Snowmobile With Passenger Hazard" || LV_STRING:SupplementaryType == "Snowmobile Without Passenger Hazard" )  )  ) THEN 
																	IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" || CalculationType == "Priv Pass-ACV" || CalculationType == "Priv Pass-SA" )  )  ) THEN 
																		IF  (  NOT (   ( LV_STRING:VehicleIndicator == "Golfmobiles" )  )  ) THEN 
																			IF  ( CalculationType == "Truck-ACV" || CalculationType == "Truck-SA" ) THEN 
																				IF  ( LV_STRING:Territory == "" ) THEN 
																					LV_DOUBLE:LookupTruckCollisionBaseRate = 0.0 
																				ELSE 
																					LV_DOUBLE:LookupTruckCollisionBaseRate = RateTable:TruckCollisionBaseRate ( LV_STRING:Territory )  
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														ELSE 
															IF  ( VehicleType == "Truck" ) THEN 
																IF  (  NOT (   ( LV_STRING:RACAWanted == "Yes" )  )  ) THEN 
																	IF  ( LV_STRING:Territory == "" ) THEN 
																		LV_DOUBLE:LookupTruckCollisionBaseRate = 0.0 
																	ELSE 
																		LV_DOUBLE:LookupTruckCollisionBaseRate = RateTable:TruckCollisionBaseRate ( LV_STRING:Territory )  
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF 
										END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
												IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
													IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
														IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
															IF  ( VehicleType == "Special" ) THEN 
																IF  (  NOT (   ( LV_STRING:Class == "Antique Autos" )  )  ) THEN 
																	IF  (  NOT (   ( LV_STRING:SupplementaryType == "Snowmobile With Passenger Hazard" || LV_STRING:SupplementaryType == "Snowmobile Without Passenger Hazard" )  )  ) THEN 
																		IF  (  NOT (   ( CalculationType == "Motorcycle-ACV" || CalculationType == "Priv Pass-ACV" || CalculationType == "Priv Pass-SA" )  )  ) THEN 
																			IF  (  NOT (   ( LV_STRING:VehicleIndicator == "Golfmobiles" )  )  ) THEN 
																				IF  (  NOT (   ( CalculationType == "Truck-ACV" || CalculationType == "Truck-SA" )  )  ) THEN 
																					IF  ( CalculationType == "Hired Auto" ) THEN 
																						IF  ( Deductible == "" || Deductible == "Not Applicable" ) THEN 
																							LV_DOUBLE:LookupCollisionCostOfHireRate = 0.0 
																						ELSE 
																							LV_DOUBLE:LookupCollisionCostOfHireRate = RateTable:CollisionCostOfHireRate ( Deductible )  
																						END IF 
																					END IF 
																				END IF 
																			END IF 
																		END IF 
																	END IF 
																END IF 
															END IF 
														END IF 
													END IF 
												END IF 
											END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
								IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
									IF  (  NOT (   ( VehicleType == "Private Passenger" )  )  ) THEN 
										IF  (  NOT (   ( VehicleType == "Public Transportation" )  )  ) THEN 
											IF  (  NOT (   ( VehicleType == "Special" )  )  ) THEN 
												IF  ( VehicleType == "Truck" ) THEN 
													IF  ( LV_STRING:RACAWanted == "Yes" ) THEN 
														IF  ( LV_STRING:ZipCode == "" ) THEN 
															LV_DOUBLE:LookupTruckCollisionBaseRateRACA = 0.0 
														ELSE 
															LV_DOUBLE:LookupTruckCollisionBaseRateRACA = RateTable:TruckCollisionBaseRateRACA ( LV_STRING:ZipCode )  
														END IF 
													END IF 
												END IF 
											END IF 
										END IF 
									END IF 
								END IF 
							END IF
IF  ( CoverageType != "" && CoverageType != "No Coverage" && CoverageType != "Not Applicable" ) THEN 
	IF  (  NOT (   ( VehicleType == "Garage" || VehicleType == "Garage Services" )  )  ) THEN 
		IF  ( VehicleType == "Private Passenger" ) THEN 
			IF  ( LV_STRING:RACAWanted == "Yes" ) THEN 
				PreliminaryBaseRateFromTable = LV_DOUBLE:LookupPrivatePassengerCollisionBaseRateRACA 
			ELSE 
				PreliminaryBaseRateFromTable = LV_DOUBLE:LookupPrivatePassengerCollisionBaseRate 
			END IF 
		ELSE 
			IF  ( VehicleType == "Public Transportation" ) THEN 
				IF  ( LV_INTEGER:RatingBasisNumeric == 1.0 ) THEN 
					PreliminaryBaseRateFromTable = LV_DOUBLE:LookupZoneRatedCollisionBasePremium 
				ELSE 
					PreliminaryBaseRateFromTable = LV_DOUBLE:LookupPublicTransportationCollisionBaseRate 
				END IF 
			ELSE 
				IF  ( VehicleType == "Special" ) THEN 
					IF  ( LV_STRING:Class == "Antique Autos" ) THEN 
						PreliminaryBaseRateFromTable = RateTable:SpecialTypesAntiqueAutoCollisionRate ( "Y" )  
					ELSE 
						IF  ( LV_STRING:SupplementaryType == "Snowmobile With Passenger Hazard" || LV_STRING:SupplementaryType == "Snowmobile Without Passenger Hazard" ) THEN 
							PreliminaryBaseRateFromTable = RateTable:SpecialTypesSnowmobileCollisionRate ( "Y" )  
						ELSE 
							IF  ( CalculationType == "Motorcycle-ACV" || CalculationType == "Priv Pass-ACV" || CalculationType == "Priv Pass-SA" ) THEN 
								PreliminaryBaseRateFromTable = LV_DOUBLE:LookupPrivatePassengerCollisionBaseRate 
							ELSE 
								IF  ( LV_STRING:VehicleIndicator == "Golfmobiles" ) THEN 
									PreliminaryBaseRateFromTable = LV_DOUBLE:LookupSpecialTypesGolfmobileCollisionRate 
								ELSE 
									IF  ( CalculationType == "Truck-ACV" || CalculationType == "Truck-SA" ) THEN 
										PreliminaryBaseRateFromTable = LV_DOUBLE:LookupTruckCollisionBaseRate 
									ELSE 
										IF  ( CalculationType == "Hired Auto" ) THEN 
											PreliminaryBaseRateFromTable = LV_DOUBLE:LookupCollisionCostOfHireRate 
										END IF 
									END IF 
								END IF 
							END IF 
						END IF 
					END IF 
				ELSE 
					IF  ( VehicleType == "Truck" ) THEN 
						IF  ( LV_STRING:RACAWanted == "Yes" ) THEN 
							PreliminaryBaseRateFromTable = LV_DOUBLE:LookupTruckCollisionBaseRateRACA 
						ELSE 
							PreliminaryBaseRateFromTable = LV_DOUBLE:LookupTruckCollisionBaseRate 
						END IF 
					ELSE 
						IF  ( VehicleType == "Zone Rated" ) THEN 
							PreliminaryBaseRateFromTable = LV_DOUBLE:LookupZoneRatedCollisionBasePremium 
						END IF 
					END IF 
				END IF 
			END IF 
		END IF 
	END IF 
END IF

2015-01-01 16:06:10,334 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:10,342 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:10,343 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (EQUALS VehicleType "Private Passenger") (IF (AND (NOTEQUALS XPATH : "ancestor::*[name(.)='CommercialAuto']/RiskAnalyzerWanted" null) (NOTEQUALS XPATH : "ancestor::*[name(.)='CommercialAuto' and not(@offset='Deleted')]/RiskAnalyzerWanted" "")) (= LV_STRING : RACAWanted XPATH : "ancestor::*[name(.)='CommercialAuto' and not(@offset='Deleted')]/RiskAnalyzerWanted")) ELSE (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (NOT (EQUALS VehicleType "Special")) (IF (EQUALS VehicleType "Truck") (IF (AND (NOTEQUALS XPATH : "ancestor::*[name(.)='CommercialAuto']/RiskAnalyzerWanted" null) (NOTEQUALS XPATH : "ancestor::*[name(.)='CommercialAuto' and not(@offset='Deleted')]/RiskAnalyzerWanted" "")) (= LV_STRING : RACAWanted XPATH : "ancestor::*[name(.)='CommercialAuto' and not(@offset='Deleted')]/RiskAnalyzerWanted")))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (EQUALS VehicleType "Private Passenger") (IF (NOTEQUALS XPATH : "../ZipCode" null) (= LV_STRING : ZipCode XPATH : "../ZipCode")) ELSE (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (NOT (EQUALS VehicleType "Special")) (IF (EQUALS VehicleType "Truck") (IF (NOTEQUALS XPATH : "../ZipCode" null) (= LV_STRING : ZipCode XPATH : "../ZipCode")))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS LV_STRING : RACAWanted "Yes") (IF (EQUALS LV_STRING : ZipCode "") (= LV_DOUBLE : LookupPrivatePassengerCollisionBaseRateRACA 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionBaseRateRACA (RateTable (PrivatePassengerCollisionBaseRateRACA LV_STRING : ZipCode)))))))) (IF (NOTEQUALS XPATH : "../Territory" null) (= LV_STRING : Territory XPATH : "../Territory")) (= LV_STRING : Class "") (= LV_STRING : className "") (IF (NOTEQUALS XPATH : "../Class" null) (= LV_STRING : className XPATH : "../Class")) (IF (NOTEQUALS LV_STRING : className "") (= LV_STRING : Class LV_STRING : className)) (= LV_STRING : SupplementaryType "") (IF (NOTEQUALS XPATH : "../SupplementaryType" null) (= LV_STRING : SupplementaryType XPATH : "../SupplementaryType")) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (EQUALS VehicleType "Private Passenger") (IF (NOT (EQUALS LV_STRING : RACAWanted "Yes")) (IF (EQUALS LV_STRING : Territory "") (= LV_DOUBLE : LookupPrivatePassengerCollisionBaseRate 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionBaseRate (RateTable (PrivatePassengerCollisionBaseRate LV_STRING : Territory))))) ELSE (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS LV_STRING : Class "Antique Autos")) (IF (NOT (OR (EQUALS LV_STRING : SupplementaryType "Snowmobile With Passenger Hazard") (EQUALS LV_STRING : SupplementaryType "Snowmobile Without Passenger Hazard"))) (IF (OR (OR (EQUALS CalculationType "Motorcycle-ACV") (EQUALS CalculationType "Priv Pass-ACV")) (EQUALS CalculationType "Priv Pass-SA")) (IF (EQUALS LV_STRING : Territory "") (= LV_DOUBLE : LookupPrivatePassengerCollisionBaseRate 0.0) ELSE (= LV_DOUBLE : LookupPrivatePassengerCollisionBaseRate (RateTable (PrivatePassengerCollisionBaseRate LV_STRING : Territory)))))))))))) (= LV_INTEGER : ratingBasisNumeric 0.0) (IF (NOTEQUALS XPATH : "../RatingBasisNumeric" null) (= LV_INTEGER : ratingBasisNumeric XPATH : "../RatingBasisNumeric")) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (= LV_INTEGER : RatingBasisNumeric LV_INTEGER : ratingBasisNumeric) (= LV_STRING : GaragingZone "") (= LV_STRING : garagingZone "") (IF (NOTEQUALS XPATH : "../GaragingZone" null) (= LV_STRING : garagingZone XPATH : "../GaragingZone")) (IF (NOTEQUALS LV_STRING : garagingZone "") (= LV_STRING : GaragingZone LV_STRING : garagingZone)) (= LV_STRING : FarthestTerminalZone "") (= LV_STRING : farthestTerminalZone "") (IF (NOTEQUALS XPATH : "../FarthestTerminalZone" null) (= LV_STRING : farthestTerminalZone XPATH : "../FarthestTerminalZone")) (IF (NOTEQUALS LV_STRING : farthestTerminalZone "") (= LV_STRING : FarthestTerminalZone LV_STRING : farthestTerminalZone)) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS LV_INTEGER : RatingBasisNumeric 1.0) (IF (OR (OR (OR (EQUALS LV_STRING : GaragingZone "") (EQUALS LV_STRING : FarthestTerminalZone "")) (EQUALS LV_STRING : GaragingZone "Not Applicable")) (EQUALS LV_STRING : FarthestTerminalZone "Not Applicable")) (= LV_DOUBLE : LookupZoneRatedCollisionBasePremium 0.0) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionBasePremium (RateTable (ZoneRatedCollisionBasePremium LV_STRING : GaragingZone , LV_STRING : FarthestTerminalZone))))) ELSE (IF (NOT (EQUALS VehicleType "Special")) (IF (NOT (EQUALS VehicleType "Truck")) (IF (EQUALS VehicleType "Zone Rated") (IF (OR (OR (OR (EQUALS LV_STRING : GaragingZone "") (EQUALS LV_STRING : FarthestTerminalZone "")) (EQUALS LV_STRING : GaragingZone "Not Applicable")) (EQUALS LV_STRING : FarthestTerminalZone "Not Applicable")) (= LV_DOUBLE : LookupZoneRatedCollisionBasePremium 0.0) ELSE (= LV_DOUBLE : LookupZoneRatedCollisionBasePremium (RateTable (ZoneRatedCollisionBasePremium LV_STRING : GaragingZone , LV_STRING : FarthestTerminalZone))))))))))) (= LV_STRING : PublicTransportationGroup "") (IF (NOTEQUALS XPATH : "../PublicTransportationGroup" null) (= LV_STRING : PublicTransportationGroup XPATH : "../PublicTransportationGroup")) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (EQUALS VehicleType "Public Transportation") (IF (NOT (EQUALS LV_INTEGER : RatingBasisNumeric 1.0)) (IF (OR (EQUALS LV_STRING : Territory "") (EQUALS LV_STRING : PublicTransportationGroup "")) (= LV_DOUBLE : LookupPublicTransportationCollisionBaseRate 0.0) ELSE (= LV_DOUBLE : LookupPublicTransportationCollisionBaseRate (RateTable (PublicTransportationCollisionBaseRate LV_STRING : PublicTransportationGroup , LV_STRING : Territory))))))))) (= LV_STRING : VehicleIndicator "") (IF (NOTEQUALS XPATH : "../VehicleIndicator" null) (= LV_STRING : VehicleIndicator XPATH : "../VehicleIndicator")) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS LV_STRING : Class "Antique Autos")) (IF (NOT (OR (EQUALS LV_STRING : SupplementaryType "Snowmobile With Passenger Hazard") (EQUALS LV_STRING : SupplementaryType "Snowmobile Without Passenger Hazard"))) (IF (NOT (OR (OR (EQUALS CalculationType "Motorcycle-ACV") (EQUALS CalculationType "Priv Pass-ACV")) (EQUALS CalculationType "Priv Pass-SA"))) (IF (EQUALS LV_STRING : VehicleIndicator "Golfmobiles") (IF (AND (AND (NOTEQUALS Deductible "") (NOTEQUALS Deductible "Not Applicable")) (> LV_INTEGER : OriginalCostNew 0.0)) (= LV_DOUBLE : LookupSpecialTypesGolfmobileCollisionRate (RateTable (SpecialTypesGolfmobileCollisionRate Deductible , LV_INTEGER : OriginalCostNew))) ELSE (= LV_DOUBLE : LookupSpecialTypesGolfmobileCollisionRate 0.0))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS LV_STRING : Class "Antique Autos")) (IF (NOT (OR (EQUALS LV_STRING : SupplementaryType "Snowmobile With Passenger Hazard") (EQUALS LV_STRING : SupplementaryType "Snowmobile Without Passenger Hazard"))) (IF (NOT (OR (OR (EQUALS CalculationType "Motorcycle-ACV") (EQUALS CalculationType "Priv Pass-ACV")) (EQUALS CalculationType "Priv Pass-SA"))) (IF (NOT (EQUALS LV_STRING : VehicleIndicator "Golfmobiles")) (IF (OR (EQUALS CalculationType "Truck-ACV") (EQUALS CalculationType "Truck-SA")) (IF (EQUALS LV_STRING : Territory "") (= LV_DOUBLE : LookupTruckCollisionBaseRate 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionBaseRate (RateTable (TruckCollisionBaseRate LV_STRING : Territory))))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (NOT (EQUALS LV_STRING : RACAWanted "Yes")) (IF (EQUALS LV_STRING : Territory "") (= LV_DOUBLE : LookupTruckCollisionBaseRate 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionBaseRate (RateTable (TruckCollisionBaseRate LV_STRING : Territory))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (EQUALS VehicleType "Special") (IF (NOT (EQUALS LV_STRING : Class "Antique Autos")) (IF (NOT (OR (EQUALS LV_STRING : SupplementaryType "Snowmobile With Passenger Hazard") (EQUALS LV_STRING : SupplementaryType "Snowmobile Without Passenger Hazard"))) (IF (NOT (OR (OR (EQUALS CalculationType "Motorcycle-ACV") (EQUALS CalculationType "Priv Pass-ACV")) (EQUALS CalculationType "Priv Pass-SA"))) (IF (NOT (EQUALS LV_STRING : VehicleIndicator "Golfmobiles")) (IF (NOT (OR (EQUALS CalculationType "Truck-ACV") (EQUALS CalculationType "Truck-SA"))) (IF (EQUALS CalculationType "Hired Auto") (IF (OR (EQUALS Deductible "") (EQUALS Deductible "Not Applicable")) (= LV_DOUBLE : LookupCollisionCostOfHireRate 0.0) ELSE (= LV_DOUBLE : LookupCollisionCostOfHireRate (RateTable (CollisionCostOfHireRate Deductible))))))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (NOT (EQUALS VehicleType "Private Passenger")) (IF (NOT (EQUALS VehicleType "Public Transportation")) (IF (NOT (EQUALS VehicleType "Special")) (IF (EQUALS VehicleType "Truck") (IF (EQUALS LV_STRING : RACAWanted "Yes") (IF (EQUALS LV_STRING : ZipCode "") (= LV_DOUBLE : LookupTruckCollisionBaseRateRACA 0.0) ELSE (= LV_DOUBLE : LookupTruckCollisionBaseRateRACA (RateTable (TruckCollisionBaseRateRACA LV_STRING : ZipCode))))))))))) (IF (AND (AND (NOTEQUALS CoverageType "") (NOTEQUALS CoverageType "No Coverage")) (NOTEQUALS CoverageType "Not Applicable")) (IF (NOT (OR (EQUALS VehicleType "Garage") (EQUALS VehicleType "Garage Services"))) (IF (EQUALS VehicleType "Private Passenger") (IF (EQUALS LV_STRING : RACAWanted "Yes") (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupPrivatePassengerCollisionBaseRateRACA) ELSE (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupPrivatePassengerCollisionBaseRate)) ELSE (IF (EQUALS VehicleType "Public Transportation") (IF (EQUALS LV_INTEGER : RatingBasisNumeric 1.0) (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupZoneRatedCollisionBasePremium) ELSE (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupPublicTransportationCollisionBaseRate)) ELSE (IF (EQUALS VehicleType "Special") (IF (EQUALS LV_STRING : Class "Antique Autos") (= PreliminaryBaseRateFromTable (RateTable (SpecialTypesAntiqueAutoCollisionRate "Y"))) ELSE (IF (OR (EQUALS LV_STRING : SupplementaryType "Snowmobile With Passenger Hazard") (EQUALS LV_STRING : SupplementaryType "Snowmobile Without Passenger Hazard")) (= PreliminaryBaseRateFromTable (RateTable (SpecialTypesSnowmobileCollisionRate "Y"))) ELSE (IF (OR (OR (EQUALS CalculationType "Motorcycle-ACV") (EQUALS CalculationType "Priv Pass-ACV")) (EQUALS CalculationType "Priv Pass-SA")) (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupPrivatePassengerCollisionBaseRate) ELSE (IF (EQUALS LV_STRING : VehicleIndicator "Golfmobiles") (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupSpecialTypesGolfmobileCollisionRate) ELSE (IF (OR (EQUALS CalculationType "Truck-ACV") (EQUALS CalculationType "Truck-SA")) (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupTruckCollisionBaseRate) ELSE (IF (EQUALS CalculationType "Hired Auto") (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupCollisionCostOfHireRate))))))) ELSE (IF (EQUALS VehicleType "Truck") (IF (EQUALS LV_STRING : RACAWanted "Yes") (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupTruckCollisionBaseRateRACA) ELSE (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupTruckCollisionBaseRate)) ELSE (IF (EQUALS VehicleType "Zone Rated") (= PreliminaryBaseRateFromTable LV_DOUBLE : LookupZoneRatedCollisionBasePremium))))))))
2015-01-01 16:06:10,344 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:10,346 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,347 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,347 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,347 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,348 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,348 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,348 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,349 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,349 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,350 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,350 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:10,350 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:10,351 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,351 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,351 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,352 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,352 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,352 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,353 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,353 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,353 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,354 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:10,354 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:10,354 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,355 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,355 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,355 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,356 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,356 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,356 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,356 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,357 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,357 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,357 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:10,358 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,358 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,359 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,359 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,360 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:10,360 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,360 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,361 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,361 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,362 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,362 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,362 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,363 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,363 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,363 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:10,364 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:10,364 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,364 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,365 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,365 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,365 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,366 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,366 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,367 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,367 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,367 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:10,367 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:10,368 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,369 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,369 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:10,369 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,370 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,370 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,370 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,371 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,371 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,371 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,372 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,372 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,372 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:10,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:10,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:10,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,375 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,377 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:10,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:10,378 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,378 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,379 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,380 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,380 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,380 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,381 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,381 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,382 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,382 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:10,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:10,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,383 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,384 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,384 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,385 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,385 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,385 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:10,386 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:10,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,387 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,388 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,389 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,390 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,390 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,390 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:10,391 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,391 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,392 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,392 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,393 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:10,393 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,393 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,394 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,394 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,394 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,395 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,395 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,395 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,396 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,396 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:10,396 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:10,397 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,397 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,397 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,398 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,398 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,398 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,398 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,399 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,399 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,399 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:10,400 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:10,400 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,401 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,401 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:10,402 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,402 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,402 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,403 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,403 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,403 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,404 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,404 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,404 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,404 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:10,405 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:10,405 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,405 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,405 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:10,406 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,406 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,406 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,406 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,407 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,407 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,407 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,407 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:10,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:10,408 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,409 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,409 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,409 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,409 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,409 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,410 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,410 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,410 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,410 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,411 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,411 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,411 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:10,412 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:10,412 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,412 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,413 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,413 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,413 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,414 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,414 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,415 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,415 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,415 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:10,416 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:10,416 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,416 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,417 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,417 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,417 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,418 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,418 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,418 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,419 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,419 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,419 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:10,420 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,420 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,420 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,421 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,421 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:10,421 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,421 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,422 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,422 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,422 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,422 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,422 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,423 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,423 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,423 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:10,423 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:10,424 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,424 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,424 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,424 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,425 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,425 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,425 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,425 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,425 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,426 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:10,426 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:10,426 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:10,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,427 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,428 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,428 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,428 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,428 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,429 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,429 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:10,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:10,430 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,431 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,431 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,431 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:10,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:10,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../Territory"
2015-01-01 16:06:10,432 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../Territory @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,433 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../Territory @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,433 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../Territory with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Territory
2015-01-01 16:06:10,433 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,434 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Territory returns false
2015-01-01 16:06:10,434 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,435 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Territory
2015-01-01 16:06:10,435 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,435 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,436 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,438 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,440 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:10,441 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Territory' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,443 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,475 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,475 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,478 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,480 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:10,481 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Territory' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,484 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,488 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,489 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,490 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,490 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:10,490 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program Territory
2015-01-01 16:06:10,490 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../Territory
2015-01-01 16:06:10,491 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../Territory ) 
2015-01-01 16:06:10,491 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../Territory ) 
2015-01-01 16:06:10,491 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,492 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,492 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,492 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,492 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,492 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : Territory
2015-01-01 16:06:10,493 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : Territory
2015-01-01 16:06:10,493 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Territory
2015-01-01 16:06:10,493 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,493 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Territory returns false
2015-01-01 16:06:10,494 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,494 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Territory
2015-01-01 16:06:10,494 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,494 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,495 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,496 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,498 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,499 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Territory' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,500 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,527 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,528 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,530 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,533 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,533 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='Territory' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,536 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,542 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,543 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,544 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,544 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:10,545 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program Territory
2015-01-01 16:06:10,545 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Territory
2015-01-01 16:06:10,545 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../Territory"
2015-01-01 16:06:10,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../Territory @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,546 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../Territory @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,547 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../Territory with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Territory
2015-01-01 16:06:10,547 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,547 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Territory
2015-01-01 16:06:10,548 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Territory returns true
2015-01-01 16:06:10,548 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Territory
2015-01-01 16:06:10,548 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../Territory
2015-01-01 16:06:10,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at Territory as 070 [ ../Territory ] of type String
2015-01-01 16:06:10,549 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,550 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,550 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,550 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : Class
2015-01-01 16:06:10,551 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : Class
2015-01-01 16:06:10,551 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Class
2015-01-01 16:06:10,551 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,552 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Class
2015-01-01 16:06:10,552 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Class returns true
2015-01-01 16:06:10,552 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Class
2015-01-01 16:06:10,553 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Class
2015-01-01 16:06:10,553 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,553 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at Class as [StringEvaluator] ''
2015-01-01 16:06:10,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,554 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,555 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,555 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : className
2015-01-01 16:06:10,555 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : className
2015-01-01 16:06:10,556 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for className
2015-01-01 16:06:10,556 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,556 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className
2015-01-01 16:06:10,557 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className returns true
2015-01-01 16:06:10,557 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className
2015-01-01 16:06:10,557 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value className
2015-01-01 16:06:10,558 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,558 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at className as [StringEvaluator] ''
2015-01-01 16:06:10,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:10,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:10,559 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../Class"
2015-01-01 16:06:10,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../Class @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../Class @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,560 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../Class with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Class
2015-01-01 16:06:10,560 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,561 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Class
2015-01-01 16:06:10,561 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Class returns true
2015-01-01 16:06:10,561 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Class
2015-01-01 16:06:10,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../Class
2015-01-01 16:06:10,561 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../Class ) 
2015-01-01 16:06:10,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../Class ) 
2015-01-01 16:06:10,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,562 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : className
2015-01-01 16:06:10,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : className
2015-01-01 16:06:10,563 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for className
2015-01-01 16:06:10,564 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,564 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className
2015-01-01 16:06:10,564 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className returns true
2015-01-01 16:06:10,564 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/className
2015-01-01 16:06:10,564 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value className
2015-01-01 16:06:10,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> className != ''
2015-01-01 16:06:10,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is className != ''
2015-01-01 16:06:10,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,565 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,566 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : SupplementaryType
2015-01-01 16:06:10,567 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : SupplementaryType
2015-01-01 16:06:10,567 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for SupplementaryType
2015-01-01 16:06:10,567 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,567 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/SupplementaryType returns false
2015-01-01 16:06:10,568 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,568 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/SupplementaryType
2015-01-01 16:06:10,568 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,568 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,569 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,570 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,572 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,573 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='SupplementaryType' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,574 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,598 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,598 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,600 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,601 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,601 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='SupplementaryType' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,603 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,607 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,607 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,608 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,609 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:10,609 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program SupplementaryType
2015-01-01 16:06:10,609 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value SupplementaryType
2015-01-01 16:06:10,609 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,609 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at SupplementaryType as [StringEvaluator] ''
2015-01-01 16:06:10,610 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,610 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:10,610 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:10,610 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../SupplementaryType"
2015-01-01 16:06:10,611 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../SupplementaryType @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,611 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../SupplementaryType @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,611 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../SupplementaryType with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/SupplementaryType
2015-01-01 16:06:10,612 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,612 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/SupplementaryType returns false
2015-01-01 16:06:10,612 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,612 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/SupplementaryType
2015-01-01 16:06:10,612 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,613 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,613 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,614 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,616 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:10,616 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='SupplementaryType' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,617 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,640 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,640 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,642 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,643 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:10,643 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='SupplementaryType' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,645 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,649 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,649 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,650 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,650 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:10,650 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program SupplementaryType
2015-01-01 16:06:10,651 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../SupplementaryType
2015-01-01 16:06:10,651 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../SupplementaryType ) 
2015-01-01 16:06:10,651 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../SupplementaryType ) 
2015-01-01 16:06:10,651 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,652 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,652 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,652 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,652 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,653 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,653 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,653 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,653 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,654 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,654 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,654 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,654 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:10,654 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:10,655 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,655 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,655 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,655 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,655 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,656 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,656 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,656 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,656 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,657 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:10,657 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:10,657 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,657 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,657 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,658 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,658 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,658 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,658 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,658 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,659 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,659 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,659 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:10,659 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,660 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,660 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,660 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,660 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:10,661 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,661 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,661 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,661 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,662 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,662 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,662 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,662 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,662 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,663 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:10,663 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:10,663 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,663 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,664 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,664 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,664 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,664 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,664 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,665 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,665 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,665 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:10,665 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:10,666 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,666 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,666 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:10,666 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,667 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,667 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,667 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,667 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,668 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,668 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,668 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,668 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,668 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:10,669 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Private Passenger'
2015-01-01 16:06:10,669 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,669 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,669 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:10,670 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,670 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,670 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,670 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,671 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,671 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,671 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,671 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,671 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,672 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:10,672 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Public Transportation' )
2015-01-01 16:06:10,672 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,672 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,673 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,673 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,673 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,673 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:10,674 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:10,674 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:10,674 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,674 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:10,674 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:10,675 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:10,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:10,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0 [ 0.0 ] of type String
2015-01-01 16:06:10,675 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,676 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:10,676 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:10,676 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:10,676 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,677 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,677 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:10,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:10,677 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:10,678 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:10,678 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:10,678 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:10,678 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../RatingBasisNumeric ) 
2015-01-01 16:06:10,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,679 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,680 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:10,680 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:10,680 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:10,680 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,681 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:10,681 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:10,681 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:10,681 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:10,681 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../RatingBasisNumeric"
2015-01-01 16:06:10,682 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,682 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../RatingBasisNumeric @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,682 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../RatingBasisNumeric with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:10,682 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,683 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:10,683 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric returns true
2015-01-01 16:06:10,683 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/RatingBasisNumeric
2015-01-01 16:06:10,683 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../RatingBasisNumeric
2015-01-01 16:06:10,683 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at ratingBasisNumeric as 0.0 [ ../RatingBasisNumeric ] of type String
2015-01-01 16:06:10,684 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,684 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,684 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,684 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:10,685 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:10,685 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:10,685 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,685 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:10,685 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:10,686 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:10,686 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:10,686 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,686 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:10,686 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:10,687 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:10,687 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,687 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:10,687 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:10,688 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:10,688 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:10,688 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:10,688 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,688 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:10,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:10,689 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:10,690 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,690 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:10,690 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:10,690 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:10,690 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:10,691 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,691 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:10,691 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : ratingBasisNumeric
2015-01-01 16:06:10,691 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for ratingBasisNumeric
2015-01-01 16:06:10,692 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,692 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:10,692 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric returns true
2015-01-01 16:06:10,692 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/ratingBasisNumeric
2015-01-01 16:06:10,692 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value ratingBasisNumeric
2015-01-01 16:06:10,693 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at RatingBasisNumeric as 0.0 [ ratingBasisNumeric ] of type String
2015-01-01 16:06:10,693 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,693 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,693 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,693 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : GaragingZone
2015-01-01 16:06:10,694 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : GaragingZone
2015-01-01 16:06:10,694 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for GaragingZone
2015-01-01 16:06:10,694 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,694 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/GaragingZone returns false
2015-01-01 16:06:10,695 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,695 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/GaragingZone
2015-01-01 16:06:10,695 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,695 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,696 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,697 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,699 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,699 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='GaragingZone' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,700 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,723 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,723 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,725 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,726 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,727 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='GaragingZone' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,729 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,733 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,734 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,735 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,735 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:10,735 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program GaragingZone
2015-01-01 16:06:10,735 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value GaragingZone
2015-01-01 16:06:10,736 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,736 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at GaragingZone as [StringEvaluator] ''
2015-01-01 16:06:10,736 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,736 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,737 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,737 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : garagingZone
2015-01-01 16:06:10,737 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : garagingZone
2015-01-01 16:06:10,738 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for garagingZone
2015-01-01 16:06:10,738 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,738 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/garagingZone returns false
2015-01-01 16:06:10,738 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,738 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/garagingZone
2015-01-01 16:06:10,739 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,739 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,739 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,741 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,745 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,745 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='garagingZone' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,747 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,771 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,771 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,774 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,776 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,776 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='garagingZone' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,778 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,782 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,782 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,783 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,784 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:10,784 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program garagingZone
2015-01-01 16:06:10,784 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value garagingZone
2015-01-01 16:06:10,784 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,784 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at garagingZone as [StringEvaluator] ''
2015-01-01 16:06:10,785 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,785 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:10,785 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:10,785 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../GaragingZone"
2015-01-01 16:06:10,786 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../GaragingZone @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,786 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../GaragingZone @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,786 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../GaragingZone with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/GaragingZone
2015-01-01 16:06:10,786 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,787 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/GaragingZone returns false
2015-01-01 16:06:10,787 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,787 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/GaragingZone
2015-01-01 16:06:10,787 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,788 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,788 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,789 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,791 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:10,791 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='GaragingZone' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,792 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,814 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,815 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,816 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,819 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:10,820 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='GaragingZone' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,822 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program C03E69E8-44EF-343D-AE9F-85929D2C3984
2015-01-01 16:06:10,822 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name GaragingZone
2015-01-01 16:06:10,822 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='C03E69E8-44EF-343D-AE9F-85929D2C3984' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:10,824 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:10,825 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:10,825 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:10,825 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:10,825 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( XPATH:"PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580']" == null && GaragingZone != "Not Applicable" ) THEN 
	GaragingZone = "Not Applicable" 
END IF

2015-01-01 16:06:10,826 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:10,826 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:10,826 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (AND (EQUALS XPATH : "PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580']" null) (NOTEQUALS GaragingZone "Not Applicable")) (= GaragingZone "Not Applicable"))
2015-01-01 16:06:10,826 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:10,827 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,827 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:10,827 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:10,827 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580']"
2015-01-01 16:06:10,827 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,828 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,828 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580']
2015-01-01 16:06:10,828 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns  not( PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] )
2015-01-01 16:06:10,829 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,829 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,829 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : GaragingZone
2015-01-01 16:06:10,829 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable GaragingZone
2015-01-01 16:06:10,829 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for GaragingZone
2015-01-01 16:06:10,830 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,830 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/GaragingZone
2015-01-01 16:06:10,830 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/GaragingZone returns true
2015-01-01 16:06:10,830 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/GaragingZone
2015-01-01 16:06:10,831 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value GaragingZone
2015-01-01 16:06:10,831 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> GaragingZone != 'Not Applicable'
2015-01-01 16:06:10,831 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ( not( PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] ) and GaragingZone != 'Not Applicable')
2015-01-01 16:06:10,831 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ( not( PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] ) and GaragingZone != 'Not Applicable')
2015-01-01 16:06:10,834 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,835 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,835 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../GaragingZone
2015-01-01 16:06:10,835 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../GaragingZone ) 
2015-01-01 16:06:10,835 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../GaragingZone ) 
2015-01-01 16:06:10,836 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,836 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,836 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,836 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,836 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : garagingZone
2015-01-01 16:06:10,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : garagingZone
2015-01-01 16:06:10,837 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for garagingZone
2015-01-01 16:06:10,837 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,837 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/garagingZone
2015-01-01 16:06:10,838 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/garagingZone returns true
2015-01-01 16:06:10,838 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/garagingZone
2015-01-01 16:06:10,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value garagingZone
2015-01-01 16:06:10,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> garagingZone != ''
2015-01-01 16:06:10,838 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is garagingZone != ''
2015-01-01 16:06:10,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,839 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : FarthestTerminalZone
2015-01-01 16:06:10,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : FarthestTerminalZone
2015-01-01 16:06:10,840 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for FarthestTerminalZone
2015-01-01 16:06:10,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/FarthestTerminalZone returns false
2015-01-01 16:06:10,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/FarthestTerminalZone
2015-01-01 16:06:10,841 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,842 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,842 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,844 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,845 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,845 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='FarthestTerminalZone' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,847 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,869 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,869 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,871 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,872 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,872 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='FarthestTerminalZone' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,874 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,878 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,878 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,879 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,880 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:10,880 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program FarthestTerminalZone
2015-01-01 16:06:10,880 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value FarthestTerminalZone
2015-01-01 16:06:10,880 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at FarthestTerminalZone as [StringEvaluator] ''
2015-01-01 16:06:10,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:10,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,881 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : farthestTerminalZone
2015-01-01 16:06:10,882 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : farthestTerminalZone
2015-01-01 16:06:10,882 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for farthestTerminalZone
2015-01-01 16:06:10,882 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,882 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/farthestTerminalZone returns false
2015-01-01 16:06:10,883 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,883 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/farthestTerminalZone
2015-01-01 16:06:10,883 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,883 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,884 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,885 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,886 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:10,887 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='farthestTerminalZone' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,888 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,913 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,914 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,915 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,917 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:10,917 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='farthestTerminalZone' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,919 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,923 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,923 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,924 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:10,924 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:10,925 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program farthestTerminalZone
2015-01-01 16:06:10,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value farthestTerminalZone
2015-01-01 16:06:10,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,925 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at farthestTerminalZone as [StringEvaluator] ''
2015-01-01 16:06:10,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:10,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:10,926 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../FarthestTerminalZone"
2015-01-01 16:06:10,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../FarthestTerminalZone @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../FarthestTerminalZone @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,927 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../FarthestTerminalZone with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/FarthestTerminalZone
2015-01-01 16:06:10,927 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,927 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/FarthestTerminalZone returns false
2015-01-01 16:06:10,928 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:10,928 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/FarthestTerminalZone
2015-01-01 16:06:10,928 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,929 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,929 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,930 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,931 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:10,932 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='FarthestTerminalZone' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,933 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:10,955 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:10,955 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:10,957 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:10,958 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:10,958 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='FarthestTerminalZone' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:10,960 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program FD892AAC-17D2-3F22-A766-02B288ABB70E
2015-01-01 16:06:10,960 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name FarthestTerminalZone
2015-01-01 16:06:10,961 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='FD892AAC-17D2-3F22-A766-02B288ABB70E' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:10,963 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:10,963 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:10,963 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:10,963 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:10,963 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( XPATH:"PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580']" == null && FarthestTerminalZone != "Not Applicable" ) THEN 
	FarthestTerminalZone = "Not Applicable" 
END IF

2015-01-01 16:06:10,964 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:10,964 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:10,964 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (AND (EQUALS XPATH : "PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580']" null) (NOTEQUALS FarthestTerminalZone "Not Applicable")) (= FarthestTerminalZone "Not Applicable"))
2015-01-01 16:06:10,964 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:10,965 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,965 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:10,965 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:10,965 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580']"
2015-01-01 16:06:10,966 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,966 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,966 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580']
2015-01-01 16:06:10,967 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns  not( PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] )
2015-01-01 16:06:10,967 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,967 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:10,967 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : FarthestTerminalZone
2015-01-01 16:06:10,967 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable FarthestTerminalZone
2015-01-01 16:06:10,968 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for FarthestTerminalZone
2015-01-01 16:06:10,968 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,968 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/FarthestTerminalZone
2015-01-01 16:06:10,968 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/FarthestTerminalZone returns true
2015-01-01 16:06:10,969 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/FarthestTerminalZone
2015-01-01 16:06:10,969 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value FarthestTerminalZone
2015-01-01 16:06:10,969 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> FarthestTerminalZone != 'Not Applicable'
2015-01-01 16:06:10,969 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ( not( PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] ) and FarthestTerminalZone != 'Not Applicable')
2015-01-01 16:06:10,970 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ( not( PrimaryClassCode[.='527' or .='520' or .='537' or .='530' or .='547' or .='540' or .='557' or .='550' or .='567' or .='560' or .='647' or .='640' or .='657' or .='650' or .='587' or .='580'] ) and FarthestTerminalZone != 'Not Applicable')
2015-01-01 16:06:10,971 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,972 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,972 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../FarthestTerminalZone
2015-01-01 16:06:10,973 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../FarthestTerminalZone ) 
2015-01-01 16:06:10,973 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../FarthestTerminalZone ) 
2015-01-01 16:06:10,973 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,973 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,974 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,974 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,974 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : farthestTerminalZone
2015-01-01 16:06:10,974 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : farthestTerminalZone
2015-01-01 16:06:10,975 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for farthestTerminalZone
2015-01-01 16:06:10,975 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,975 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/farthestTerminalZone
2015-01-01 16:06:10,975 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/farthestTerminalZone returns true
2015-01-01 16:06:10,976 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/farthestTerminalZone
2015-01-01 16:06:10,976 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value farthestTerminalZone
2015-01-01 16:06:10,976 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> farthestTerminalZone != ''
2015-01-01 16:06:10,976 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is farthestTerminalZone != ''
2015-01-01 16:06:10,976 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:10,977 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:10,977 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:10,977 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,977 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,978 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,978 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,978 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,978 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,979 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,979 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,979 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,979 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:10,979 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:10,980 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,980 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,980 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,980 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,981 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,981 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,981 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,981 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,981 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:10,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:10,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:10,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,982 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:10,983 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:10,983 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:10,983 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,983 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,984 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:10,984 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:10,984 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:10,984 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:10,984 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,985 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:10,985 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,985 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,986 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:10,986 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,986 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,986 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,986 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,987 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,987 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,987 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,987 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,988 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,988 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:10,988 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:10,988 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,988 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,989 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,989 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,989 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,989 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,990 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,990 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,990 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,990 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:10,990 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:10,991 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,991 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,991 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:10,992 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,992 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,992 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,992 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,992 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,993 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,993 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,993 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,993 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,994 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:10,994 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:10,995 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,995 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,995 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:10,995 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,996 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:10,996 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:10,996 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:10,996 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,996 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,997 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:10,997 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:10,997 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:10,997 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:10,998 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:10,998 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:10,998 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:10,998 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:10,999 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:10,999 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:10,999 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:10,999 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:10,999 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:11,000 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:11,000 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:11,000 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:11,000 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:11,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is RatingBasisNumeric = 1.0
2015-01-01 16:06:11,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:11,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:11,001 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:11,002 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,002 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,002 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : PublicTransportationGroup
2015-01-01 16:06:11,002 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : PublicTransportationGroup
2015-01-01 16:06:11,003 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PublicTransportationGroup
2015-01-01 16:06:11,003 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,003 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup returns false
2015-01-01 16:06:11,003 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:11,003 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup
2015-01-01 16:06:11,004 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,004 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,004 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,006 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,007 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:11,008 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PublicTransportationGroup' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,009 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,036 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,036 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,038 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,040 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:11,040 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PublicTransportationGroup' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,042 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,046 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,046 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,048 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:11,048 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:11,048 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program PublicTransportationGroup
2015-01-01 16:06:11,048 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PublicTransportationGroup
2015-01-01 16:06:11,048 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:11,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at PublicTransportationGroup as [StringEvaluator] ''
2015-01-01 16:06:11,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:11,049 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:11,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../PublicTransportationGroup"
2015-01-01 16:06:11,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../PublicTransportationGroup @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../PublicTransportationGroup @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,050 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../PublicTransportationGroup with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup
2015-01-01 16:06:11,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup returns false
2015-01-01 16:06:11,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:11,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup
2015-01-01 16:06:11,051 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,052 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,052 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,054 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,055 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:11,056 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PublicTransportationGroup' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,057 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,080 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,080 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,082 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,083 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:11,083 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='PublicTransportationGroup' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,085 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program CF927BCD-A4A3-30D2-93FD-9FC5F55C2D69
2015-01-01 16:06:11,085 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name PublicTransportationGroup
2015-01-01 16:06:11,086 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='CF927BCD-A4A3-30D2-93FD-9FC5F55C2D69' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:11,087 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:11,087 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:11,088 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:11,088 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:11,088 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - PublicTransportationGroup = LV_STRING:LookupPublicTransportationGroup

2015-01-01 16:06:11,088 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:11,089 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:11,089 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (= PublicTransportationGroup LV_STRING : LookupPublicTransportationGroup)
2015-01-01 16:06:11,089 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:11,089 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,089 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,090 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : PublicTransportationGroup
2015-01-01 16:06:11,090 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable PublicTransportationGroup
2015-01-01 16:06:11,090 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PublicTransportationGroup
2015-01-01 16:06:11,090 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,091 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup
2015-01-01 16:06:11,091 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup returns true
2015-01-01 16:06:11,091 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup
2015-01-01 16:06:11,091 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PublicTransportationGroup
2015-01-01 16:06:11,092 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,092 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : LookupPublicTransportationGroup
2015-01-01 16:06:11,092 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : LookupPublicTransportationGroup
2015-01-01 16:06:11,092 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationGroup
2015-01-01 16:06:11,093 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,093 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationGroup returns false
2015-01-01 16:06:11,093 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:11,093 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationGroup
2015-01-01 16:06:11,093 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,094 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,094 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,095 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,097 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:11,097 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationGroup' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,098 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,120 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,121 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,122 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,124 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:11,124 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationGroup' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,126 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:330) - Rating Program 40F11725-9580-3952-8E3B-1E6E27E206F7
2015-01-01 16:06:11,126 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:331) - Rating Program Name LookupPublicTransportationGroup
2015-01-01 16:06:11,126 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.StepXMLDAO.getRecords(StepXMLDAO.java:93) - ProgramStep Query -> for $x in /Product/RatingEntity/RatingProcess/RatingProgram let $y := $x/ProgramStep where $x/Id='40F11725-9580-3952-8E3B-1E6E27E206F7' for $z in $y order by number($z/ExecutionOrder) ascending return $z
2015-01-01 16:06:11,128 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:42) - *******************************************************************************************
2015-01-01 16:06:11,128 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:43) - ***                         Sim Language Parser Version 1.0                             ***
2015-01-01 16:06:11,128 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:44) - *******************************************************************************************
2015-01-01 16:06:11,129 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:45) - ***********************************Statement Begin*****************************************
2015-01-01 16:06:11,129 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:46) - IF  ( Type != "" ) THEN 
	LV_STRING:LookupPublicTransportationGroup = RateTable:PublicTransportationGroup ( Type )  
ELSE 
	LV_STRING:LookupPublicTransportationGroup = "" 
END IF

2015-01-01 16:06:11,129 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:47) - ************************************Statement End******************************************
2015-01-01 16:06:11,129 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:62) - Parsed Tree - 
2015-01-01 16:06:11,130 [main] INFO  com.mmpnc.simlanguage.read.LanguageReader.execute(LanguageReader.java:63) - (IF (NOTEQUALS Type "") (= LV_STRING : LookupPublicTransportationGroup (RateTable (PublicTransportationGroup Type))) ELSE (= LV_STRING : LookupPublicTransportationGroup ""))
2015-01-01 16:06:11,130 [main] INFO  com.mmpnc.rating.algorithm.execute.AlgorithmExecutor.getExecutorFactory(AlgorithmExecutor.java:97) - We set the Evaluator factory to AlgorithmEvaluatorFactory
2015-01-01 16:06:11,130 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:11,130 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,131 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Type
2015-01-01 16:06:11,131 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Type
2015-01-01 16:06:11,131 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Type
2015-01-01 16:06:11,131 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,132 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type
2015-01-01 16:06:11,132 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type returns true
2015-01-01 16:06:11,132 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type
2015-01-01 16:06:11,132 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Type
2015-01-01 16:06:11,133 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> Type != ''
2015-01-01 16:06:11,133 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is Type != ''
2015-01-01 16:06:11,133 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:11,133 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:11,134 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:11,134 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,134 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,134 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : LookupPublicTransportationGroup
2015-01-01 16:06:11,135 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : LookupPublicTransportationGroup
2015-01-01 16:06:11,135 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationGroup
2015-01-01 16:06:11,135 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,135 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationGroup
2015-01-01 16:06:11,136 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationGroup returns true
2015-01-01 16:06:11,136 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/LookupPublicTransportationGroup
2015-01-01 16:06:11,136 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationGroup
2015-01-01 16:06:11,136 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationGroup
2015-01-01 16:06:11,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:11,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : Type
2015-01-01 16:06:11,137 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable Type
2015-01-01 16:06:11,138 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Type
2015-01-01 16:06:11,138 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,138 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type
2015-01-01 16:06:11,138 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type returns true
2015-01-01 16:06:11,138 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/Type
2015-01-01 16:06:11,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Type
2015-01-01 16:06:11,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of Type
2015-01-01 16:06:11,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter Type is of type String value is Urban Bus
2015-01-01 16:06:11,139 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for Type is Urban Bus @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,140 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored Urban Bus @ index 0
2015-01-01 16:06:11,140 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationGroup ] Execution *************
2015-01-01 16:06:11,140 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146371140
2015-01-01 16:06:11,140 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:11,141 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationGroup'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:11,143 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,164 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationGroup'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:11,167 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> 0B5E8BE4-77EF-32E9-A4BB-9746C5D7552D
2015-01-01 16:06:11,167 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='0B5E8BE4-77EF-32E9-A4BB-9746C5D7552D'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A' return $x )
2015-01-01 16:06:11,169 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:11,169 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='0B5E8BE4-77EF-32E9-A4BB-9746C5D7552D'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Status='A'  and $x/Column1='Urban Bus' return $x
2015-01-01 16:06:11,171 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:99) - We got the String Entry value as Other Buses
2015-01-01 16:06:11,171 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146371171
2015-01-01 16:06:11,171 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at LookupPublicTransportationGroup as Other Buses [ 'Other Buses' ] of type String
2015-01-01 16:06:11,171 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationGroup
2015-01-01 16:06:11,172 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at PublicTransportationGroup as Other Buses [ LookupPublicTransportationGroup ] of type String
2015-01-01 16:06:11,172 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.instanciateVariableElement(AssignmentEvaluator.java:106) - We did not get the PublicTransportationGroup in the xml, for assignment we will create it! 
2015-01-01 16:06:11,172 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../PublicTransportationGroup
2015-01-01 16:06:11,172 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../PublicTransportationGroup ) 
2015-01-01 16:06:11,173 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../PublicTransportationGroup ) 
2015-01-01 16:06:11,173 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:11,173 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:11,174 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:11,174 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,174 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,174 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : PublicTransportationGroup
2015-01-01 16:06:11,174 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : PublicTransportationGroup
2015-01-01 16:06:11,175 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PublicTransportationGroup
2015-01-01 16:06:11,175 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,175 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup
2015-01-01 16:06:11,175 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup returns true
2015-01-01 16:06:11,175 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup
2015-01-01 16:06:11,176 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PublicTransportationGroup
2015-01-01 16:06:11,176 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../PublicTransportationGroup"
2015-01-01 16:06:11,176 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../PublicTransportationGroup @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,176 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../PublicTransportationGroup @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,177 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../PublicTransportationGroup with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup
2015-01-01 16:06:11,177 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,177 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup
2015-01-01 16:06:11,177 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup returns true
2015-01-01 16:06:11,178 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/PublicTransportationGroup
2015-01-01 16:06:11,178 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../PublicTransportationGroup
2015-01-01 16:06:11,178 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:75) - Assign String Value at PublicTransportationGroup as Other Buses [ ../PublicTransportationGroup ] of type String
2015-01-01 16:06:11,178 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:11,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:11,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:11,179 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:11,179 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,180 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:11,180 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:11,180 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:11,180 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:11,181 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:11,181 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
2015-01-01 16:06:11,181 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,181 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:11,181 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:11,182 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:11,182 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,182 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:11,182 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:11,183 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:11,183 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:11,183 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'No Coverage'
2015-01-01 16:06:11,183 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns (CoverageType != '' and CoverageType != 'No Coverage')
2015-01-01 16:06:11,183 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Not Applicable"
2015-01-01 16:06:11,184 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,184 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:11,184 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:11,184 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:11,184 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,185 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:11,185 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:11,185 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:11,185 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:11,186 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != 'Not Applicable'
2015-01-01 16:06:11,186 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AndEvaluator.evaluate(AndEvaluator.java:54) - AndEvaluator.evaluatr returns ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:11,186 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is ((CoverageType != '' and CoverageType != 'No Coverage') and CoverageType != 'Not Applicable')
2015-01-01 16:06:11,186 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:11,187 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:11,187 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage"
2015-01-01 16:06:11,187 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,187 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:11,188 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:11,188 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:11,188 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,188 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:11,188 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:11,189 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:11,189 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:11,189 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage'
2015-01-01 16:06:11,189 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Garage Services"
2015-01-01 16:06:11,190 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,190 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:11,190 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:11,190 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:11,190 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,191 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:11,191 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:11,191 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:11,191 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:11,192 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Garage Services'
2015-01-01 16:06:11,192 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( (VehicleType = 'Garage' or VehicleType = 'Garage Services') )
2015-01-01 16:06:11,192 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:11,193 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:11,193 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Private Passenger"
2015-01-01 16:06:11,193 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,193 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:11,193 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:11,194 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:11,194 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,194 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:11,194 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:11,195 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:11,195 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:11,195 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Private Passenger'
2015-01-01 16:06:11,195 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( VehicleType = 'Private Passenger' )
2015-01-01 16:06:11,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:11,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:11,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "Public Transportation"
2015-01-01 16:06:11,196 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,197 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : VehicleType
2015-01-01 16:06:11,197 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable VehicleType
2015-01-01 16:06:11,197 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleType
2015-01-01 16:06:11,197 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,198 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:11,198 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType returns true
2015-01-01 16:06:11,198 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleType
2015-01-01 16:06:11,198 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleType
2015-01-01 16:06:11,198 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns VehicleType = 'Public Transportation'
2015-01-01 16:06:11,199 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is VehicleType = 'Public Transportation'
2015-01-01 16:06:11,199 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:11,199 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:11,200 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,200 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:11,200 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_INTEGER : RatingBasisNumeric
2015-01-01 16:06:11,200 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for RatingBasisNumeric
2015-01-01 16:06:11,201 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,201 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:11,201 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric returns true
2015-01-01 16:06:11,201 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/RatingBasisNumeric
2015-01-01 16:06:11,201 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value RatingBasisNumeric
2015-01-01 16:06:11,202 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns RatingBasisNumeric = 1.0
2015-01-01 16:06:11,202 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is not ( RatingBasisNumeric = 1.0 )
2015-01-01 16:06:11,202 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is true
2015-01-01 16:06:11,202 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as true
2015-01-01 16:06:11,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:11,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : Territory
2015-01-01 16:06:11,203 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : Territory
2015-01-01 16:06:11,204 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Territory
2015-01-01 16:06:11,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Territory
2015-01-01 16:06:11,204 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Territory returns true
2015-01-01 16:06:11,205 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Territory
2015-01-01 16:06:11,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Territory
2015-01-01 16:06:11,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns Territory = ''
2015-01-01 16:06:11,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:11,205 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : PublicTransportationGroup
2015-01-01 16:06:11,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : PublicTransportationGroup
2015-01-01 16:06:11,206 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PublicTransportationGroup
2015-01-01 16:06:11,206 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,207 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup
2015-01-01 16:06:11,207 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup returns true
2015-01-01 16:06:11,207 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup
2015-01-01 16:06:11,207 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PublicTransportationGroup
2015-01-01 16:06:11,208 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.EqualsEvaluator.evaluate(EqualsEvaluator.java:59) -  EqualsEvaluator.evaluate returns PublicTransportationGroup = ''
2015-01-01 16:06:11,208 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is (Territory = '' or PublicTransportationGroup = '')
2015-01-01 16:06:11,208 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:11,208 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:11,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:11,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,209 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_DOUBLE : LookupPublicTransportationCollisionBaseRate
2015-01-01 16:06:11,210 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_DOUBLE : LookupPublicTransportationCollisionBaseRate
2015-01-01 16:06:11,210 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for LookupPublicTransportationCollisionBaseRate
2015-01-01 16:06:11,210 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,210 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionBaseRate returns false
2015-01-01 16:06:11,210 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:11,211 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/LookupPublicTransportationCollisionBaseRate
2015-01-01 16:06:11,211 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,211 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,212 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,213 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,215 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:11,215 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationCollisionBaseRate' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,217 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,240 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,240 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,242 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,243 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:11,243 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='LookupPublicTransportationCollisionBaseRate' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,245 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,249 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,249 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,250 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:11,251 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:11,251 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program LookupPublicTransportationCollisionBaseRate
2015-01-01 16:06:11,251 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value LookupPublicTransportationCollisionBaseRate
2015-01-01 16:06:11,251 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:161) - FunctionEvaluator.evaluate evaluates RateTable values for PublicTransportationCollisionBaseRate
2015-01-01 16:06:11,252 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:11,252 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,252 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : PublicTransportationGroup
2015-01-01 16:06:11,252 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : PublicTransportationGroup
2015-01-01 16:06:11,253 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for PublicTransportationGroup
2015-01-01 16:06:11,253 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,253 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup
2015-01-01 16:06:11,253 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup returns true
2015-01-01 16:06:11,253 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/PublicTransportationGroup
2015-01-01 16:06:11,254 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value PublicTransportationGroup
2015-01-01 16:06:11,254 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of PublicTransportationGroup
2015-01-01 16:06:11,254 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter PublicTransportationGroup is of type String value is Other Buses
2015-01-01 16:06:11,254 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for PublicTransportationGroup is Other Buses @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,255 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored Other Buses @ index 0
2015-01-01 16:06:11,255 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:172) - Start getting param values
2015-01-01 16:06:11,255 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,255 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : Territory
2015-01-01 16:06:11,256 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : Territory
2015-01-01 16:06:11,256 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for Territory
2015-01-01 16:06:11,256 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,256 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Territory
2015-01-01 16:06:11,257 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Territory returns true
2015-01-01 16:06:11,257 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/Territory
2015-01-01 16:06:11,257 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value Territory
2015-01-01 16:06:11,257 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:216) - in getValue function to get value of Territory
2015-01-01 16:06:11,258 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:238) -  Parameter Territory is of type String value is 070
2015-01-01 16:06:11,258 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.getValue(FunctionEvaluator.java:242) - Value for Territory is 070 @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,258 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.FunctionEvaluator.evaluate(FunctionEvaluator.java:178) - we stored 070 @ index 1
2015-01-01 16:06:11,258 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:52) - ************** RateTable [ PublicTransportationCollisionBaseRate ] Execution *************
2015-01-01 16:06:11,258 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:53) - Execution Start Time , 1420146371258
2015-01-01 16:06:11,259 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:61) - Ratebook ID -> 93BBD210-679F-4516-BA9F-3629CFE79583
2015-01-01 16:06:11,259 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableXMLDAO.getUniqueRecord(RateTableXMLDAO.java:74) - RateTable Query -> for $x in /Product/RateTable where $x/Name='PublicTransportationCollisionBaseRate'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RateTable>{$x/*[local-name()=('Id','Name','Title','RateTableConfiguration')]}</RateTable>
2015-01-01 16:06:11,262 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:73) - RateTable ID -> 77E609AB-6284-39DC-BE8D-6B162979198F
2015-01-01 16:06:11,262 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:80) - RateTableEntry Count Query -> count( for $x in /Product/RateTable/RateTableEntry where $x/RateTable='77E609AB-6284-39DC-BE8D-6B162979198F'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583'  and $x/Status='A' return $x )
2015-01-01 16:06:11,265 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:100) - Records Found
2015-01-01 16:06:11,265 [main] INFO  com.mmpnc.rating.data.dao.impl.xml.RateTableEntryXMLDAO.getUniqueRecord(RateTableEntryXMLDAO.java:214) - RateTableEntry Query -> for $x in /Product/RateTable/RateTableEntry where $x/RateTable='77E609AB-6284-39DC-BE8D-6B162979198F'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583'  and $x/Status='A'  and $x/Column1='Other Buses'  and $x/Column2='070' return $x
2015-01-01 16:06:11,269 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:107) - We got the Numeric Entry value as 91.0
2015-01-01 16:06:11,269 [main] INFO  com.mmpnc.rating.util.RateTableExecutor.execute(RateTableExecutor.java:121) - Execution End Time , 1420146371269
2015-01-01 16:06:11,269 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentLocalEvaluator.evaluate(AssignmentLocalEvaluator.java:44) - evaluate the AssignmentLocalEvaluator by calling AssignmentEvaluator
2015-01-01 16:06:11,270 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:49) - Current XPATH Pointer at /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,270 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,270 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is LV_STRING : VehicleIndicator
2015-01-01 16:06:11,270 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:101) - Get Value for : LV_STRING : VehicleIndicator
2015-01-01 16:06:11,271 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for VehicleIndicator
2015-01-01 16:06:11,271 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,271 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleIndicator returns false
2015-01-01 16:06:11,271 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:11,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/VehicleIndicator
2015-01-01 16:06:11,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,272 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,272 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,274 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='57D13189-A8B8-318A-BE5F-56707199C710'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,275 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 1BCE3406-5927-37E1-9567-FF247CCBB697
2015-01-01 16:06:11,276 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='VehicleIndicator' ] where $x/Id='1BCE3406-5927-37E1-9567-FF247CCBB697'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,277 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,300 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,301 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,302 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='17BF9746-D6BE-36F8-9838-9BEB26F40397'  and $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,304 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF
2015-01-01 16:06:11,304 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='VehicleIndicator' ] where $x/Id='D51FAE89-5DEC-3C10-8F6C-61CCE64EE9AF'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,306 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,310 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,310 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoVehicleCollisionCoverage'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,311 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:11,311 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoVehicleCollisionCoverage ] definition in database 
2015-01-01 16:06:11,311 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program VehicleIndicator
2015-01-01 16:06:11,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value VehicleIndicator
2015-01-01 16:06:11,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:11,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.AssignmentEvaluator.evaluate(AssignmentEvaluator.java:61) - Assign value at VehicleIndicator as [StringEvaluator] ''
2015-01-01 16:06:11,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,312 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : null
2015-01-01 16:06:11,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:62) - key words passed as variable : [null, true, false]
2015-01-01 16:06:11,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:59) - We received the xPath String as "../VehicleIndicator"
2015-01-01 16:06:11,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:88) - xpath in XpathEvaluator ../VehicleIndicator @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,313 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:112) - unique xpath in XpathEvaluator ../VehicleIndicator @ /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,314 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.executeSubProcess(XpathEvaluator.java:305) - Call the subprocess for ../VehicleIndicator with reference value as /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleIndicator
2015-01-01 16:06:11,314 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,314 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleIndicator returns false
2015-01-01 16:06:11,314 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:243) - We are in executeProgramSteps
2015-01-01 16:06:11,315 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.logCall(ProgramCallLog.java:77) - log call of the Program -> /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/VehicleIndicator
2015-01-01 16:06:11,315 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:264) - Check if object exists /SRERequest/CommercialAuto/CommercialAutoPublicTransportation
2015-01-01 16:06:11,315 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,315 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,317 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='6BA17098-D7C5-3E32-B553-2C5495A4E4BA'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='93BBD210-679F-4516-BA9F-3629CFE79583' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,318 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process F6962A4E-9DA3-3F15-A908-4C677D6E4731
2015-01-01 16:06:11,318 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='VehicleIndicator' ] where $x/Id='F6962A4E-9DA3-3F15-A908-4C677D6E4731'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,320 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='0E17C7FD-40B3-44B0-86AC-6858EBD58F49'  and $x/Title='ISO Commercial Auto CW 2' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,356 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,357 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,360 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProcessXMLDAO.getUniqueRecord(ProcessXMLDAO.java:118) - Process Query -> for $x in /Product/RatingEntity let $y := $x/RatingProcess [ .  and ExecutionOrder='0' ] where $x/Id='8AFE75FA-71DF-3053-986E-E81306C4C365'  and $x/Name='CommercialAutoPublicTransportation'  and $x/Product='0E17C7FD-40B3-44B0-86AC-6858EBD58F49' return <RatingProcess>{$y/*[local-name()=('Id','Name','ExecutionOrder','ProcessStep')]}</RatingProcess>
2015-01-01 16:06:11,362 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:532) - Rating process 2058ADF0-EBC5-3517-BC65-BA35EDE65B2F
2015-01-01 16:06:11,362 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.ProgramXMLDAO.getUniqueRecord(ProgramXMLDAO.java:79) - Program Query -> for $x in /Product/RatingEntity/RatingProcess let $y := $x/RatingProgram [ Name='VehicleIndicator' ] where $x/Id='2058ADF0-EBC5-3517-BC65-BA35EDE65B2F'  and $x/Name='Premium Calculation' return <RatingProgram>{$y/*[local-name()=('Id','Name','ExecutionOrder')]}</RatingProgram>
2015-01-01 16:06:11,364 [main] INFO  com.mmpnc.rating.dao.impl.xml.ProductXMLDAO.getUniqueRecord(ProductXMLDAO.java:67) - Product Query -> for $x in /Product where $x/Id='F1244B7F-10B4-43DB-9460-C59E72E21E9D'  and $x/Title='ISO Commercial Auto CW 1' return <Product>{$x/*[local-name()=('Id','Title','State','NewBusinessEffectiveDate','RenewalEffectiveDate','Product')]}</Product>
2015-01-01 16:06:11,369 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:493) - ******************************* we are in getRatingProgram ********************************
2015-01-01 16:06:11,369 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:69) - RatingEntity Query -> for $x in /Product/RatingEntity where $x/Name='CommercialAutoPublicTransportation'  and $x/Product='F1244B7F-10B4-43DB-9460-C59E72E21E9D' return <RatingEntity>{$x/*[local-name()=('Id','Name','Product')]}</RatingEntity>
2015-01-01 16:06:11,371 [main] INFO  com.mmpnc.rating.algorithm.dao.impl.xml.RatingEntityXMLDAO.getUniqueRecord(RatingEntityXMLDAO.java:96) - We received empty outputString for RatingEntity -> 
2015-01-01 16:06:11,371 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.getRatingProgram(ProcessBlockExecutor.java:516) - Could not find the rating entity [ CommercialAutoPublicTransportation ] definition in database 
2015-01-01 16:06:11,372 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeProgramSteps(ProcessBlockExecutor.java:324) - Did not find the program VehicleIndicator
2015-01-01 16:06:11,372 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.XpathEvaluator.evaluate(XpathEvaluator.java:135) - XPathEvaluator.evaluate returns corrected XPath : ../VehicleIndicator
2015-01-01 16:06:11,372 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns ->  boolean( ../VehicleIndicator ) 
2015-01-01 16:06:11,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:53) - Expression for condition is  boolean( ../VehicleIndicator ) 
2015-01-01 16:06:11,373 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.BooleanEvaluator.evaluate(BooleanEvaluator.java:54) - boolean value of expression is false
2015-01-01 16:06:11,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.IfEvaluator.evaluate(IfEvaluator.java:58) - Condition returns the boolean value as false
2015-01-01 16:06:11,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as ""
2015-01-01 16:06:11,374 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:54) - Base XPath in VarEvaluate.evaluate is /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage
2015-01-01 16:06:11,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:56) - value in varEvaluator is null : CoverageType
2015-01-01 16:06:11,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:80) - Check if Program is available for variable CoverageType
2015-01-01 16:06:11,375 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.executeSubProgram(VarEvaluator.java:185) - Call the subprocess for CoverageType
2015-01-01 16:06:11,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.executeBlockSteps(ProcessBlockExecutor.java:93) - We are in executeblocksteps
2015-01-01 16:06:11,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:11,376 [main] INFO  com.mmpnc.rating.algorithm.util.ProcessBlockExecutor.isBlockExecuted(ProcessBlockExecutor.java:426) - reference /SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType returns true
2015-01-01 16:06:11,377 [main] INFO  com.mmpnc.rating.algorithm.util.ProgramCallLog.isCalled(ProgramCallLog.java:113) - Program is called again/SRERequest/CommercialAuto/CommercialAutoPublicTransportation/CommercialAutoVehicleCollisionCoverage/CoverageType
2015-01-01 16:06:11,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.VarEvaluator.evaluate(VarEvaluator.java:144) - VarEvaluator.evaluate returns the value CoverageType
2015-01-01 16:06:11,377 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.NotEqualsEvaluator.evaluate(NotEqualsEvaluator.java:63) - Not Equal Evaluator returns -> CoverageType != ''
2015-01-01 16:06:11,378 [main] INFO  com.mmpnc.rating.algorithm.execute.evaluators.StringEvaluator.evaluate(StringEvaluator.java:37) - StringEvaluator.evaluate returns the value as "No Coverage"
